ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_EP_2_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_EP_2_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_EP_2_ISR, %function
  24              	USBFS_EP_2_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS_episr.c"
   1:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:.\Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USBFS_episr.c **** *
   5:.\Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USBFS_episr.c **** *
   8:.\Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  16:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  20:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  21:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  26:.\Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  28:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  29:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 2


  32:.\Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:.\Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  39:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  40:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  44:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  46:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  48:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USBFS_episr.c ****     
  55:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  56:.\Generated_Source\PSoC5/USBFS_episr.c ****             
  57:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  67:.\Generated_Source\PSoC5/USBFS_episr.c ****             
  68:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  70:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
  71:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  72:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  74:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  81:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  83:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 3


  89:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USBFS_episr.c ****     
  93:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  95:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  97:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 101:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 104:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 108:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 109:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 111:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 112:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  27              		.loc 1 121 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
 122:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 126:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 128:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 130:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 4


 136:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 137:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
  37              		.loc 1 137 0
  38 0004 104A     		ldr	r2, .L3
  39 0006 104B     		ldr	r3, .L3
  40 0008 1B78     		ldrb	r3, [r3]
  41 000a DBB2     		uxtb	r3, r3
  42 000c 23F00203 		bic	r3, r3, #2
  43 0010 DBB2     		uxtb	r3, r3
  44 0012 1370     		strb	r3, [r2]
 138:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 139:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
  45              		.loc 1 148 0
  46 0014 0D4B     		ldr	r3, .L3+4
  47 0016 93F82230 		ldrb	r3, [r3, #34]
 149:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 150:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
  48              		.loc 1 151 0
  49 001a 0D4B     		ldr	r3, .L3+8
  50 001c 1B7E     		ldrb	r3, [r3, #24]
  51 001e DBB2     		uxtb	r3, r3
  52 0020 03F00303 		and	r3, r3, #3
  53 0024 012B     		cmp	r3, #1
  54 0026 08D0     		beq	.L2
 152:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  55              		.loc 1 153 0
  56 0028 094B     		ldr	r3, .L3+8
  57 002a DB7E     		ldrb	r3, [r3, #27]
  58 002c DBB2     		uxtb	r3, r3
  59 002e 83F07F03 		eor	r3, r3, #127
  60 0032 DB43     		mvns	r3, r3
  61 0034 DAB2     		uxtb	r2, r3
  62 0036 064B     		ldr	r3, .L3+8
  63 0038 DA76     		strb	r2, [r3, #27]
  64              	.L2:
 154:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 156:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
  65              		.loc 1 162 0
  66 003a 054B     		ldr	r3, .L3+8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 5


  67 003c 0122     		movs	r2, #1
  68 003e 5A76     		strb	r2, [r3, #25]
 163:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 165:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 170:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 175:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 177:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 179:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 183:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 186:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
  69              		.loc 1 189 0
  70 0040 BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0042 5DF8047B 		ldr	r7, [sp], #4
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 0046 7047     		bx	lr
  77              	.L4:
  78              		.align	2
  79              	.L3:
  80 0048 0B600040 		.word	1073766411
  81 004c FC5F0040 		.word	1073766396
  82 0050 00000000 		.word	USBFS_EP
  83              		.cfi_endproc
  84              	.LFE0:
  85              		.size	USBFS_EP_2_ISR, .-USBFS_EP_2_ISR
  86              		.section	.text.USBFS_SOF_ISR,"ax",%progbits
  87              		.align	2
  88              		.global	USBFS_SOF_ISR
  89              		.thumb
  90              		.thumb_func
  91              		.type	USBFS_SOF_ISR, %function
  92              	USBFS_SOF_ISR:
  93              	.LFB1:
 190:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 192:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 6


 193:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 203:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 207:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 209:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 211:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 218:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 220:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 231:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 237:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 246:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 7


 250:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 256:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 258:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 260:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 264:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 267:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 271:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 273:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 274:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 284:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 288:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 290:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 292:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 299:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 301:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 8


 307:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 312:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 318:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 327:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 334:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 337:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 339:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 341:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 345:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 348:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 352:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 354:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 355:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 9


 364:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 366:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 370:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 372:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 374:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 381:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 383:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 394:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 397:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 400:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 409:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 419:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 10


 421:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 423:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 427:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 430:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 434:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 436:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 437:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 448:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
 451:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 452:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 454:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 456:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 459:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 463:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 465:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 475:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 476:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 11


 478:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 482:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 489:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 491:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 501:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 503:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 505:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
 508:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 509:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 512:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 516:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 518:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 519:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 534:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 12


 535:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 536:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 538:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 545:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 547:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 558:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 564:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 573:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 574:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 584:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 586:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 588:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 13


 592:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 595:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 601:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 602:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 617:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 619:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 621:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 622:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 628:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 630:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 641:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 647:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 14


 649:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 653:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 656:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 666:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 668:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 670:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 674:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 677:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 679:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 683:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 684:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  94              		.loc 1 694 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 695:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 15


 696:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 699:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 701:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 703:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 705:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 104              		.loc 1 708 0
 105 0004 BD46     		mov	sp, r7
 106              		.cfi_def_cfa_register 13
 107              		@ sp needed
 108 0006 5DF8047B 		ldr	r7, [sp], #4
 109              		.cfi_restore 7
 110              		.cfi_def_cfa_offset 0
 111 000a 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE1:
 114              		.size	USBFS_SOF_ISR, .-USBFS_SOF_ISR
 115              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 116              		.align	2
 117              		.global	USBFS_BUS_RESET_ISR
 118              		.thumb
 119              		.thumb_func
 120              		.type	USBFS_BUS_RESET_ISR, %function
 121              	USBFS_BUS_RESET_ISR:
 122              	.LFB2:
 709:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 711:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 712:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 717:.\Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 720:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 721:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USBFS_episr.c **** {
 123              		.loc 1 723 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127 0000 80B5     		push	{r7, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 16


 724:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 728:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 730:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 732:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 734:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 133              		.loc 1 734 0
 134 0004 FFF7FEFF 		bl	USBFS_ReInitComponent
 735:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 736:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_EXIT_CALLBACK
 737:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_ExitCallback();
 738:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:.\Generated_Source\PSoC5/USBFS_episr.c **** }
 135              		.loc 1 739 0
 136 0008 80BD     		pop	{r7, pc}
 137              		.cfi_endproc
 138              	.LFE2:
 139              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 140 000a 00BF     		.section	.text.USBFS_ARB_ISR,"ax",%progbits
 141              		.align	2
 142              		.global	USBFS_ARB_ISR
 143              		.thumb
 144              		.thumb_func
 145              		.type	USBFS_ARB_ISR, %function
 146              	USBFS_ARB_ISR:
 147              	.LFB3:
 740:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ACTIVE) */
 741:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 742:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 743:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_LPM_ACTIVE)
 744:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************
 745:.\Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_INTR_LPM_ISR
 746:.\Generated_Source\PSoC5/USBFS_episr.c **** ************************************************************************//**
 747:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 748:.\Generated_Source\PSoC5/USBFS_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 750:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 751:.\Generated_Source\PSoC5/USBFS_episr.c **** ***************************************************************************/
 752:.\Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_LPM_ISR)
 753:.\Generated_Source\PSoC5/USBFS_episr.c **** {
 754:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_ENTRY_CALLBACK
 755:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_LPM_ISR_EntryCallback();
 756:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_ENTRY_CALLBACK) */
 757:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 758:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 760:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 761:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 762:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_LPM_INTR);
 763:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 764:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 17


 766:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 767:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 768:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_EXIT_CALLBACK
 769:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_LPM_ISR_ExitCallback();
 770:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_EXIT_CALLBACK) */
 771:.\Generated_Source\PSoC5/USBFS_episr.c **** }
 772:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ACTIVE) */
 773:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 774:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 775:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 776:.\Generated_Source\PSoC5/USBFS_episr.c ****     /***************************************************************************
 777:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_ARB_ISR
 778:.\Generated_Source\PSoC5/USBFS_episr.c ****     ************************************************************************//**
 779:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 780:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 782:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 783:.\Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************/
 784:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_ARB_ISR)
 785:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 148              		.loc 1 785 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153 0000 90B4     		push	{r4, r7}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 7, -4
 157 0002 82B0     		sub	sp, sp, #8
 158              		.cfi_def_cfa_offset 16
 159 0004 00AF     		add	r7, sp, #0
 160              		.cfi_def_cfa_register 7
 786:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 arbIntrStatus;
 787:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 epStatus;
 788:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ep = USBFS_EP1;
 161              		.loc 1 788 0
 162 0006 0123     		movs	r3, #1
 163 0008 BB71     		strb	r3, [r7, #6]
 789:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 790:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_ENTRY_CALLBACK
 791:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_ISR_EntryCallback();
 792:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_ENTRY_CALLBACK) */
 793:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 794:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 796:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 797:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 798:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Get pending ARB interrupt sources. */
 799:.\Generated_Source\PSoC5/USBFS_episr.c ****         arbIntrStatus = USBFS_ARB_INT_SR_REG;
 164              		.loc 1 799 0
 165 000a 394B     		ldr	r3, .L13
 166 000c 1B78     		ldrb	r3, [r3]
 167 000e FB71     		strb	r3, [r7, #7]
 800:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 801:.\Generated_Source\PSoC5/USBFS_episr.c ****         while (0u != arbIntrStatus)
 168              		.loc 1 801 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 18


 169 0010 67E0     		b	.L8
 170              	.L12:
 802:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 803:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Check which EP is interrupt source. */
 804:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 171              		.loc 1 804 0
 172 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 173 0014 03F00103 		and	r3, r3, #1
 174 0018 002B     		cmp	r3, #0
 175 001a 5CD0     		beq	.L9
 805:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 806:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:.\Generated_Source\PSoC5/USBFS_episr.c ****                 epStatus = (USBFS_ARB_EP_BASE.arbEp[ep].epSr & USBFS_ARB_EP_BASE.arbEp[ep].epIntEn)
 176              		.loc 1 807 0
 177 001c 354A     		ldr	r2, .L13+4
 178 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 179 0020 1B01     		lsls	r3, r3, #4
 180 0022 1344     		add	r3, r3, r2
 181 0024 9B78     		ldrb	r3, [r3, #2]
 182 0026 DAB2     		uxtb	r2, r3
 183 0028 3249     		ldr	r1, .L13+4
 184 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 185 002c 1B01     		lsls	r3, r3, #4
 186 002e 0B44     		add	r3, r3, r1
 187 0030 5B78     		ldrb	r3, [r3, #1]
 188 0032 DBB2     		uxtb	r3, r3
 189 0034 1340     		ands	r3, r3, r2
 190 0036 7B71     		strb	r3, [r7, #5]
 808:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 809:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_IN_BUF_FULL))
 191              		.loc 1 810 0
 192 0038 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 193 003a 03F00103 		and	r3, r3, #1
 194 003e 002B     		cmp	r3, #0
 195 0040 28D0     		beq	.L10
 811:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
 812:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u != (USBFS_EP[ep].addr & USBFS_DIR_IN))
 196              		.loc 1 812 0
 197 0042 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 198 0044 2C49     		ldr	r1, .L13+8
 199 0046 1346     		mov	r3, r2
 200 0048 5B00     		lsls	r3, r3, #1
 201 004a 1344     		add	r3, r3, r2
 202 004c 9B00     		lsls	r3, r3, #2
 203 004e 0B44     		add	r3, r3, r1
 204 0050 1B79     		ldrb	r3, [r3, #4]
 205 0052 DBB2     		uxtb	r3, r3
 206 0054 DBB2     		uxtb	r3, r3
 207 0056 5BB2     		sxtb	r3, r3
 208 0058 002B     		cmp	r3, #0
 209 005a 1BDA     		bge	.L10
 813:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 814:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Clear data ready status. */
 815:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_ARB_EP_BASE.arbEp[ep].epCfg &= (uint8) ~USBFS_ARB_EPX_CFG_IN_DATA_RDY
 210              		.loc 1 815 0
 211 005c 2549     		ldr	r1, .L13+4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 19


 212 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 213 0060 2448     		ldr	r0, .L13+4
 214 0062 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 215 0064 1201     		lsls	r2, r2, #4
 216 0066 0244     		add	r2, r2, r0
 217 0068 1278     		ldrb	r2, [r2]
 218 006a D2B2     		uxtb	r2, r2
 219 006c 22F00102 		bic	r2, r2, #1
 220 0070 D2B2     		uxtb	r2, r2
 221 0072 1B01     		lsls	r3, r3, #4
 222 0074 0B44     		add	r3, r3, r1
 223 0076 1A70     		strb	r2, [r3]
 816:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 817:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:.\Generated_Source\PSoC5/USBFS_episr.c ****                         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 819:.\Generated_Source\PSoC5/USBFS_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:.\Generated_Source\PSoC5/USBFS_episr.c ****                             if(USBFS_inLength[ep] > USBFS_DMA_BYTES_PER_BURST)
 821:.\Generated_Source\PSoC5/USBFS_episr.c ****                             {
 822:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_LoadNextInEP(ep, 0u);
 823:.\Generated_Source\PSoC5/USBFS_episr.c ****                             }
 824:.\Generated_Source\PSoC5/USBFS_episr.c ****                             else
 825:.\Generated_Source\PSoC5/USBFS_episr.c ****                             {
 826:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_inBufFull[ep] = 1u;
 827:.\Generated_Source\PSoC5/USBFS_episr.c ****                             }
 828:.\Generated_Source\PSoC5/USBFS_episr.c ****                         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) *
 829:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 831:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Arm IN endpoint. */
 832:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_SIE_EP_BASE.sieEp[ep].epCr0 = USBFS_EP[ep].epMode;
 224              		.loc 1 832 0
 225 0078 2048     		ldr	r0, .L13+12
 226 007a B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 227 007c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 228 007e 1E4C     		ldr	r4, .L13+8
 229 0080 1346     		mov	r3, r2
 230 0082 5B00     		lsls	r3, r3, #1
 231 0084 1344     		add	r3, r3, r2
 232 0086 9B00     		lsls	r3, r3, #2
 233 0088 2344     		add	r3, r3, r4
 234 008a 5B79     		ldrb	r3, [r3, #5]
 235 008c DAB2     		uxtb	r2, r3
 236 008e 0B01     		lsls	r3, r1, #4
 237 0090 0344     		add	r3, r3, r0
 238 0092 9A70     		strb	r2, [r3, #2]
 239              	.L10:
 833:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 834:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && USBFS_ISR_SERVICE_MIDI_IN)
 835:.\Generated_Source\PSoC5/USBFS_episr.c ****                         if (ep == USBFS_midi_in_ep)
 836:.\Generated_Source\PSoC5/USBFS_episr.c ****                         {
 837:.\Generated_Source\PSoC5/USBFS_episr.c ****                             /* Clear MIDI input pointer. */
 838:.\Generated_Source\PSoC5/USBFS_episr.c ****                             USBFS_midiInPointer = 0u;
 839:.\Generated_Source\PSoC5/USBFS_episr.c ****                         }
 840:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #endif /* (USBFS_ENABLE_MIDI_STREAMING) */
 841:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 842:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 843:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 844:.\Generated_Source\PSoC5/USBFS_episr.c ****             #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 20


 845:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_SR_DMA_GNT))
 240              		.loc 1 846 0
 241 0094 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 242 0096 03F00203 		and	r3, r3, #2
 243 009a 002B     		cmp	r3, #0
 244 009c 15D0     		beq	.L11
 847:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
 848:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u == (USBFS_EP[ep].addr & USBFS_DIR_IN))
 245              		.loc 1 848 0
 246 009e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 247 00a0 1549     		ldr	r1, .L13+8
 248 00a2 1346     		mov	r3, r2
 249 00a4 5B00     		lsls	r3, r3, #1
 250 00a6 1344     		add	r3, r3, r2
 251 00a8 9B00     		lsls	r3, r3, #2
 252 00aa 0B44     		add	r3, r3, r1
 253 00ac 1B79     		ldrb	r3, [r3, #4]
 254 00ae DBB2     		uxtb	r3, r3
 255 00b0 DBB2     		uxtb	r3, r3
 256 00b2 5BB2     		sxtb	r3, r3
 257 00b4 002B     		cmp	r3, #0
 258 00b6 08DB     		blt	.L11
 849:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 850:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 259              		.loc 1 851 0
 260 00b8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 261 00ba 0F49     		ldr	r1, .L13+8
 262 00bc 1346     		mov	r3, r2
 263 00be 5B00     		lsls	r3, r3, #1
 264 00c0 1344     		add	r3, r3, r2
 265 00c2 9B00     		lsls	r3, r3, #2
 266 00c4 0B44     		add	r3, r3, r1
 267 00c6 0022     		movs	r2, #0
 268 00c8 5A70     		strb	r2, [r3, #1]
 269              	.L11:
 852:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 853:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 855:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 856:.\Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
 857:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 858:.\Generated_Source\PSoC5/USBFS_episr.c ****             #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 859:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_DMA_TERMIN))
 861:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
 862:.\Generated_Source\PSoC5/USBFS_episr.c ****                     uint32 channelNum = USBFS_DmaChan[ep];
 863:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 864:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore burst counter for endpoint. */
 865:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_DmaEpBurstCnt[ep] = USBFS_DmaEpBurstCntBackup[ep];
 866:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 867:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaChDisable(channelNum);
 869:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 870:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:.\Generated_Source\PSoC5/USBFS_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 21


 872:.\Generated_Source\PSoC5/USBFS_episr.c ****                     */
 873:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaTriggerOut(USBFS_DmaBurstEndOut[ep]);
 874:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 875:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore destination address for output endpoint. */
 876:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
 877:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
 878:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                                    
 879:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 880:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u != (USBFS_DmaEpLastBurstEl[ep] & USBFS_DMA_DESCR_REVERT))
 882:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 883:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_CyDmaSetNumDataElements(channelNum, (USBFS_DmaEpLastBurstEl[ep] >> US
 884:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                              USBFS_DMA_GET_MAX_ELEM
 885:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 886:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 887:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
 889:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
 890:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
 891:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 892:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Enable DMA channel: configuration complete. */
 893:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaChEnable(channelNum);
 894:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 895:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 896:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 897:.\Generated_Source\PSoC5/USBFS_episr.c ****                     (void) USBFS_SIE_EP_BASE.sieEp[ep].epCr0;
 898:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 899:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 900:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_GET_EP_TYPE(ep) != USBFS_EP_TYPE_ISOC)
 901:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 902:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_EP[ep].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 903:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 904:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 905:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 906:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_EP[ep].apiEpState = USBFS_EVENT_PENDING;
 907:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 908:.\Generated_Source\PSoC5/USBFS_episr.c ****                 #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 909:.\Generated_Source\PSoC5/USBFS_episr.c ****                     !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 910:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_midi_out_ep == ep)
 911:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 912:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_MIDI_OUT_Service();
 913:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 914:.\Generated_Source\PSoC5/USBFS_episr.c ****                 #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 915:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 916:.\Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 917:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 918:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 919:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 920:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 921:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#END` */
 922:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 923:.\Generated_Source\PSoC5/USBFS_episr.c ****             #ifdef USBFS_ARB_ISR_CALLBACK
 924:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_ISR_Callback(ep, epStatus);
 925:.\Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (USBFS_ARB_ISR_CALLBACK) */
 926:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 927:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 928:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 22


 270              		.loc 1 928 0
 271 00ca 0A4A     		ldr	r2, .L13+4
 272 00cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 273 00ce 1B01     		lsls	r3, r3, #4
 274 00d0 1344     		add	r3, r3, r2
 275 00d2 7A79     		ldrb	r2, [r7, #5]
 276 00d4 9A70     		strb	r2, [r3, #2]
 277              	.L9:
 929:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 930:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 931:.\Generated_Source\PSoC5/USBFS_episr.c ****             ++ep;
 278              		.loc 1 931 0
 279 00d6 BB79     		ldrb	r3, [r7, #6]
 280 00d8 0133     		adds	r3, r3, #1
 281 00da BB71     		strb	r3, [r7, #6]
 932:.\Generated_Source\PSoC5/USBFS_episr.c ****             arbIntrStatus >>= 1u;
 282              		.loc 1 932 0
 283 00dc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 284 00de 5B08     		lsrs	r3, r3, #1
 285 00e0 FB71     		strb	r3, [r7, #7]
 286              	.L8:
 801:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 287              		.loc 1 801 0
 288 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 289 00e4 002B     		cmp	r3, #0
 290 00e6 94D1     		bne	.L12
 933:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 934:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 935:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 936:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 937:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 938:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 939:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_EXIT_CALLBACK
 940:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_ISR_ExitCallback();
 941:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_EXIT_CALLBACK) */
 942:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 291              		.loc 1 942 0
 292 00e8 0837     		adds	r7, r7, #8
 293              		.cfi_def_cfa_offset 8
 294 00ea BD46     		mov	sp, r7
 295              		.cfi_def_cfa_register 13
 296              		@ sp needed
 297 00ec 90BC     		pop	{r4, r7}
 298              		.cfi_restore 7
 299              		.cfi_restore 4
 300              		.cfi_def_cfa_offset 0
 301 00ee 7047     		bx	lr
 302              	.L14:
 303              		.align	2
 304              	.L13:
 305 00f0 9F600040 		.word	1073766559
 306 00f4 70600040 		.word	1073766512
 307 00f8 00000000 		.word	USBFS_EP
 308 00fc FC5F0040 		.word	1073766396
 309              		.cfi_endproc
 310              	.LFE3:
 311              		.size	USBFS_ARB_ISR, .-USBFS_ARB_ISR
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 23


 312              		.text
 313              	.Letext0:
 314              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 315              		.file 3 ".\\Generated_Source\\PSoC5\\USBFS.h"
 316              		.file 4 ".\\Generated_Source\\PSoC5\\USBFS_pvt.h"
 317              		.section	.debug_info,"",%progbits
 318              	.Ldebug_info0:
 319 0000 1B030000 		.4byte	0x31b
 320 0004 0400     		.2byte	0x4
 321 0006 00000000 		.4byte	.Ldebug_abbrev0
 322 000a 04       		.byte	0x4
 323 000b 01       		.uleb128 0x1
 324 000c 66020000 		.4byte	.LASF49
 325 0010 01       		.byte	0x1
 326 0011 2B010000 		.4byte	.LASF50
 327 0015 00000000 		.4byte	.LASF51
 328 0019 00000000 		.4byte	.Ldebug_ranges0+0
 329 001d 00000000 		.4byte	0
 330 0021 00000000 		.4byte	.Ldebug_line0
 331 0025 02       		.uleb128 0x2
 332 0026 01       		.byte	0x1
 333 0027 06       		.byte	0x6
 334 0028 36030000 		.4byte	.LASF0
 335 002c 02       		.uleb128 0x2
 336 002d 01       		.byte	0x1
 337 002e 08       		.byte	0x8
 338 002f 1D010000 		.4byte	.LASF1
 339 0033 02       		.uleb128 0x2
 340 0034 02       		.byte	0x2
 341 0035 05       		.byte	0x5
 342 0036 FF020000 		.4byte	.LASF2
 343 003a 02       		.uleb128 0x2
 344 003b 02       		.byte	0x2
 345 003c 07       		.byte	0x7
 346 003d B6000000 		.4byte	.LASF3
 347 0041 02       		.uleb128 0x2
 348 0042 04       		.byte	0x4
 349 0043 05       		.byte	0x5
 350 0044 1E030000 		.4byte	.LASF4
 351 0048 02       		.uleb128 0x2
 352 0049 04       		.byte	0x4
 353 004a 07       		.byte	0x7
 354 004b 62010000 		.4byte	.LASF5
 355 004f 02       		.uleb128 0x2
 356 0050 08       		.byte	0x8
 357 0051 05       		.byte	0x5
 358 0052 4A020000 		.4byte	.LASF6
 359 0056 02       		.uleb128 0x2
 360 0057 08       		.byte	0x8
 361 0058 07       		.byte	0x7
 362 0059 FE010000 		.4byte	.LASF7
 363 005d 03       		.uleb128 0x3
 364 005e 04       		.byte	0x4
 365 005f 05       		.byte	0x5
 366 0060 696E7400 		.ascii	"int\000"
 367 0064 02       		.uleb128 0x2
 368 0065 04       		.byte	0x4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 24


 369 0066 07       		.byte	0x7
 370 0067 E9010000 		.4byte	.LASF8
 371 006b 04       		.uleb128 0x4
 372 006c 0E030000 		.4byte	.LASF9
 373 0070 02       		.byte	0x2
 374 0071 3801     		.2byte	0x138
 375 0073 2C000000 		.4byte	0x2c
 376 0077 04       		.uleb128 0x4
 377 0078 C8010000 		.4byte	.LASF10
 378 007c 02       		.byte	0x2
 379 007d 3901     		.2byte	0x139
 380 007f 3A000000 		.4byte	0x3a
 381 0083 02       		.uleb128 0x2
 382 0084 04       		.byte	0x4
 383 0085 04       		.byte	0x4
 384 0086 93000000 		.4byte	.LASF11
 385 008a 02       		.uleb128 0x2
 386 008b 08       		.byte	0x8
 387 008c 04       		.byte	0x4
 388 008d 9A010000 		.4byte	.LASF12
 389 0091 02       		.uleb128 0x2
 390 0092 01       		.byte	0x1
 391 0093 08       		.byte	0x8
 392 0094 61020000 		.4byte	.LASF13
 393 0098 04       		.uleb128 0x4
 394 0099 52010000 		.4byte	.LASF14
 395 009d 02       		.byte	0x2
 396 009e E201     		.2byte	0x1e2
 397 00a0 A4000000 		.4byte	0xa4
 398 00a4 05       		.uleb128 0x5
 399 00a5 6B000000 		.4byte	0x6b
 400 00a9 02       		.uleb128 0x2
 401 00aa 04       		.byte	0x4
 402 00ab 07       		.byte	0x7
 403 00ac 58020000 		.4byte	.LASF15
 404 00b0 06       		.uleb128 0x6
 405 00b1 0C       		.byte	0xc
 406 00b2 03       		.byte	0x3
 407 00b3 8C       		.byte	0x8c
 408 00b4 25010000 		.4byte	0x125
 409 00b8 07       		.uleb128 0x7
 410 00b9 3C020000 		.4byte	.LASF16
 411 00bd 03       		.byte	0x3
 412 00be 8E       		.byte	0x8e
 413 00bf 6B000000 		.4byte	0x6b
 414 00c3 00       		.byte	0
 415 00c4 07       		.uleb128 0x7
 416 00c5 57010000 		.4byte	.LASF17
 417 00c9 03       		.byte	0x3
 418 00ca 8F       		.byte	0x8f
 419 00cb 6B000000 		.4byte	0x6b
 420 00cf 01       		.byte	0x1
 421 00d0 07       		.uleb128 0x7
 422 00d1 15020000 		.4byte	.LASF18
 423 00d5 03       		.byte	0x3
 424 00d6 90       		.byte	0x90
 425 00d7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 25


 426 00db 02       		.byte	0x2
 427 00dc 07       		.uleb128 0x7
 428 00dd 14010000 		.4byte	.LASF19
 429 00e1 03       		.byte	0x3
 430 00e2 91       		.byte	0x91
 431 00e3 6B000000 		.4byte	0x6b
 432 00e7 03       		.byte	0x3
 433 00e8 07       		.uleb128 0x7
 434 00e9 74010000 		.4byte	.LASF20
 435 00ed 03       		.byte	0x3
 436 00ee 92       		.byte	0x92
 437 00ef 6B000000 		.4byte	0x6b
 438 00f3 04       		.byte	0x4
 439 00f4 07       		.uleb128 0x7
 440 00f5 43020000 		.4byte	.LASF21
 441 00f9 03       		.byte	0x3
 442 00fa 93       		.byte	0x93
 443 00fb 6B000000 		.4byte	0x6b
 444 00ff 05       		.byte	0x5
 445 0100 07       		.uleb128 0x7
 446 0101 B5010000 		.4byte	.LASF22
 447 0105 03       		.byte	0x3
 448 0106 94       		.byte	0x94
 449 0107 77000000 		.4byte	0x77
 450 010b 06       		.byte	0x6
 451 010c 07       		.uleb128 0x7
 452 010d F4020000 		.4byte	.LASF23
 453 0111 03       		.byte	0x3
 454 0112 95       		.byte	0x95
 455 0113 77000000 		.4byte	0x77
 456 0117 08       		.byte	0x8
 457 0118 07       		.uleb128 0x7
 458 0119 14030000 		.4byte	.LASF24
 459 011d 03       		.byte	0x3
 460 011e 96       		.byte	0x96
 461 011f 6B000000 		.4byte	0x6b
 462 0123 0A       		.byte	0xa
 463 0124 00       		.byte	0
 464 0125 08       		.uleb128 0x8
 465 0126 CF000000 		.4byte	.LASF25
 466 012a 03       		.byte	0x3
 467 012b 97       		.byte	0x97
 468 012c B0000000 		.4byte	0xb0
 469 0130 06       		.uleb128 0x6
 470 0131 10       		.byte	0x10
 471 0132 03       		.byte	0x3
 472 0133 D3       		.byte	0xd3
 473 0134 69010000 		.4byte	0x169
 474 0138 07       		.uleb128 0x7
 475 0139 06010000 		.4byte	.LASF26
 476 013d 03       		.byte	0x3
 477 013e D5       		.byte	0xd5
 478 013f 6B000000 		.4byte	0x6b
 479 0143 00       		.byte	0
 480 0144 07       		.uleb128 0x7
 481 0145 0D010000 		.4byte	.LASF27
 482 0149 03       		.byte	0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 26


 483 014a D6       		.byte	0xd6
 484 014b 6B000000 		.4byte	0x6b
 485 014f 01       		.byte	0x1
 486 0150 07       		.uleb128 0x7
 487 0151 84000000 		.4byte	.LASF28
 488 0155 03       		.byte	0x3
 489 0156 D7       		.byte	0xd7
 490 0157 6B000000 		.4byte	0x6b
 491 015b 02       		.byte	0x2
 492 015c 09       		.uleb128 0x9
 493 015d 67617000 		.ascii	"gap\000"
 494 0161 03       		.byte	0x3
 495 0162 D8       		.byte	0xd8
 496 0163 69010000 		.4byte	0x169
 497 0167 03       		.byte	0x3
 498 0168 00       		.byte	0
 499 0169 0A       		.uleb128 0xa
 500 016a 6B000000 		.4byte	0x6b
 501 016e 79010000 		.4byte	0x179
 502 0172 0B       		.uleb128 0xb
 503 0173 A9000000 		.4byte	0xa9
 504 0177 0C       		.byte	0xc
 505 0178 00       		.byte	0
 506 0179 08       		.uleb128 0x8
 507 017a A1010000 		.4byte	.LASF29
 508 017e 03       		.byte	0x3
 509 017f D9       		.byte	0xd9
 510 0180 30010000 		.4byte	0x130
 511 0184 06       		.uleb128 0x6
 512 0185 10       		.byte	0x10
 513 0186 03       		.byte	0x3
 514 0187 E5       		.byte	0xe5
 515 0188 05020000 		.4byte	0x205
 516 018c 07       		.uleb128 0x7
 517 018d C9000000 		.4byte	.LASF30
 518 0191 03       		.byte	0x3
 519 0192 E7       		.byte	0xe7
 520 0193 6B000000 		.4byte	0x6b
 521 0197 00       		.byte	0
 522 0198 07       		.uleb128 0x7
 523 0199 1F020000 		.4byte	.LASF31
 524 019d 03       		.byte	0x3
 525 019e E8       		.byte	0xe8
 526 019f 6B000000 		.4byte	0x6b
 527 01a3 01       		.byte	0x1
 528 01a4 07       		.uleb128 0x7
 529 01a5 87010000 		.4byte	.LASF32
 530 01a9 03       		.byte	0x3
 531 01aa E9       		.byte	0xe9
 532 01ab 6B000000 		.4byte	0x6b
 533 01af 02       		.byte	0x2
 534 01b0 07       		.uleb128 0x7
 535 01b1 99000000 		.4byte	.LASF33
 536 01b5 03       		.byte	0x3
 537 01b6 EA       		.byte	0xea
 538 01b7 6B000000 		.4byte	0x6b
 539 01bb 03       		.byte	0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 27


 540 01bc 07       		.uleb128 0x7
 541 01bd 95010000 		.4byte	.LASF34
 542 01c1 03       		.byte	0x3
 543 01c2 EB       		.byte	0xeb
 544 01c3 6B000000 		.4byte	0x6b
 545 01c7 04       		.byte	0x4
 546 01c8 07       		.uleb128 0x7
 547 01c9 C0010000 		.4byte	.LASF35
 548 01cd 03       		.byte	0x3
 549 01ce EC       		.byte	0xec
 550 01cf 6B000000 		.4byte	0x6b
 551 01d3 05       		.byte	0x5
 552 01d4 07       		.uleb128 0x7
 553 01d5 09030000 		.4byte	.LASF36
 554 01d9 03       		.byte	0x3
 555 01da ED       		.byte	0xed
 556 01db 6B000000 		.4byte	0x6b
 557 01df 06       		.byte	0x6
 558 01e0 07       		.uleb128 0x7
 559 01e1 F6010000 		.4byte	.LASF37
 560 01e5 03       		.byte	0x3
 561 01e6 EE       		.byte	0xee
 562 01e7 6B000000 		.4byte	0x6b
 563 01eb 07       		.byte	0x7
 564 01ec 07       		.uleb128 0x7
 565 01ed E4010000 		.4byte	.LASF38
 566 01f1 03       		.byte	0x3
 567 01f2 EF       		.byte	0xef
 568 01f3 6B000000 		.4byte	0x6b
 569 01f7 08       		.byte	0x8
 570 01f8 09       		.uleb128 0x9
 571 01f9 67617000 		.ascii	"gap\000"
 572 01fd 03       		.byte	0x3
 573 01fe F0       		.byte	0xf0
 574 01ff 05020000 		.4byte	0x205
 575 0203 09       		.byte	0x9
 576 0204 00       		.byte	0
 577 0205 0A       		.uleb128 0xa
 578 0206 6B000000 		.4byte	0x6b
 579 020a 15020000 		.4byte	0x215
 580 020e 0B       		.uleb128 0xb
 581 020f A9000000 		.4byte	0xa9
 582 0213 06       		.byte	0x6
 583 0214 00       		.byte	0
 584 0215 08       		.uleb128 0x8
 585 0216 A2000000 		.4byte	.LASF39
 586 021a 03       		.byte	0x3
 587 021b F1       		.byte	0xf1
 588 021c 84010000 		.4byte	0x184
 589 0220 0C       		.uleb128 0xc
 590 0221 90       		.byte	0x90
 591 0222 03       		.byte	0x3
 592 0223 0D01     		.2byte	0x10d
 593 0225 37020000 		.4byte	0x237
 594 0229 0D       		.uleb128 0xd
 595 022a 50030000 		.4byte	.LASF40
 596 022e 03       		.byte	0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 28


 597 022f 0F01     		.2byte	0x10f
 598 0231 37020000 		.4byte	0x237
 599 0235 00       		.byte	0
 600 0236 00       		.byte	0
 601 0237 0A       		.uleb128 0xa
 602 0238 79010000 		.4byte	0x179
 603 023c 47020000 		.4byte	0x247
 604 0240 0B       		.uleb128 0xb
 605 0241 A9000000 		.4byte	0xa9
 606 0245 08       		.byte	0x8
 607 0246 00       		.byte	0
 608 0247 04       		.uleb128 0x4
 609 0248 CF010000 		.4byte	.LASF41
 610 024c 03       		.byte	0x3
 611 024d 1001     		.2byte	0x110
 612 024f 20020000 		.4byte	0x220
 613 0253 0C       		.uleb128 0xc
 614 0254 90       		.byte	0x90
 615 0255 03       		.byte	0x3
 616 0256 1301     		.2byte	0x113
 617 0258 6A020000 		.4byte	0x26a
 618 025c 0D       		.uleb128 0xd
 619 025d 7E000000 		.4byte	.LASF42
 620 0261 03       		.byte	0x3
 621 0262 1501     		.2byte	0x115
 622 0264 6A020000 		.4byte	0x26a
 623 0268 00       		.byte	0
 624 0269 00       		.byte	0
 625 026a 0A       		.uleb128 0xa
 626 026b 15020000 		.4byte	0x215
 627 026f 7A020000 		.4byte	0x27a
 628 0273 0B       		.uleb128 0xb
 629 0274 A9000000 		.4byte	0xa9
 630 0278 08       		.byte	0x8
 631 0279 00       		.byte	0
 632 027a 04       		.uleb128 0x4
 633 027b 27020000 		.4byte	.LASF43
 634 027f 03       		.byte	0x3
 635 0280 1601     		.2byte	0x116
 636 0282 53020000 		.4byte	0x253
 637 0286 0E       		.uleb128 0xe
 638 0287 27030000 		.4byte	.LASF44
 639 028b 01       		.byte	0x1
 640 028c 78       		.byte	0x78
 641 028d 00000000 		.4byte	.LFB0
 642 0291 54000000 		.4byte	.LFE0-.LFB0
 643 0295 01       		.uleb128 0x1
 644 0296 9C       		.byte	0x9c
 645 0297 0F       		.uleb128 0xf
 646 0298 79010000 		.4byte	.LASF45
 647 029c 01       		.byte	0x1
 648 029d B502     		.2byte	0x2b5
 649 029f 00000000 		.4byte	.LFB1
 650 02a3 0C000000 		.4byte	.LFE1-.LFB1
 651 02a7 01       		.uleb128 0x1
 652 02a8 9C       		.byte	0x9c
 653 02a9 10       		.uleb128 0x10
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 29


 654 02aa E4000000 		.4byte	.LASF46
 655 02ae 01       		.byte	0x1
 656 02af D202     		.2byte	0x2d2
 657 02b1 00000000 		.4byte	.LFB2
 658 02b5 0A000000 		.4byte	.LFE2-.LFB2
 659 02b9 01       		.uleb128 0x1
 660 02ba 9C       		.byte	0x9c
 661 02bb 11       		.uleb128 0x11
 662 02bc 42030000 		.4byte	.LASF52
 663 02c0 01       		.byte	0x1
 664 02c1 1003     		.2byte	0x310
 665 02c3 00000000 		.4byte	.LFB3
 666 02c7 00010000 		.4byte	.LFE3-.LFB3
 667 02cb 01       		.uleb128 0x1
 668 02cc 9C       		.byte	0x9c
 669 02cd FE020000 		.4byte	0x2fe
 670 02d1 12       		.uleb128 0x12
 671 02d2 F8000000 		.4byte	.LASF47
 672 02d6 01       		.byte	0x1
 673 02d7 1203     		.2byte	0x312
 674 02d9 6B000000 		.4byte	0x6b
 675 02dd 02       		.uleb128 0x2
 676 02de 91       		.byte	0x91
 677 02df 77       		.sleb128 -9
 678 02e0 12       		.uleb128 0x12
 679 02e1 8A000000 		.4byte	.LASF48
 680 02e5 01       		.byte	0x1
 681 02e6 1303     		.2byte	0x313
 682 02e8 6B000000 		.4byte	0x6b
 683 02ec 02       		.uleb128 0x2
 684 02ed 91       		.byte	0x91
 685 02ee 75       		.sleb128 -11
 686 02ef 13       		.uleb128 0x13
 687 02f0 657000   		.ascii	"ep\000"
 688 02f3 01       		.byte	0x1
 689 02f4 1403     		.2byte	0x314
 690 02f6 6B000000 		.4byte	0x6b
 691 02fa 02       		.uleb128 0x2
 692 02fb 91       		.byte	0x91
 693 02fc 76       		.sleb128 -10
 694 02fd 00       		.byte	0
 695 02fe 0A       		.uleb128 0xa
 696 02ff 25010000 		.4byte	0x125
 697 0303 0E030000 		.4byte	0x30e
 698 0307 0B       		.uleb128 0xb
 699 0308 A9000000 		.4byte	0xa9
 700 030c 08       		.byte	0x8
 701 030d 00       		.byte	0
 702 030e 14       		.uleb128 0x14
 703 030f 8C010000 		.4byte	.LASF53
 704 0313 04       		.byte	0x4
 705 0314 78       		.byte	0x78
 706 0315 19030000 		.4byte	0x319
 707 0319 05       		.uleb128 0x5
 708 031a FE020000 		.4byte	0x2fe
 709 031e 00       		.byte	0
 710              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 30


 711              	.Ldebug_abbrev0:
 712 0000 01       		.uleb128 0x1
 713 0001 11       		.uleb128 0x11
 714 0002 01       		.byte	0x1
 715 0003 25       		.uleb128 0x25
 716 0004 0E       		.uleb128 0xe
 717 0005 13       		.uleb128 0x13
 718 0006 0B       		.uleb128 0xb
 719 0007 03       		.uleb128 0x3
 720 0008 0E       		.uleb128 0xe
 721 0009 1B       		.uleb128 0x1b
 722 000a 0E       		.uleb128 0xe
 723 000b 55       		.uleb128 0x55
 724 000c 17       		.uleb128 0x17
 725 000d 11       		.uleb128 0x11
 726 000e 01       		.uleb128 0x1
 727 000f 10       		.uleb128 0x10
 728 0010 17       		.uleb128 0x17
 729 0011 00       		.byte	0
 730 0012 00       		.byte	0
 731 0013 02       		.uleb128 0x2
 732 0014 24       		.uleb128 0x24
 733 0015 00       		.byte	0
 734 0016 0B       		.uleb128 0xb
 735 0017 0B       		.uleb128 0xb
 736 0018 3E       		.uleb128 0x3e
 737 0019 0B       		.uleb128 0xb
 738 001a 03       		.uleb128 0x3
 739 001b 0E       		.uleb128 0xe
 740 001c 00       		.byte	0
 741 001d 00       		.byte	0
 742 001e 03       		.uleb128 0x3
 743 001f 24       		.uleb128 0x24
 744 0020 00       		.byte	0
 745 0021 0B       		.uleb128 0xb
 746 0022 0B       		.uleb128 0xb
 747 0023 3E       		.uleb128 0x3e
 748 0024 0B       		.uleb128 0xb
 749 0025 03       		.uleb128 0x3
 750 0026 08       		.uleb128 0x8
 751 0027 00       		.byte	0
 752 0028 00       		.byte	0
 753 0029 04       		.uleb128 0x4
 754 002a 16       		.uleb128 0x16
 755 002b 00       		.byte	0
 756 002c 03       		.uleb128 0x3
 757 002d 0E       		.uleb128 0xe
 758 002e 3A       		.uleb128 0x3a
 759 002f 0B       		.uleb128 0xb
 760 0030 3B       		.uleb128 0x3b
 761 0031 05       		.uleb128 0x5
 762 0032 49       		.uleb128 0x49
 763 0033 13       		.uleb128 0x13
 764 0034 00       		.byte	0
 765 0035 00       		.byte	0
 766 0036 05       		.uleb128 0x5
 767 0037 35       		.uleb128 0x35
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 31


 768 0038 00       		.byte	0
 769 0039 49       		.uleb128 0x49
 770 003a 13       		.uleb128 0x13
 771 003b 00       		.byte	0
 772 003c 00       		.byte	0
 773 003d 06       		.uleb128 0x6
 774 003e 13       		.uleb128 0x13
 775 003f 01       		.byte	0x1
 776 0040 0B       		.uleb128 0xb
 777 0041 0B       		.uleb128 0xb
 778 0042 3A       		.uleb128 0x3a
 779 0043 0B       		.uleb128 0xb
 780 0044 3B       		.uleb128 0x3b
 781 0045 0B       		.uleb128 0xb
 782 0046 01       		.uleb128 0x1
 783 0047 13       		.uleb128 0x13
 784 0048 00       		.byte	0
 785 0049 00       		.byte	0
 786 004a 07       		.uleb128 0x7
 787 004b 0D       		.uleb128 0xd
 788 004c 00       		.byte	0
 789 004d 03       		.uleb128 0x3
 790 004e 0E       		.uleb128 0xe
 791 004f 3A       		.uleb128 0x3a
 792 0050 0B       		.uleb128 0xb
 793 0051 3B       		.uleb128 0x3b
 794 0052 0B       		.uleb128 0xb
 795 0053 49       		.uleb128 0x49
 796 0054 13       		.uleb128 0x13
 797 0055 38       		.uleb128 0x38
 798 0056 0B       		.uleb128 0xb
 799 0057 00       		.byte	0
 800 0058 00       		.byte	0
 801 0059 08       		.uleb128 0x8
 802 005a 16       		.uleb128 0x16
 803 005b 00       		.byte	0
 804 005c 03       		.uleb128 0x3
 805 005d 0E       		.uleb128 0xe
 806 005e 3A       		.uleb128 0x3a
 807 005f 0B       		.uleb128 0xb
 808 0060 3B       		.uleb128 0x3b
 809 0061 0B       		.uleb128 0xb
 810 0062 49       		.uleb128 0x49
 811 0063 13       		.uleb128 0x13
 812 0064 00       		.byte	0
 813 0065 00       		.byte	0
 814 0066 09       		.uleb128 0x9
 815 0067 0D       		.uleb128 0xd
 816 0068 00       		.byte	0
 817 0069 03       		.uleb128 0x3
 818 006a 08       		.uleb128 0x8
 819 006b 3A       		.uleb128 0x3a
 820 006c 0B       		.uleb128 0xb
 821 006d 3B       		.uleb128 0x3b
 822 006e 0B       		.uleb128 0xb
 823 006f 49       		.uleb128 0x49
 824 0070 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 32


 825 0071 38       		.uleb128 0x38
 826 0072 0B       		.uleb128 0xb
 827 0073 00       		.byte	0
 828 0074 00       		.byte	0
 829 0075 0A       		.uleb128 0xa
 830 0076 01       		.uleb128 0x1
 831 0077 01       		.byte	0x1
 832 0078 49       		.uleb128 0x49
 833 0079 13       		.uleb128 0x13
 834 007a 01       		.uleb128 0x1
 835 007b 13       		.uleb128 0x13
 836 007c 00       		.byte	0
 837 007d 00       		.byte	0
 838 007e 0B       		.uleb128 0xb
 839 007f 21       		.uleb128 0x21
 840 0080 00       		.byte	0
 841 0081 49       		.uleb128 0x49
 842 0082 13       		.uleb128 0x13
 843 0083 2F       		.uleb128 0x2f
 844 0084 0B       		.uleb128 0xb
 845 0085 00       		.byte	0
 846 0086 00       		.byte	0
 847 0087 0C       		.uleb128 0xc
 848 0088 13       		.uleb128 0x13
 849 0089 01       		.byte	0x1
 850 008a 0B       		.uleb128 0xb
 851 008b 0B       		.uleb128 0xb
 852 008c 3A       		.uleb128 0x3a
 853 008d 0B       		.uleb128 0xb
 854 008e 3B       		.uleb128 0x3b
 855 008f 05       		.uleb128 0x5
 856 0090 01       		.uleb128 0x1
 857 0091 13       		.uleb128 0x13
 858 0092 00       		.byte	0
 859 0093 00       		.byte	0
 860 0094 0D       		.uleb128 0xd
 861 0095 0D       		.uleb128 0xd
 862 0096 00       		.byte	0
 863 0097 03       		.uleb128 0x3
 864 0098 0E       		.uleb128 0xe
 865 0099 3A       		.uleb128 0x3a
 866 009a 0B       		.uleb128 0xb
 867 009b 3B       		.uleb128 0x3b
 868 009c 05       		.uleb128 0x5
 869 009d 49       		.uleb128 0x49
 870 009e 13       		.uleb128 0x13
 871 009f 38       		.uleb128 0x38
 872 00a0 0B       		.uleb128 0xb
 873 00a1 00       		.byte	0
 874 00a2 00       		.byte	0
 875 00a3 0E       		.uleb128 0xe
 876 00a4 2E       		.uleb128 0x2e
 877 00a5 00       		.byte	0
 878 00a6 3F       		.uleb128 0x3f
 879 00a7 19       		.uleb128 0x19
 880 00a8 03       		.uleb128 0x3
 881 00a9 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 33


 882 00aa 3A       		.uleb128 0x3a
 883 00ab 0B       		.uleb128 0xb
 884 00ac 3B       		.uleb128 0x3b
 885 00ad 0B       		.uleb128 0xb
 886 00ae 27       		.uleb128 0x27
 887 00af 19       		.uleb128 0x19
 888 00b0 11       		.uleb128 0x11
 889 00b1 01       		.uleb128 0x1
 890 00b2 12       		.uleb128 0x12
 891 00b3 06       		.uleb128 0x6
 892 00b4 40       		.uleb128 0x40
 893 00b5 18       		.uleb128 0x18
 894 00b6 9742     		.uleb128 0x2117
 895 00b8 19       		.uleb128 0x19
 896 00b9 00       		.byte	0
 897 00ba 00       		.byte	0
 898 00bb 0F       		.uleb128 0xf
 899 00bc 2E       		.uleb128 0x2e
 900 00bd 00       		.byte	0
 901 00be 3F       		.uleb128 0x3f
 902 00bf 19       		.uleb128 0x19
 903 00c0 03       		.uleb128 0x3
 904 00c1 0E       		.uleb128 0xe
 905 00c2 3A       		.uleb128 0x3a
 906 00c3 0B       		.uleb128 0xb
 907 00c4 3B       		.uleb128 0x3b
 908 00c5 05       		.uleb128 0x5
 909 00c6 27       		.uleb128 0x27
 910 00c7 19       		.uleb128 0x19
 911 00c8 11       		.uleb128 0x11
 912 00c9 01       		.uleb128 0x1
 913 00ca 12       		.uleb128 0x12
 914 00cb 06       		.uleb128 0x6
 915 00cc 40       		.uleb128 0x40
 916 00cd 18       		.uleb128 0x18
 917 00ce 9742     		.uleb128 0x2117
 918 00d0 19       		.uleb128 0x19
 919 00d1 00       		.byte	0
 920 00d2 00       		.byte	0
 921 00d3 10       		.uleb128 0x10
 922 00d4 2E       		.uleb128 0x2e
 923 00d5 00       		.byte	0
 924 00d6 3F       		.uleb128 0x3f
 925 00d7 19       		.uleb128 0x19
 926 00d8 03       		.uleb128 0x3
 927 00d9 0E       		.uleb128 0xe
 928 00da 3A       		.uleb128 0x3a
 929 00db 0B       		.uleb128 0xb
 930 00dc 3B       		.uleb128 0x3b
 931 00dd 05       		.uleb128 0x5
 932 00de 27       		.uleb128 0x27
 933 00df 19       		.uleb128 0x19
 934 00e0 11       		.uleb128 0x11
 935 00e1 01       		.uleb128 0x1
 936 00e2 12       		.uleb128 0x12
 937 00e3 06       		.uleb128 0x6
 938 00e4 40       		.uleb128 0x40
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 34


 939 00e5 18       		.uleb128 0x18
 940 00e6 9642     		.uleb128 0x2116
 941 00e8 19       		.uleb128 0x19
 942 00e9 00       		.byte	0
 943 00ea 00       		.byte	0
 944 00eb 11       		.uleb128 0x11
 945 00ec 2E       		.uleb128 0x2e
 946 00ed 01       		.byte	0x1
 947 00ee 3F       		.uleb128 0x3f
 948 00ef 19       		.uleb128 0x19
 949 00f0 03       		.uleb128 0x3
 950 00f1 0E       		.uleb128 0xe
 951 00f2 3A       		.uleb128 0x3a
 952 00f3 0B       		.uleb128 0xb
 953 00f4 3B       		.uleb128 0x3b
 954 00f5 05       		.uleb128 0x5
 955 00f6 27       		.uleb128 0x27
 956 00f7 19       		.uleb128 0x19
 957 00f8 11       		.uleb128 0x11
 958 00f9 01       		.uleb128 0x1
 959 00fa 12       		.uleb128 0x12
 960 00fb 06       		.uleb128 0x6
 961 00fc 40       		.uleb128 0x40
 962 00fd 18       		.uleb128 0x18
 963 00fe 9742     		.uleb128 0x2117
 964 0100 19       		.uleb128 0x19
 965 0101 01       		.uleb128 0x1
 966 0102 13       		.uleb128 0x13
 967 0103 00       		.byte	0
 968 0104 00       		.byte	0
 969 0105 12       		.uleb128 0x12
 970 0106 34       		.uleb128 0x34
 971 0107 00       		.byte	0
 972 0108 03       		.uleb128 0x3
 973 0109 0E       		.uleb128 0xe
 974 010a 3A       		.uleb128 0x3a
 975 010b 0B       		.uleb128 0xb
 976 010c 3B       		.uleb128 0x3b
 977 010d 05       		.uleb128 0x5
 978 010e 49       		.uleb128 0x49
 979 010f 13       		.uleb128 0x13
 980 0110 02       		.uleb128 0x2
 981 0111 18       		.uleb128 0x18
 982 0112 00       		.byte	0
 983 0113 00       		.byte	0
 984 0114 13       		.uleb128 0x13
 985 0115 34       		.uleb128 0x34
 986 0116 00       		.byte	0
 987 0117 03       		.uleb128 0x3
 988 0118 08       		.uleb128 0x8
 989 0119 3A       		.uleb128 0x3a
 990 011a 0B       		.uleb128 0xb
 991 011b 3B       		.uleb128 0x3b
 992 011c 05       		.uleb128 0x5
 993 011d 49       		.uleb128 0x49
 994 011e 13       		.uleb128 0x13
 995 011f 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 35


 996 0120 18       		.uleb128 0x18
 997 0121 00       		.byte	0
 998 0122 00       		.byte	0
 999 0123 14       		.uleb128 0x14
 1000 0124 34       		.uleb128 0x34
 1001 0125 00       		.byte	0
 1002 0126 03       		.uleb128 0x3
 1003 0127 0E       		.uleb128 0xe
 1004 0128 3A       		.uleb128 0x3a
 1005 0129 0B       		.uleb128 0xb
 1006 012a 3B       		.uleb128 0x3b
 1007 012b 0B       		.uleb128 0xb
 1008 012c 49       		.uleb128 0x49
 1009 012d 13       		.uleb128 0x13
 1010 012e 3F       		.uleb128 0x3f
 1011 012f 19       		.uleb128 0x19
 1012 0130 3C       		.uleb128 0x3c
 1013 0131 19       		.uleb128 0x19
 1014 0132 00       		.byte	0
 1015 0133 00       		.byte	0
 1016 0134 00       		.byte	0
 1017              		.section	.debug_aranges,"",%progbits
 1018 0000 34000000 		.4byte	0x34
 1019 0004 0200     		.2byte	0x2
 1020 0006 00000000 		.4byte	.Ldebug_info0
 1021 000a 04       		.byte	0x4
 1022 000b 00       		.byte	0
 1023 000c 0000     		.2byte	0
 1024 000e 0000     		.2byte	0
 1025 0010 00000000 		.4byte	.LFB0
 1026 0014 54000000 		.4byte	.LFE0-.LFB0
 1027 0018 00000000 		.4byte	.LFB1
 1028 001c 0C000000 		.4byte	.LFE1-.LFB1
 1029 0020 00000000 		.4byte	.LFB2
 1030 0024 0A000000 		.4byte	.LFE2-.LFB2
 1031 0028 00000000 		.4byte	.LFB3
 1032 002c 00010000 		.4byte	.LFE3-.LFB3
 1033 0030 00000000 		.4byte	0
 1034 0034 00000000 		.4byte	0
 1035              		.section	.debug_ranges,"",%progbits
 1036              	.Ldebug_ranges0:
 1037 0000 00000000 		.4byte	.LFB0
 1038 0004 54000000 		.4byte	.LFE0
 1039 0008 00000000 		.4byte	.LFB1
 1040 000c 0C000000 		.4byte	.LFE1
 1041 0010 00000000 		.4byte	.LFB2
 1042 0014 0A000000 		.4byte	.LFE2
 1043 0018 00000000 		.4byte	.LFB3
 1044 001c 00010000 		.4byte	.LFE3
 1045 0020 00000000 		.4byte	0
 1046 0024 00000000 		.4byte	0
 1047              		.section	.debug_line,"",%progbits
 1048              	.Ldebug_line0:
 1049 0000 DF000000 		.section	.debug_str,"MS",%progbits,1
 1049      02006400 
 1049      00000201 
 1049      FB0E0D00 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 36


 1049      01010101 
 1050              	.LASF51:
 1051 0000 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\PSo"
 1051      73657273 
 1051      5C4C756B 
 1051      61732043 
 1051      72657574 
 1052 002e 43354C50 		.ascii	"C5LP-freeDSP-USB-Port\\PSoC_freeDSP_USB_Port\\USBFS"
 1052      2D667265 
 1052      65445350 
 1052      2D555342 
 1052      2D506F72 
 1053 005f 5F415544 		.ascii	"_AUDIO_PSoC3_5LP_Example.cydsn\000"
 1053      494F5F50 
 1053      536F4333 
 1053      5F354C50 
 1053      5F457861 
 1054              	.LASF42:
 1055 007e 61726245 		.ascii	"arbEp\000"
 1055      7000
 1056              	.LASF28:
 1057 0084 65704372 		.ascii	"epCr0\000"
 1057      3000
 1058              	.LASF48:
 1059 008a 65705374 		.ascii	"epStatus\000"
 1059      61747573 
 1059      00
 1060              	.LASF11:
 1061 0093 666C6F61 		.ascii	"float\000"
 1061      7400
 1062              	.LASF33:
 1063 0099 72657365 		.ascii	"reserved\000"
 1063      72766564 
 1063      00
 1064              	.LASF39:
 1065 00a2 55534246 		.ascii	"USBFS_arb_ep_struct\000"
 1065      535F6172 
 1065      625F6570 
 1065      5F737472 
 1065      75637400 
 1066              	.LASF3:
 1067 00b6 73686F72 		.ascii	"short unsigned int\000"
 1067      7420756E 
 1067      7369676E 
 1067      65642069 
 1067      6E7400
 1068              	.LASF30:
 1069 00c9 65704366 		.ascii	"epCfg\000"
 1069      6700
 1070              	.LASF25:
 1071 00cf 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 1071      4246535F 
 1071      45505F43 
 1071      544C5F42 
 1071      4C4F434B 
 1072              	.LASF46:
 1073 00e4 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 37


 1073      535F4255 
 1073      535F5245 
 1073      5345545F 
 1073      49535200 
 1074              	.LASF47:
 1075 00f8 61726249 		.ascii	"arbIntrStatus\000"
 1075      6E747253 
 1075      74617475 
 1075      7300
 1076              	.LASF26:
 1077 0106 6570436E 		.ascii	"epCnt0\000"
 1077      743000
 1078              	.LASF27:
 1079 010d 6570436E 		.ascii	"epCnt1\000"
 1079      743100
 1080              	.LASF19:
 1081 0114 6570546F 		.ascii	"epToggle\000"
 1081      67676C65 
 1081      00
 1082              	.LASF1:
 1083 011d 756E7369 		.ascii	"unsigned char\000"
 1083      676E6564 
 1083      20636861 
 1083      7200
 1084              	.LASF50:
 1085 012b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS_episr.c\000"
 1085      6E657261 
 1085      7465645F 
 1085      536F7572 
 1085      63655C50 
 1086              	.LASF14:
 1087 0152 72656738 		.ascii	"reg8\000"
 1087      00
 1088              	.LASF17:
 1089 0157 61706945 		.ascii	"apiEpState\000"
 1089      70537461 
 1089      746500
 1090              	.LASF5:
 1091 0162 6C6F6E67 		.ascii	"long unsigned int\000"
 1091      20756E73 
 1091      69676E65 
 1091      6420696E 
 1091      7400
 1092              	.LASF20:
 1093 0174 61646472 		.ascii	"addr\000"
 1093      00
 1094              	.LASF45:
 1095 0179 55534246 		.ascii	"USBFS_SOF_ISR\000"
 1095      535F534F 
 1095      465F4953 
 1095      5200
 1096              	.LASF32:
 1097 0187 65705372 		.ascii	"epSr\000"
 1097      00
 1098              	.LASF53:
 1099 018c 55534246 		.ascii	"USBFS_EP\000"
 1099      535F4550 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 38


 1099      00
 1100              	.LASF34:
 1101 0195 72775761 		.ascii	"rwWa\000"
 1101      00
 1102              	.LASF12:
 1103 019a 646F7562 		.ascii	"double\000"
 1103      6C6500
 1104              	.LASF29:
 1105 01a1 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 1105      535F7369 
 1105      655F6570 
 1105      5F737472 
 1105      75637400 
 1106              	.LASF22:
 1107 01b5 62756666 		.ascii	"buffOffset\000"
 1107      4F666673 
 1107      657400
 1108              	.LASF35:
 1109 01c0 72775761 		.ascii	"rwWaMsb\000"
 1109      4D736200 
 1110              	.LASF10:
 1111 01c8 75696E74 		.ascii	"uint16\000"
 1111      313600
 1112              	.LASF41:
 1113 01cf 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 1113      535F7369 
 1113      655F6570 
 1113      735F7374 
 1113      72756374 
 1114              	.LASF38:
 1115 01e4 72774472 		.ascii	"rwDr\000"
 1115      00
 1116              	.LASF8:
 1117 01e9 756E7369 		.ascii	"unsigned int\000"
 1117      676E6564 
 1117      20696E74 
 1117      00
 1118              	.LASF37:
 1119 01f6 72775261 		.ascii	"rwRaMsb\000"
 1119      4D736200 
 1120              	.LASF7:
 1121 01fe 6C6F6E67 		.ascii	"long long unsigned int\000"
 1121      206C6F6E 
 1121      6720756E 
 1121      7369676E 
 1121      65642069 
 1122              	.LASF18:
 1123 0215 68774570 		.ascii	"hwEpState\000"
 1123      53746174 
 1123      6500
 1124              	.LASF31:
 1125 021f 6570496E 		.ascii	"epIntEn\000"
 1125      74456E00 
 1126              	.LASF43:
 1127 0227 55534246 		.ascii	"USBFS_arb_eps_struct\000"
 1127      535F6172 
 1127      625F6570 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 39


 1127      735F7374 
 1127      72756374 
 1128              	.LASF16:
 1129 023c 61747472 		.ascii	"attrib\000"
 1129      696200
 1130              	.LASF21:
 1131 0243 65704D6F 		.ascii	"epMode\000"
 1131      646500
 1132              	.LASF6:
 1133 024a 6C6F6E67 		.ascii	"long long int\000"
 1133      206C6F6E 
 1133      6720696E 
 1133      7400
 1134              	.LASF15:
 1135 0258 73697A65 		.ascii	"sizetype\000"
 1135      74797065 
 1135      00
 1136              	.LASF13:
 1137 0261 63686172 		.ascii	"char\000"
 1137      00
 1138              	.LASF49:
 1139 0266 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1139      4320342E 
 1139      392E3320 
 1139      32303135 
 1139      30333033 
 1140 0299 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1140      20726576 
 1140      6973696F 
 1140      6E203232 
 1140      31323230 
 1141 02cc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1141      66756E63 
 1141      74696F6E 
 1141      2D736563 
 1141      74696F6E 
 1142              	.LASF23:
 1143 02f4 62756666 		.ascii	"bufferSize\000"
 1143      65725369 
 1143      7A6500
 1144              	.LASF2:
 1145 02ff 73686F72 		.ascii	"short int\000"
 1145      7420696E 
 1145      7400
 1146              	.LASF36:
 1147 0309 72775261 		.ascii	"rwRa\000"
 1147      00
 1148              	.LASF9:
 1149 030e 75696E74 		.ascii	"uint8\000"
 1149      3800
 1150              	.LASF24:
 1151 0314 696E7465 		.ascii	"interface\000"
 1151      72666163 
 1151      6500
 1152              	.LASF4:
 1153 031e 6C6F6E67 		.ascii	"long int\000"
 1153      20696E74 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccY7pgfR.s 			page 40


 1153      00
 1154              	.LASF44:
 1155 0327 55534246 		.ascii	"USBFS_EP_2_ISR\000"
 1155      535F4550 
 1155      5F325F49 
 1155      535200
 1156              	.LASF0:
 1157 0336 7369676E 		.ascii	"signed char\000"
 1157      65642063 
 1157      68617200 
 1158              	.LASF52:
 1159 0342 55534246 		.ascii	"USBFS_ARB_ISR\000"
 1159      535F4152 
 1159      425F4953 
 1159      5200
 1160              	.LASF40:
 1161 0350 73696545 		.ascii	"sieEp\000"
 1161      7000
 1162              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

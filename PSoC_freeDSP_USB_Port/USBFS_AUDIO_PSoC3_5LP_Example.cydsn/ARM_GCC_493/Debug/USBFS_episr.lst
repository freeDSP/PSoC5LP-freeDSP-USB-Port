ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_EP_1_ISR, %function
  24              	USBFS_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS_episr.c"
   1:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:.\Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USBFS_episr.c **** *
   5:.\Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USBFS_episr.c **** *
   8:.\Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  16:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  20:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  21:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  26:.\Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  28:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  29:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 2


  32:.\Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:.\Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  39:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  40:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  44:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  46:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  48:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USBFS_episr.c ****     
  55:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  37              		.loc 1 55 0
  38 0004 104A     		ldr	r2, .L3
  39 0006 104B     		ldr	r3, .L3
  40 0008 1B78     		ldrb	r3, [r3]
  41 000a DBB2     		uxtb	r3, r3
  42 000c 23F00103 		bic	r3, r3, #1
  43 0010 DBB2     		uxtb	r3, r3
  44 0012 1370     		strb	r3, [r2]
  56:.\Generated_Source\PSoC5/USBFS_episr.c ****             
  57:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  45              		.loc 1 66 0
  46 0014 0D4B     		ldr	r3, .L3+4
  47 0016 9B7C     		ldrb	r3, [r3, #18]
  67:.\Generated_Source\PSoC5/USBFS_episr.c ****             
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 3


  68:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  48              		.loc 1 69 0
  49 0018 0D4B     		ldr	r3, .L3+8
  50 001a 1B7B     		ldrb	r3, [r3, #12]
  51 001c DBB2     		uxtb	r3, r3
  52 001e 03F00303 		and	r3, r3, #3
  53 0022 012B     		cmp	r3, #1
  54 0024 08D0     		beq	.L2
  70:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
  71:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  55              		.loc 1 71 0
  56 0026 0A4B     		ldr	r3, .L3+8
  57 0028 DB7B     		ldrb	r3, [r3, #15]
  58 002a DBB2     		uxtb	r3, r3
  59 002c 83F07F03 		eor	r3, r3, #127
  60 0030 DB43     		mvns	r3, r3
  61 0032 DAB2     		uxtb	r2, r3
  62 0034 064B     		ldr	r3, .L3+8
  63 0036 DA73     		strb	r2, [r3, #15]
  64              	.L2:
  72:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  74:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  65              		.loc 1 80 0
  66 0038 054B     		ldr	r3, .L3+8
  67 003a 0122     		movs	r2, #1
  68 003c 5A73     		strb	r2, [r3, #13]
  81:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  83:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USBFS_episr.c ****     
  93:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  95:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  97:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 101:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USBFS_episr.c ****         
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 4


 104:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
  69              		.loc 1 107 0
  70 003e BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0040 5DF8047B 		ldr	r7, [sp], #4
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 0044 7047     		bx	lr
  77              	.L4:
  78 0046 00BF     		.align	2
  79              	.L3:
  80 0048 0B600040 		.word	1073766411
  81 004c FC5F0040 		.word	1073766396
  82 0050 00000000 		.word	USBFS_EP
  83              		.cfi_endproc
  84              	.LFE0:
  85              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  86              		.section	.text.USBFS_EP_6_ISR,"ax",%progbits
  87              		.align	2
  88              		.global	USBFS_EP_6_ISR
  89              		.thumb
  90              		.thumb_func
  91              		.type	USBFS_EP_6_ISR, %function
  92              	USBFS_EP_6_ISR:
  93              	.LFB1:
 108:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 109:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 111:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 112:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 122:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 126:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 128:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 130:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 5


 136:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 137:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
 138:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 139:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
 149:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 150:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
 152:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 154:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 156:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
 163:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 165:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 170:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 175:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 177:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 179:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 183:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 186:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 190:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 192:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 6


 193:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 203:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 207:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 209:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 211:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 218:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 220:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 231:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 237:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 246:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 7


 250:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 256:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 258:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 260:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 264:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 267:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 271:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 273:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 274:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 284:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 288:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 290:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 292:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 299:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 301:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 8


 307:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 312:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 318:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 327:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 334:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 337:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 339:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 341:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 345:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 348:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 352:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 354:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 355:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 9


 364:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 366:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 370:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 372:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 374:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 381:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 383:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 394:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 397:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 400:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 409:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 419:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 10


 421:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 423:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 427:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 430:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 434:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 436:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 437:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  94              		.loc 1 447 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 448:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
 451:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 452:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 454:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 456:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 459:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 463:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 104              		.loc 1 463 0
 105 0004 124A     		ldr	r2, .L7
 106 0006 124B     		ldr	r3, .L7
 107 0008 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 11


 108 000a DBB2     		uxtb	r3, r3
 109 000c 23F02003 		bic	r3, r3, #32
 110 0010 DBB2     		uxtb	r3, r3
 111 0012 1370     		strb	r3, [r2]
 464:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 465:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 112              		.loc 1 474 0
 113 0014 0F4B     		ldr	r3, .L7+4
 114 0016 93F86230 		ldrb	r3, [r3, #98]
 475:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 476:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 115              		.loc 1 477 0
 116 001a 0F4B     		ldr	r3, .L7+8
 117 001c 93F84830 		ldrb	r3, [r3, #72]
 118 0020 DBB2     		uxtb	r3, r3
 119 0022 03F00303 		and	r3, r3, #3
 120 0026 012B     		cmp	r3, #1
 121 0028 0AD0     		beq	.L6
 478:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 122              		.loc 1 479 0
 123 002a 0B4B     		ldr	r3, .L7+8
 124 002c 93F84B30 		ldrb	r3, [r3, #75]
 125 0030 DBB2     		uxtb	r3, r3
 126 0032 83F07F03 		eor	r3, r3, #127
 127 0036 DB43     		mvns	r3, r3
 128 0038 DAB2     		uxtb	r2, r3
 129 003a 074B     		ldr	r3, .L7+8
 130 003c 83F84B20 		strb	r2, [r3, #75]
 131              	.L6:
 480:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 482:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 132              		.loc 1 488 0
 133 0040 054B     		ldr	r3, .L7+8
 134 0042 0122     		movs	r2, #1
 135 0044 83F84920 		strb	r2, [r3, #73]
 489:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 491:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 12


 493:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 501:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 503:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 505:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
 508:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 509:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 512:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 136              		.loc 1 515 0
 137 0048 BD46     		mov	sp, r7
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 004a 5DF8047B 		ldr	r7, [sp], #4
 141              		.cfi_restore 7
 142              		.cfi_def_cfa_offset 0
 143 004e 7047     		bx	lr
 144              	.L8:
 145              		.align	2
 146              	.L7:
 147 0050 0B600040 		.word	1073766411
 148 0054 FC5F0040 		.word	1073766396
 149 0058 00000000 		.word	USBFS_EP
 150              		.cfi_endproc
 151              	.LFE1:
 152              		.size	USBFS_EP_6_ISR, .-USBFS_EP_6_ISR
 153              		.section	.text.USBFS_SOF_ISR,"ax",%progbits
 154              		.align	2
 155              		.global	USBFS_SOF_ISR
 156              		.thumb
 157              		.thumb_func
 158              		.type	USBFS_SOF_ISR, %function
 159              	USBFS_SOF_ISR:
 160              	.LFB2:
 516:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 518:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 519:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 13


 525:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 534:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 536:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 538:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 545:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 547:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 558:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 564:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 573:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 574:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 14


 582:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 584:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 586:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 588:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 592:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 595:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 601:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 602:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 617:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 619:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 621:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 622:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 628:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 630:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 15


 639:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 641:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 647:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 653:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 656:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 666:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 668:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 670:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 674:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 677:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 679:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 683:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 684:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 161              		.loc 1 694 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 16


 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0000 80B4     		push	{r7}
 167              		.cfi_def_cfa_offset 4
 168              		.cfi_offset 7, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 695:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 699:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 701:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 703:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 705:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 171              		.loc 1 708 0
 172 0004 BD46     		mov	sp, r7
 173              		.cfi_def_cfa_register 13
 174              		@ sp needed
 175 0006 5DF8047B 		ldr	r7, [sp], #4
 176              		.cfi_restore 7
 177              		.cfi_def_cfa_offset 0
 178 000a 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE2:
 181              		.size	USBFS_SOF_ISR, .-USBFS_SOF_ISR
 182              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 183              		.align	2
 184              		.global	USBFS_BUS_RESET_ISR
 185              		.thumb
 186              		.thumb_func
 187              		.type	USBFS_BUS_RESET_ISR, %function
 188              	USBFS_BUS_RESET_ISR:
 189              	.LFB3:
 709:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 711:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 712:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 717:.\Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 720:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 721:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USBFS_episr.c **** {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 17


 190              		.loc 1 723 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 724:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 728:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 730:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 732:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 734:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 200              		.loc 1 734 0
 201 0004 FFF7FEFF 		bl	USBFS_ReInitComponent
 735:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 736:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_EXIT_CALLBACK
 737:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_ExitCallback();
 738:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:.\Generated_Source\PSoC5/USBFS_episr.c **** }
 202              		.loc 1 739 0
 203 0008 80BD     		pop	{r7, pc}
 204              		.cfi_endproc
 205              	.LFE3:
 206              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 207 000a 00BF     		.section	.text.USBFS_ARB_ISR,"ax",%progbits
 208              		.align	2
 209              		.global	USBFS_ARB_ISR
 210              		.thumb
 211              		.thumb_func
 212              		.type	USBFS_ARB_ISR, %function
 213              	USBFS_ARB_ISR:
 214              	.LFB4:
 740:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ACTIVE) */
 741:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 742:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 743:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_LPM_ACTIVE)
 744:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************
 745:.\Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_INTR_LPM_ISR
 746:.\Generated_Source\PSoC5/USBFS_episr.c **** ************************************************************************//**
 747:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 748:.\Generated_Source\PSoC5/USBFS_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 750:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 751:.\Generated_Source\PSoC5/USBFS_episr.c **** ***************************************************************************/
 752:.\Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_LPM_ISR)
 753:.\Generated_Source\PSoC5/USBFS_episr.c **** {
 754:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_ENTRY_CALLBACK
 755:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_LPM_ISR_EntryCallback();
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 18


 756:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_ENTRY_CALLBACK) */
 757:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 758:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 760:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 761:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 762:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_LPM_INTR);
 763:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 764:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 766:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 767:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 768:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_EXIT_CALLBACK
 769:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_LPM_ISR_ExitCallback();
 770:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_EXIT_CALLBACK) */
 771:.\Generated_Source\PSoC5/USBFS_episr.c **** }
 772:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ACTIVE) */
 773:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 774:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 775:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 776:.\Generated_Source\PSoC5/USBFS_episr.c ****     /***************************************************************************
 777:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_ARB_ISR
 778:.\Generated_Source\PSoC5/USBFS_episr.c ****     ************************************************************************//**
 779:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 780:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 782:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 783:.\Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************/
 784:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_ARB_ISR)
 785:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 215              		.loc 1 785 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 8
 218              		@ frame_needed = 1, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 220 0000 90B4     		push	{r4, r7}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 7, -4
 224 0002 82B0     		sub	sp, sp, #8
 225              		.cfi_def_cfa_offset 16
 226 0004 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 786:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 arbIntrStatus;
 787:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 epStatus;
 788:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ep = USBFS_EP1;
 228              		.loc 1 788 0
 229 0006 0123     		movs	r3, #1
 230 0008 BB71     		strb	r3, [r7, #6]
 789:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 790:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_ENTRY_CALLBACK
 791:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_ISR_EntryCallback();
 792:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_ENTRY_CALLBACK) */
 793:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 794:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 796:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 19


 797:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 798:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Get pending ARB interrupt sources. */
 799:.\Generated_Source\PSoC5/USBFS_episr.c ****         arbIntrStatus = USBFS_ARB_INT_SR_REG;
 231              		.loc 1 799 0
 232 000a 394B     		ldr	r3, .L17
 233 000c 1B78     		ldrb	r3, [r3]
 234 000e FB71     		strb	r3, [r7, #7]
 800:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 801:.\Generated_Source\PSoC5/USBFS_episr.c ****         while (0u != arbIntrStatus)
 235              		.loc 1 801 0
 236 0010 67E0     		b	.L12
 237              	.L16:
 802:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 803:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Check which EP is interrupt source. */
 804:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 238              		.loc 1 804 0
 239 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 240 0014 03F00103 		and	r3, r3, #1
 241 0018 002B     		cmp	r3, #0
 242 001a 5CD0     		beq	.L13
 805:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 806:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:.\Generated_Source\PSoC5/USBFS_episr.c ****                 epStatus = (USBFS_ARB_EP_BASE.arbEp[ep].epSr & USBFS_ARB_EP_BASE.arbEp[ep].epIntEn)
 243              		.loc 1 807 0
 244 001c 354A     		ldr	r2, .L17+4
 245 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 246 0020 1B01     		lsls	r3, r3, #4
 247 0022 1344     		add	r3, r3, r2
 248 0024 9B78     		ldrb	r3, [r3, #2]
 249 0026 DAB2     		uxtb	r2, r3
 250 0028 3249     		ldr	r1, .L17+4
 251 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 252 002c 1B01     		lsls	r3, r3, #4
 253 002e 0B44     		add	r3, r3, r1
 254 0030 5B78     		ldrb	r3, [r3, #1]
 255 0032 DBB2     		uxtb	r3, r3
 256 0034 1340     		ands	r3, r3, r2
 257 0036 7B71     		strb	r3, [r7, #5]
 808:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 809:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_IN_BUF_FULL))
 258              		.loc 1 810 0
 259 0038 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 260 003a 03F00103 		and	r3, r3, #1
 261 003e 002B     		cmp	r3, #0
 262 0040 28D0     		beq	.L14
 811:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
 812:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u != (USBFS_EP[ep].addr & USBFS_DIR_IN))
 263              		.loc 1 812 0
 264 0042 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 265 0044 2C49     		ldr	r1, .L17+8
 266 0046 1346     		mov	r3, r2
 267 0048 5B00     		lsls	r3, r3, #1
 268 004a 1344     		add	r3, r3, r2
 269 004c 9B00     		lsls	r3, r3, #2
 270 004e 0B44     		add	r3, r3, r1
 271 0050 1B79     		ldrb	r3, [r3, #4]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 20


 272 0052 DBB2     		uxtb	r3, r3
 273 0054 DBB2     		uxtb	r3, r3
 274 0056 5BB2     		sxtb	r3, r3
 275 0058 002B     		cmp	r3, #0
 276 005a 1BDA     		bge	.L14
 813:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 814:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Clear data ready status. */
 815:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_ARB_EP_BASE.arbEp[ep].epCfg &= (uint8) ~USBFS_ARB_EPX_CFG_IN_DATA_RDY
 277              		.loc 1 815 0
 278 005c 2549     		ldr	r1, .L17+4
 279 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 280 0060 2448     		ldr	r0, .L17+4
 281 0062 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 282 0064 1201     		lsls	r2, r2, #4
 283 0066 0244     		add	r2, r2, r0
 284 0068 1278     		ldrb	r2, [r2]
 285 006a D2B2     		uxtb	r2, r2
 286 006c 22F00102 		bic	r2, r2, #1
 287 0070 D2B2     		uxtb	r2, r2
 288 0072 1B01     		lsls	r3, r3, #4
 289 0074 0B44     		add	r3, r3, r1
 290 0076 1A70     		strb	r2, [r3]
 816:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 817:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:.\Generated_Source\PSoC5/USBFS_episr.c ****                         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 819:.\Generated_Source\PSoC5/USBFS_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:.\Generated_Source\PSoC5/USBFS_episr.c ****                             if(USBFS_inLength[ep] > USBFS_DMA_BYTES_PER_BURST)
 821:.\Generated_Source\PSoC5/USBFS_episr.c ****                             {
 822:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_LoadNextInEP(ep, 0u);
 823:.\Generated_Source\PSoC5/USBFS_episr.c ****                             }
 824:.\Generated_Source\PSoC5/USBFS_episr.c ****                             else
 825:.\Generated_Source\PSoC5/USBFS_episr.c ****                             {
 826:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_inBufFull[ep] = 1u;
 827:.\Generated_Source\PSoC5/USBFS_episr.c ****                             }
 828:.\Generated_Source\PSoC5/USBFS_episr.c ****                         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) *
 829:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 831:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Arm IN endpoint. */
 832:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_SIE_EP_BASE.sieEp[ep].epCr0 = USBFS_EP[ep].epMode;
 291              		.loc 1 832 0
 292 0078 2048     		ldr	r0, .L17+12
 293 007a B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 294 007c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 295 007e 1E4C     		ldr	r4, .L17+8
 296 0080 1346     		mov	r3, r2
 297 0082 5B00     		lsls	r3, r3, #1
 298 0084 1344     		add	r3, r3, r2
 299 0086 9B00     		lsls	r3, r3, #2
 300 0088 2344     		add	r3, r3, r4
 301 008a 5B79     		ldrb	r3, [r3, #5]
 302 008c DAB2     		uxtb	r2, r3
 303 008e 0B01     		lsls	r3, r1, #4
 304 0090 0344     		add	r3, r3, r0
 305 0092 9A70     		strb	r2, [r3, #2]
 306              	.L14:
 833:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 834:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && USBFS_ISR_SERVICE_MIDI_IN)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 21


 835:.\Generated_Source\PSoC5/USBFS_episr.c ****                         if (ep == USBFS_midi_in_ep)
 836:.\Generated_Source\PSoC5/USBFS_episr.c ****                         {
 837:.\Generated_Source\PSoC5/USBFS_episr.c ****                             /* Clear MIDI input pointer. */
 838:.\Generated_Source\PSoC5/USBFS_episr.c ****                             USBFS_midiInPointer = 0u;
 839:.\Generated_Source\PSoC5/USBFS_episr.c ****                         }
 840:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #endif /* (USBFS_ENABLE_MIDI_STREAMING) */
 841:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 842:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 843:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 844:.\Generated_Source\PSoC5/USBFS_episr.c ****             #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
 845:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_SR_DMA_GNT))
 307              		.loc 1 846 0
 308 0094 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 309 0096 03F00203 		and	r3, r3, #2
 310 009a 002B     		cmp	r3, #0
 311 009c 15D0     		beq	.L15
 847:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
 848:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u == (USBFS_EP[ep].addr & USBFS_DIR_IN))
 312              		.loc 1 848 0
 313 009e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 314 00a0 1549     		ldr	r1, .L17+8
 315 00a2 1346     		mov	r3, r2
 316 00a4 5B00     		lsls	r3, r3, #1
 317 00a6 1344     		add	r3, r3, r2
 318 00a8 9B00     		lsls	r3, r3, #2
 319 00aa 0B44     		add	r3, r3, r1
 320 00ac 1B79     		ldrb	r3, [r3, #4]
 321 00ae DBB2     		uxtb	r3, r3
 322 00b0 DBB2     		uxtb	r3, r3
 323 00b2 5BB2     		sxtb	r3, r3
 324 00b4 002B     		cmp	r3, #0
 325 00b6 08DB     		blt	.L15
 849:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 850:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 326              		.loc 1 851 0
 327 00b8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 328 00ba 0F49     		ldr	r1, .L17+8
 329 00bc 1346     		mov	r3, r2
 330 00be 5B00     		lsls	r3, r3, #1
 331 00c0 1344     		add	r3, r3, r2
 332 00c2 9B00     		lsls	r3, r3, #2
 333 00c4 0B44     		add	r3, r3, r1
 334 00c6 0022     		movs	r2, #0
 335 00c8 5A70     		strb	r2, [r3, #1]
 336              	.L15:
 852:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 853:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 855:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 856:.\Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
 857:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 858:.\Generated_Source\PSoC5/USBFS_episr.c ****             #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 859:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_DMA_TERMIN))
 861:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 22


 862:.\Generated_Source\PSoC5/USBFS_episr.c ****                     uint32 channelNum = USBFS_DmaChan[ep];
 863:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 864:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore burst counter for endpoint. */
 865:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_DmaEpBurstCnt[ep] = USBFS_DmaEpBurstCntBackup[ep];
 866:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 867:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaChDisable(channelNum);
 869:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 870:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:.\Generated_Source\PSoC5/USBFS_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:.\Generated_Source\PSoC5/USBFS_episr.c ****                     */
 873:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaTriggerOut(USBFS_DmaBurstEndOut[ep]);
 874:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 875:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore destination address for output endpoint. */
 876:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
 877:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
 878:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                                    
 879:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 880:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u != (USBFS_DmaEpLastBurstEl[ep] & USBFS_DMA_DESCR_REVERT))
 882:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 883:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_CyDmaSetNumDataElements(channelNum, (USBFS_DmaEpLastBurstEl[ep] >> US
 884:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                              USBFS_DMA_GET_MAX_ELEM
 885:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 886:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 887:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
 889:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
 890:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
 891:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 892:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Enable DMA channel: configuration complete. */
 893:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaChEnable(channelNum);
 894:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 895:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 896:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 897:.\Generated_Source\PSoC5/USBFS_episr.c ****                     (void) USBFS_SIE_EP_BASE.sieEp[ep].epCr0;
 898:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 899:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 900:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_GET_EP_TYPE(ep) != USBFS_EP_TYPE_ISOC)
 901:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 902:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_EP[ep].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 903:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 904:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 905:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 906:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_EP[ep].apiEpState = USBFS_EVENT_PENDING;
 907:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 908:.\Generated_Source\PSoC5/USBFS_episr.c ****                 #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 909:.\Generated_Source\PSoC5/USBFS_episr.c ****                     !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 910:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_midi_out_ep == ep)
 911:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 912:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_MIDI_OUT_Service();
 913:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 914:.\Generated_Source\PSoC5/USBFS_episr.c ****                 #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 915:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 916:.\Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 917:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 918:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 23


 919:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 920:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 921:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#END` */
 922:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 923:.\Generated_Source\PSoC5/USBFS_episr.c ****             #ifdef USBFS_ARB_ISR_CALLBACK
 924:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_ISR_Callback(ep, epStatus);
 925:.\Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (USBFS_ARB_ISR_CALLBACK) */
 926:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 927:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 928:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 337              		.loc 1 928 0
 338 00ca 0A4A     		ldr	r2, .L17+4
 339 00cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 340 00ce 1B01     		lsls	r3, r3, #4
 341 00d0 1344     		add	r3, r3, r2
 342 00d2 7A79     		ldrb	r2, [r7, #5]
 343 00d4 9A70     		strb	r2, [r3, #2]
 344              	.L13:
 929:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 930:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 931:.\Generated_Source\PSoC5/USBFS_episr.c ****             ++ep;
 345              		.loc 1 931 0
 346 00d6 BB79     		ldrb	r3, [r7, #6]
 347 00d8 0133     		adds	r3, r3, #1
 348 00da BB71     		strb	r3, [r7, #6]
 932:.\Generated_Source\PSoC5/USBFS_episr.c ****             arbIntrStatus >>= 1u;
 349              		.loc 1 932 0
 350 00dc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 351 00de 5B08     		lsrs	r3, r3, #1
 352 00e0 FB71     		strb	r3, [r7, #7]
 353              	.L12:
 801:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 354              		.loc 1 801 0
 355 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 356 00e4 002B     		cmp	r3, #0
 357 00e6 94D1     		bne	.L16
 933:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 934:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 935:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 936:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 937:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 938:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 939:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_EXIT_CALLBACK
 940:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_ISR_ExitCallback();
 941:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_EXIT_CALLBACK) */
 942:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 358              		.loc 1 942 0
 359 00e8 0837     		adds	r7, r7, #8
 360              		.cfi_def_cfa_offset 8
 361 00ea BD46     		mov	sp, r7
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
 364 00ec 90BC     		pop	{r4, r7}
 365              		.cfi_restore 7
 366              		.cfi_restore 4
 367              		.cfi_def_cfa_offset 0
 368 00ee 7047     		bx	lr
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 24


 369              	.L18:
 370              		.align	2
 371              	.L17:
 372 00f0 9F600040 		.word	1073766559
 373 00f4 70600040 		.word	1073766512
 374 00f8 00000000 		.word	USBFS_EP
 375 00fc FC5F0040 		.word	1073766396
 376              		.cfi_endproc
 377              	.LFE4:
 378              		.size	USBFS_ARB_ISR, .-USBFS_ARB_ISR
 379              		.text
 380              	.Letext0:
 381              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 382              		.file 3 ".\\Generated_Source\\PSoC5\\USBFS.h"
 383              		.file 4 ".\\Generated_Source\\PSoC5\\USBFS_pvt.h"
 384              		.section	.debug_info,"",%progbits
 385              	.Ldebug_info0:
 386 0000 2D030000 		.4byte	0x32d
 387 0004 0400     		.2byte	0x4
 388 0006 00000000 		.4byte	.Ldebug_abbrev0
 389 000a 04       		.byte	0x4
 390 000b 01       		.uleb128 0x1
 391 000c 75020000 		.4byte	.LASF50
 392 0010 01       		.byte	0x1
 393 0011 2B010000 		.4byte	.LASF51
 394 0015 00000000 		.4byte	.LASF52
 395 0019 00000000 		.4byte	.Ldebug_ranges0+0
 396 001d 00000000 		.4byte	0
 397 0021 00000000 		.4byte	.Ldebug_line0
 398 0025 02       		.uleb128 0x2
 399 0026 01       		.byte	0x1
 400 0027 06       		.byte	0x6
 401 0028 45030000 		.4byte	.LASF0
 402 002c 02       		.uleb128 0x2
 403 002d 01       		.byte	0x1
 404 002e 08       		.byte	0x8
 405 002f 1D010000 		.4byte	.LASF1
 406 0033 02       		.uleb128 0x2
 407 0034 02       		.byte	0x2
 408 0035 05       		.byte	0x5
 409 0036 0E030000 		.4byte	.LASF2
 410 003a 02       		.uleb128 0x2
 411 003b 02       		.byte	0x2
 412 003c 07       		.byte	0x7
 413 003d B6000000 		.4byte	.LASF3
 414 0041 02       		.uleb128 0x2
 415 0042 04       		.byte	0x4
 416 0043 05       		.byte	0x5
 417 0044 3C030000 		.4byte	.LASF4
 418 0048 02       		.uleb128 0x2
 419 0049 04       		.byte	0x4
 420 004a 07       		.byte	0x7
 421 004b 62010000 		.4byte	.LASF5
 422 004f 02       		.uleb128 0x2
 423 0050 08       		.byte	0x8
 424 0051 05       		.byte	0x5
 425 0052 59020000 		.4byte	.LASF6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 25


 426 0056 02       		.uleb128 0x2
 427 0057 08       		.byte	0x8
 428 0058 07       		.byte	0x7
 429 0059 FE010000 		.4byte	.LASF7
 430 005d 03       		.uleb128 0x3
 431 005e 04       		.byte	0x4
 432 005f 05       		.byte	0x5
 433 0060 696E7400 		.ascii	"int\000"
 434 0064 02       		.uleb128 0x2
 435 0065 04       		.byte	0x4
 436 0066 07       		.byte	0x7
 437 0067 E9010000 		.4byte	.LASF8
 438 006b 04       		.uleb128 0x4
 439 006c 1D030000 		.4byte	.LASF9
 440 0070 02       		.byte	0x2
 441 0071 3801     		.2byte	0x138
 442 0073 2C000000 		.4byte	0x2c
 443 0077 04       		.uleb128 0x4
 444 0078 C8010000 		.4byte	.LASF10
 445 007c 02       		.byte	0x2
 446 007d 3901     		.2byte	0x139
 447 007f 3A000000 		.4byte	0x3a
 448 0083 02       		.uleb128 0x2
 449 0084 04       		.byte	0x4
 450 0085 04       		.byte	0x4
 451 0086 93000000 		.4byte	.LASF11
 452 008a 02       		.uleb128 0x2
 453 008b 08       		.byte	0x8
 454 008c 04       		.byte	0x4
 455 008d 9A010000 		.4byte	.LASF12
 456 0091 02       		.uleb128 0x2
 457 0092 01       		.byte	0x1
 458 0093 08       		.byte	0x8
 459 0094 70020000 		.4byte	.LASF13
 460 0098 04       		.uleb128 0x4
 461 0099 52010000 		.4byte	.LASF14
 462 009d 02       		.byte	0x2
 463 009e E201     		.2byte	0x1e2
 464 00a0 A4000000 		.4byte	0xa4
 465 00a4 05       		.uleb128 0x5
 466 00a5 6B000000 		.4byte	0x6b
 467 00a9 02       		.uleb128 0x2
 468 00aa 04       		.byte	0x4
 469 00ab 07       		.byte	0x7
 470 00ac 67020000 		.4byte	.LASF15
 471 00b0 06       		.uleb128 0x6
 472 00b1 0C       		.byte	0xc
 473 00b2 03       		.byte	0x3
 474 00b3 8C       		.byte	0x8c
 475 00b4 25010000 		.4byte	0x125
 476 00b8 07       		.uleb128 0x7
 477 00b9 4B020000 		.4byte	.LASF16
 478 00bd 03       		.byte	0x3
 479 00be 8E       		.byte	0x8e
 480 00bf 6B000000 		.4byte	0x6b
 481 00c3 00       		.byte	0
 482 00c4 07       		.uleb128 0x7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 26


 483 00c5 57010000 		.4byte	.LASF17
 484 00c9 03       		.byte	0x3
 485 00ca 8F       		.byte	0x8f
 486 00cb 6B000000 		.4byte	0x6b
 487 00cf 01       		.byte	0x1
 488 00d0 07       		.uleb128 0x7
 489 00d1 15020000 		.4byte	.LASF18
 490 00d5 03       		.byte	0x3
 491 00d6 90       		.byte	0x90
 492 00d7 6B000000 		.4byte	0x6b
 493 00db 02       		.byte	0x2
 494 00dc 07       		.uleb128 0x7
 495 00dd 14010000 		.4byte	.LASF19
 496 00e1 03       		.byte	0x3
 497 00e2 91       		.byte	0x91
 498 00e3 6B000000 		.4byte	0x6b
 499 00e7 03       		.byte	0x3
 500 00e8 07       		.uleb128 0x7
 501 00e9 74010000 		.4byte	.LASF20
 502 00ed 03       		.byte	0x3
 503 00ee 92       		.byte	0x92
 504 00ef 6B000000 		.4byte	0x6b
 505 00f3 04       		.byte	0x4
 506 00f4 07       		.uleb128 0x7
 507 00f5 52020000 		.4byte	.LASF21
 508 00f9 03       		.byte	0x3
 509 00fa 93       		.byte	0x93
 510 00fb 6B000000 		.4byte	0x6b
 511 00ff 05       		.byte	0x5
 512 0100 07       		.uleb128 0x7
 513 0101 B5010000 		.4byte	.LASF22
 514 0105 03       		.byte	0x3
 515 0106 94       		.byte	0x94
 516 0107 77000000 		.4byte	0x77
 517 010b 06       		.byte	0x6
 518 010c 07       		.uleb128 0x7
 519 010d 03030000 		.4byte	.LASF23
 520 0111 03       		.byte	0x3
 521 0112 95       		.byte	0x95
 522 0113 77000000 		.4byte	0x77
 523 0117 08       		.byte	0x8
 524 0118 07       		.uleb128 0x7
 525 0119 23030000 		.4byte	.LASF24
 526 011d 03       		.byte	0x3
 527 011e 96       		.byte	0x96
 528 011f 6B000000 		.4byte	0x6b
 529 0123 0A       		.byte	0xa
 530 0124 00       		.byte	0
 531 0125 08       		.uleb128 0x8
 532 0126 CF000000 		.4byte	.LASF25
 533 012a 03       		.byte	0x3
 534 012b 97       		.byte	0x97
 535 012c B0000000 		.4byte	0xb0
 536 0130 06       		.uleb128 0x6
 537 0131 10       		.byte	0x10
 538 0132 03       		.byte	0x3
 539 0133 D3       		.byte	0xd3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 27


 540 0134 69010000 		.4byte	0x169
 541 0138 07       		.uleb128 0x7
 542 0139 06010000 		.4byte	.LASF26
 543 013d 03       		.byte	0x3
 544 013e D5       		.byte	0xd5
 545 013f 6B000000 		.4byte	0x6b
 546 0143 00       		.byte	0
 547 0144 07       		.uleb128 0x7
 548 0145 0D010000 		.4byte	.LASF27
 549 0149 03       		.byte	0x3
 550 014a D6       		.byte	0xd6
 551 014b 6B000000 		.4byte	0x6b
 552 014f 01       		.byte	0x1
 553 0150 07       		.uleb128 0x7
 554 0151 84000000 		.4byte	.LASF28
 555 0155 03       		.byte	0x3
 556 0156 D7       		.byte	0xd7
 557 0157 6B000000 		.4byte	0x6b
 558 015b 02       		.byte	0x2
 559 015c 09       		.uleb128 0x9
 560 015d 67617000 		.ascii	"gap\000"
 561 0161 03       		.byte	0x3
 562 0162 D8       		.byte	0xd8
 563 0163 69010000 		.4byte	0x169
 564 0167 03       		.byte	0x3
 565 0168 00       		.byte	0
 566 0169 0A       		.uleb128 0xa
 567 016a 6B000000 		.4byte	0x6b
 568 016e 79010000 		.4byte	0x179
 569 0172 0B       		.uleb128 0xb
 570 0173 A9000000 		.4byte	0xa9
 571 0177 0C       		.byte	0xc
 572 0178 00       		.byte	0
 573 0179 08       		.uleb128 0x8
 574 017a A1010000 		.4byte	.LASF29
 575 017e 03       		.byte	0x3
 576 017f D9       		.byte	0xd9
 577 0180 30010000 		.4byte	0x130
 578 0184 06       		.uleb128 0x6
 579 0185 10       		.byte	0x10
 580 0186 03       		.byte	0x3
 581 0187 E5       		.byte	0xe5
 582 0188 05020000 		.4byte	0x205
 583 018c 07       		.uleb128 0x7
 584 018d C9000000 		.4byte	.LASF30
 585 0191 03       		.byte	0x3
 586 0192 E7       		.byte	0xe7
 587 0193 6B000000 		.4byte	0x6b
 588 0197 00       		.byte	0
 589 0198 07       		.uleb128 0x7
 590 0199 2E020000 		.4byte	.LASF31
 591 019d 03       		.byte	0x3
 592 019e E8       		.byte	0xe8
 593 019f 6B000000 		.4byte	0x6b
 594 01a3 01       		.byte	0x1
 595 01a4 07       		.uleb128 0x7
 596 01a5 87010000 		.4byte	.LASF32
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 28


 597 01a9 03       		.byte	0x3
 598 01aa E9       		.byte	0xe9
 599 01ab 6B000000 		.4byte	0x6b
 600 01af 02       		.byte	0x2
 601 01b0 07       		.uleb128 0x7
 602 01b1 99000000 		.4byte	.LASF33
 603 01b5 03       		.byte	0x3
 604 01b6 EA       		.byte	0xea
 605 01b7 6B000000 		.4byte	0x6b
 606 01bb 03       		.byte	0x3
 607 01bc 07       		.uleb128 0x7
 608 01bd 95010000 		.4byte	.LASF34
 609 01c1 03       		.byte	0x3
 610 01c2 EB       		.byte	0xeb
 611 01c3 6B000000 		.4byte	0x6b
 612 01c7 04       		.byte	0x4
 613 01c8 07       		.uleb128 0x7
 614 01c9 C0010000 		.4byte	.LASF35
 615 01cd 03       		.byte	0x3
 616 01ce EC       		.byte	0xec
 617 01cf 6B000000 		.4byte	0x6b
 618 01d3 05       		.byte	0x5
 619 01d4 07       		.uleb128 0x7
 620 01d5 18030000 		.4byte	.LASF36
 621 01d9 03       		.byte	0x3
 622 01da ED       		.byte	0xed
 623 01db 6B000000 		.4byte	0x6b
 624 01df 06       		.byte	0x6
 625 01e0 07       		.uleb128 0x7
 626 01e1 F6010000 		.4byte	.LASF37
 627 01e5 03       		.byte	0x3
 628 01e6 EE       		.byte	0xee
 629 01e7 6B000000 		.4byte	0x6b
 630 01eb 07       		.byte	0x7
 631 01ec 07       		.uleb128 0x7
 632 01ed E4010000 		.4byte	.LASF38
 633 01f1 03       		.byte	0x3
 634 01f2 EF       		.byte	0xef
 635 01f3 6B000000 		.4byte	0x6b
 636 01f7 08       		.byte	0x8
 637 01f8 09       		.uleb128 0x9
 638 01f9 67617000 		.ascii	"gap\000"
 639 01fd 03       		.byte	0x3
 640 01fe F0       		.byte	0xf0
 641 01ff 05020000 		.4byte	0x205
 642 0203 09       		.byte	0x9
 643 0204 00       		.byte	0
 644 0205 0A       		.uleb128 0xa
 645 0206 6B000000 		.4byte	0x6b
 646 020a 15020000 		.4byte	0x215
 647 020e 0B       		.uleb128 0xb
 648 020f A9000000 		.4byte	0xa9
 649 0213 06       		.byte	0x6
 650 0214 00       		.byte	0
 651 0215 08       		.uleb128 0x8
 652 0216 A2000000 		.4byte	.LASF39
 653 021a 03       		.byte	0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 29


 654 021b F1       		.byte	0xf1
 655 021c 84010000 		.4byte	0x184
 656 0220 0C       		.uleb128 0xc
 657 0221 90       		.byte	0x90
 658 0222 03       		.byte	0x3
 659 0223 0D01     		.2byte	0x10d
 660 0225 37020000 		.4byte	0x237
 661 0229 0D       		.uleb128 0xd
 662 022a 5F030000 		.4byte	.LASF40
 663 022e 03       		.byte	0x3
 664 022f 0F01     		.2byte	0x10f
 665 0231 37020000 		.4byte	0x237
 666 0235 00       		.byte	0
 667 0236 00       		.byte	0
 668 0237 0A       		.uleb128 0xa
 669 0238 79010000 		.4byte	0x179
 670 023c 47020000 		.4byte	0x247
 671 0240 0B       		.uleb128 0xb
 672 0241 A9000000 		.4byte	0xa9
 673 0245 08       		.byte	0x8
 674 0246 00       		.byte	0
 675 0247 04       		.uleb128 0x4
 676 0248 CF010000 		.4byte	.LASF41
 677 024c 03       		.byte	0x3
 678 024d 1001     		.2byte	0x110
 679 024f 20020000 		.4byte	0x220
 680 0253 0C       		.uleb128 0xc
 681 0254 90       		.byte	0x90
 682 0255 03       		.byte	0x3
 683 0256 1301     		.2byte	0x113
 684 0258 6A020000 		.4byte	0x26a
 685 025c 0D       		.uleb128 0xd
 686 025d 7E000000 		.4byte	.LASF42
 687 0261 03       		.byte	0x3
 688 0262 1501     		.2byte	0x115
 689 0264 6A020000 		.4byte	0x26a
 690 0268 00       		.byte	0
 691 0269 00       		.byte	0
 692 026a 0A       		.uleb128 0xa
 693 026b 15020000 		.4byte	0x215
 694 026f 7A020000 		.4byte	0x27a
 695 0273 0B       		.uleb128 0xb
 696 0274 A9000000 		.4byte	0xa9
 697 0278 08       		.byte	0x8
 698 0279 00       		.byte	0
 699 027a 04       		.uleb128 0x4
 700 027b 36020000 		.4byte	.LASF43
 701 027f 03       		.byte	0x3
 702 0280 1601     		.2byte	0x116
 703 0282 53020000 		.4byte	0x253
 704 0286 0E       		.uleb128 0xe
 705 0287 1F020000 		.4byte	.LASF44
 706 028b 01       		.byte	0x1
 707 028c 25       		.byte	0x25
 708 028d 00000000 		.4byte	.LFB0
 709 0291 54000000 		.4byte	.LFE0-.LFB0
 710 0295 01       		.uleb128 0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 30


 711 0296 9C       		.byte	0x9c
 712 0297 0F       		.uleb128 0xf
 713 0298 2D030000 		.4byte	.LASF45
 714 029c 01       		.byte	0x1
 715 029d BE01     		.2byte	0x1be
 716 029f 00000000 		.4byte	.LFB1
 717 02a3 5C000000 		.4byte	.LFE1-.LFB1
 718 02a7 01       		.uleb128 0x1
 719 02a8 9C       		.byte	0x9c
 720 02a9 0F       		.uleb128 0xf
 721 02aa 79010000 		.4byte	.LASF46
 722 02ae 01       		.byte	0x1
 723 02af B502     		.2byte	0x2b5
 724 02b1 00000000 		.4byte	.LFB2
 725 02b5 0C000000 		.4byte	.LFE2-.LFB2
 726 02b9 01       		.uleb128 0x1
 727 02ba 9C       		.byte	0x9c
 728 02bb 10       		.uleb128 0x10
 729 02bc E4000000 		.4byte	.LASF47
 730 02c0 01       		.byte	0x1
 731 02c1 D202     		.2byte	0x2d2
 732 02c3 00000000 		.4byte	.LFB3
 733 02c7 0A000000 		.4byte	.LFE3-.LFB3
 734 02cb 01       		.uleb128 0x1
 735 02cc 9C       		.byte	0x9c
 736 02cd 11       		.uleb128 0x11
 737 02ce 51030000 		.4byte	.LASF53
 738 02d2 01       		.byte	0x1
 739 02d3 1003     		.2byte	0x310
 740 02d5 00000000 		.4byte	.LFB4
 741 02d9 00010000 		.4byte	.LFE4-.LFB4
 742 02dd 01       		.uleb128 0x1
 743 02de 9C       		.byte	0x9c
 744 02df 10030000 		.4byte	0x310
 745 02e3 12       		.uleb128 0x12
 746 02e4 F8000000 		.4byte	.LASF48
 747 02e8 01       		.byte	0x1
 748 02e9 1203     		.2byte	0x312
 749 02eb 6B000000 		.4byte	0x6b
 750 02ef 02       		.uleb128 0x2
 751 02f0 91       		.byte	0x91
 752 02f1 77       		.sleb128 -9
 753 02f2 12       		.uleb128 0x12
 754 02f3 8A000000 		.4byte	.LASF49
 755 02f7 01       		.byte	0x1
 756 02f8 1303     		.2byte	0x313
 757 02fa 6B000000 		.4byte	0x6b
 758 02fe 02       		.uleb128 0x2
 759 02ff 91       		.byte	0x91
 760 0300 75       		.sleb128 -11
 761 0301 13       		.uleb128 0x13
 762 0302 657000   		.ascii	"ep\000"
 763 0305 01       		.byte	0x1
 764 0306 1403     		.2byte	0x314
 765 0308 6B000000 		.4byte	0x6b
 766 030c 02       		.uleb128 0x2
 767 030d 91       		.byte	0x91
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 31


 768 030e 76       		.sleb128 -10
 769 030f 00       		.byte	0
 770 0310 0A       		.uleb128 0xa
 771 0311 25010000 		.4byte	0x125
 772 0315 20030000 		.4byte	0x320
 773 0319 0B       		.uleb128 0xb
 774 031a A9000000 		.4byte	0xa9
 775 031e 08       		.byte	0x8
 776 031f 00       		.byte	0
 777 0320 14       		.uleb128 0x14
 778 0321 8C010000 		.4byte	.LASF54
 779 0325 04       		.byte	0x4
 780 0326 78       		.byte	0x78
 781 0327 2B030000 		.4byte	0x32b
 782 032b 05       		.uleb128 0x5
 783 032c 10030000 		.4byte	0x310
 784 0330 00       		.byte	0
 785              		.section	.debug_abbrev,"",%progbits
 786              	.Ldebug_abbrev0:
 787 0000 01       		.uleb128 0x1
 788 0001 11       		.uleb128 0x11
 789 0002 01       		.byte	0x1
 790 0003 25       		.uleb128 0x25
 791 0004 0E       		.uleb128 0xe
 792 0005 13       		.uleb128 0x13
 793 0006 0B       		.uleb128 0xb
 794 0007 03       		.uleb128 0x3
 795 0008 0E       		.uleb128 0xe
 796 0009 1B       		.uleb128 0x1b
 797 000a 0E       		.uleb128 0xe
 798 000b 55       		.uleb128 0x55
 799 000c 17       		.uleb128 0x17
 800 000d 11       		.uleb128 0x11
 801 000e 01       		.uleb128 0x1
 802 000f 10       		.uleb128 0x10
 803 0010 17       		.uleb128 0x17
 804 0011 00       		.byte	0
 805 0012 00       		.byte	0
 806 0013 02       		.uleb128 0x2
 807 0014 24       		.uleb128 0x24
 808 0015 00       		.byte	0
 809 0016 0B       		.uleb128 0xb
 810 0017 0B       		.uleb128 0xb
 811 0018 3E       		.uleb128 0x3e
 812 0019 0B       		.uleb128 0xb
 813 001a 03       		.uleb128 0x3
 814 001b 0E       		.uleb128 0xe
 815 001c 00       		.byte	0
 816 001d 00       		.byte	0
 817 001e 03       		.uleb128 0x3
 818 001f 24       		.uleb128 0x24
 819 0020 00       		.byte	0
 820 0021 0B       		.uleb128 0xb
 821 0022 0B       		.uleb128 0xb
 822 0023 3E       		.uleb128 0x3e
 823 0024 0B       		.uleb128 0xb
 824 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 32


 825 0026 08       		.uleb128 0x8
 826 0027 00       		.byte	0
 827 0028 00       		.byte	0
 828 0029 04       		.uleb128 0x4
 829 002a 16       		.uleb128 0x16
 830 002b 00       		.byte	0
 831 002c 03       		.uleb128 0x3
 832 002d 0E       		.uleb128 0xe
 833 002e 3A       		.uleb128 0x3a
 834 002f 0B       		.uleb128 0xb
 835 0030 3B       		.uleb128 0x3b
 836 0031 05       		.uleb128 0x5
 837 0032 49       		.uleb128 0x49
 838 0033 13       		.uleb128 0x13
 839 0034 00       		.byte	0
 840 0035 00       		.byte	0
 841 0036 05       		.uleb128 0x5
 842 0037 35       		.uleb128 0x35
 843 0038 00       		.byte	0
 844 0039 49       		.uleb128 0x49
 845 003a 13       		.uleb128 0x13
 846 003b 00       		.byte	0
 847 003c 00       		.byte	0
 848 003d 06       		.uleb128 0x6
 849 003e 13       		.uleb128 0x13
 850 003f 01       		.byte	0x1
 851 0040 0B       		.uleb128 0xb
 852 0041 0B       		.uleb128 0xb
 853 0042 3A       		.uleb128 0x3a
 854 0043 0B       		.uleb128 0xb
 855 0044 3B       		.uleb128 0x3b
 856 0045 0B       		.uleb128 0xb
 857 0046 01       		.uleb128 0x1
 858 0047 13       		.uleb128 0x13
 859 0048 00       		.byte	0
 860 0049 00       		.byte	0
 861 004a 07       		.uleb128 0x7
 862 004b 0D       		.uleb128 0xd
 863 004c 00       		.byte	0
 864 004d 03       		.uleb128 0x3
 865 004e 0E       		.uleb128 0xe
 866 004f 3A       		.uleb128 0x3a
 867 0050 0B       		.uleb128 0xb
 868 0051 3B       		.uleb128 0x3b
 869 0052 0B       		.uleb128 0xb
 870 0053 49       		.uleb128 0x49
 871 0054 13       		.uleb128 0x13
 872 0055 38       		.uleb128 0x38
 873 0056 0B       		.uleb128 0xb
 874 0057 00       		.byte	0
 875 0058 00       		.byte	0
 876 0059 08       		.uleb128 0x8
 877 005a 16       		.uleb128 0x16
 878 005b 00       		.byte	0
 879 005c 03       		.uleb128 0x3
 880 005d 0E       		.uleb128 0xe
 881 005e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 33


 882 005f 0B       		.uleb128 0xb
 883 0060 3B       		.uleb128 0x3b
 884 0061 0B       		.uleb128 0xb
 885 0062 49       		.uleb128 0x49
 886 0063 13       		.uleb128 0x13
 887 0064 00       		.byte	0
 888 0065 00       		.byte	0
 889 0066 09       		.uleb128 0x9
 890 0067 0D       		.uleb128 0xd
 891 0068 00       		.byte	0
 892 0069 03       		.uleb128 0x3
 893 006a 08       		.uleb128 0x8
 894 006b 3A       		.uleb128 0x3a
 895 006c 0B       		.uleb128 0xb
 896 006d 3B       		.uleb128 0x3b
 897 006e 0B       		.uleb128 0xb
 898 006f 49       		.uleb128 0x49
 899 0070 13       		.uleb128 0x13
 900 0071 38       		.uleb128 0x38
 901 0072 0B       		.uleb128 0xb
 902 0073 00       		.byte	0
 903 0074 00       		.byte	0
 904 0075 0A       		.uleb128 0xa
 905 0076 01       		.uleb128 0x1
 906 0077 01       		.byte	0x1
 907 0078 49       		.uleb128 0x49
 908 0079 13       		.uleb128 0x13
 909 007a 01       		.uleb128 0x1
 910 007b 13       		.uleb128 0x13
 911 007c 00       		.byte	0
 912 007d 00       		.byte	0
 913 007e 0B       		.uleb128 0xb
 914 007f 21       		.uleb128 0x21
 915 0080 00       		.byte	0
 916 0081 49       		.uleb128 0x49
 917 0082 13       		.uleb128 0x13
 918 0083 2F       		.uleb128 0x2f
 919 0084 0B       		.uleb128 0xb
 920 0085 00       		.byte	0
 921 0086 00       		.byte	0
 922 0087 0C       		.uleb128 0xc
 923 0088 13       		.uleb128 0x13
 924 0089 01       		.byte	0x1
 925 008a 0B       		.uleb128 0xb
 926 008b 0B       		.uleb128 0xb
 927 008c 3A       		.uleb128 0x3a
 928 008d 0B       		.uleb128 0xb
 929 008e 3B       		.uleb128 0x3b
 930 008f 05       		.uleb128 0x5
 931 0090 01       		.uleb128 0x1
 932 0091 13       		.uleb128 0x13
 933 0092 00       		.byte	0
 934 0093 00       		.byte	0
 935 0094 0D       		.uleb128 0xd
 936 0095 0D       		.uleb128 0xd
 937 0096 00       		.byte	0
 938 0097 03       		.uleb128 0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 34


 939 0098 0E       		.uleb128 0xe
 940 0099 3A       		.uleb128 0x3a
 941 009a 0B       		.uleb128 0xb
 942 009b 3B       		.uleb128 0x3b
 943 009c 05       		.uleb128 0x5
 944 009d 49       		.uleb128 0x49
 945 009e 13       		.uleb128 0x13
 946 009f 38       		.uleb128 0x38
 947 00a0 0B       		.uleb128 0xb
 948 00a1 00       		.byte	0
 949 00a2 00       		.byte	0
 950 00a3 0E       		.uleb128 0xe
 951 00a4 2E       		.uleb128 0x2e
 952 00a5 00       		.byte	0
 953 00a6 3F       		.uleb128 0x3f
 954 00a7 19       		.uleb128 0x19
 955 00a8 03       		.uleb128 0x3
 956 00a9 0E       		.uleb128 0xe
 957 00aa 3A       		.uleb128 0x3a
 958 00ab 0B       		.uleb128 0xb
 959 00ac 3B       		.uleb128 0x3b
 960 00ad 0B       		.uleb128 0xb
 961 00ae 27       		.uleb128 0x27
 962 00af 19       		.uleb128 0x19
 963 00b0 11       		.uleb128 0x11
 964 00b1 01       		.uleb128 0x1
 965 00b2 12       		.uleb128 0x12
 966 00b3 06       		.uleb128 0x6
 967 00b4 40       		.uleb128 0x40
 968 00b5 18       		.uleb128 0x18
 969 00b6 9742     		.uleb128 0x2117
 970 00b8 19       		.uleb128 0x19
 971 00b9 00       		.byte	0
 972 00ba 00       		.byte	0
 973 00bb 0F       		.uleb128 0xf
 974 00bc 2E       		.uleb128 0x2e
 975 00bd 00       		.byte	0
 976 00be 3F       		.uleb128 0x3f
 977 00bf 19       		.uleb128 0x19
 978 00c0 03       		.uleb128 0x3
 979 00c1 0E       		.uleb128 0xe
 980 00c2 3A       		.uleb128 0x3a
 981 00c3 0B       		.uleb128 0xb
 982 00c4 3B       		.uleb128 0x3b
 983 00c5 05       		.uleb128 0x5
 984 00c6 27       		.uleb128 0x27
 985 00c7 19       		.uleb128 0x19
 986 00c8 11       		.uleb128 0x11
 987 00c9 01       		.uleb128 0x1
 988 00ca 12       		.uleb128 0x12
 989 00cb 06       		.uleb128 0x6
 990 00cc 40       		.uleb128 0x40
 991 00cd 18       		.uleb128 0x18
 992 00ce 9742     		.uleb128 0x2117
 993 00d0 19       		.uleb128 0x19
 994 00d1 00       		.byte	0
 995 00d2 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 35


 996 00d3 10       		.uleb128 0x10
 997 00d4 2E       		.uleb128 0x2e
 998 00d5 00       		.byte	0
 999 00d6 3F       		.uleb128 0x3f
 1000 00d7 19       		.uleb128 0x19
 1001 00d8 03       		.uleb128 0x3
 1002 00d9 0E       		.uleb128 0xe
 1003 00da 3A       		.uleb128 0x3a
 1004 00db 0B       		.uleb128 0xb
 1005 00dc 3B       		.uleb128 0x3b
 1006 00dd 05       		.uleb128 0x5
 1007 00de 27       		.uleb128 0x27
 1008 00df 19       		.uleb128 0x19
 1009 00e0 11       		.uleb128 0x11
 1010 00e1 01       		.uleb128 0x1
 1011 00e2 12       		.uleb128 0x12
 1012 00e3 06       		.uleb128 0x6
 1013 00e4 40       		.uleb128 0x40
 1014 00e5 18       		.uleb128 0x18
 1015 00e6 9642     		.uleb128 0x2116
 1016 00e8 19       		.uleb128 0x19
 1017 00e9 00       		.byte	0
 1018 00ea 00       		.byte	0
 1019 00eb 11       		.uleb128 0x11
 1020 00ec 2E       		.uleb128 0x2e
 1021 00ed 01       		.byte	0x1
 1022 00ee 3F       		.uleb128 0x3f
 1023 00ef 19       		.uleb128 0x19
 1024 00f0 03       		.uleb128 0x3
 1025 00f1 0E       		.uleb128 0xe
 1026 00f2 3A       		.uleb128 0x3a
 1027 00f3 0B       		.uleb128 0xb
 1028 00f4 3B       		.uleb128 0x3b
 1029 00f5 05       		.uleb128 0x5
 1030 00f6 27       		.uleb128 0x27
 1031 00f7 19       		.uleb128 0x19
 1032 00f8 11       		.uleb128 0x11
 1033 00f9 01       		.uleb128 0x1
 1034 00fa 12       		.uleb128 0x12
 1035 00fb 06       		.uleb128 0x6
 1036 00fc 40       		.uleb128 0x40
 1037 00fd 18       		.uleb128 0x18
 1038 00fe 9742     		.uleb128 0x2117
 1039 0100 19       		.uleb128 0x19
 1040 0101 01       		.uleb128 0x1
 1041 0102 13       		.uleb128 0x13
 1042 0103 00       		.byte	0
 1043 0104 00       		.byte	0
 1044 0105 12       		.uleb128 0x12
 1045 0106 34       		.uleb128 0x34
 1046 0107 00       		.byte	0
 1047 0108 03       		.uleb128 0x3
 1048 0109 0E       		.uleb128 0xe
 1049 010a 3A       		.uleb128 0x3a
 1050 010b 0B       		.uleb128 0xb
 1051 010c 3B       		.uleb128 0x3b
 1052 010d 05       		.uleb128 0x5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 36


 1053 010e 49       		.uleb128 0x49
 1054 010f 13       		.uleb128 0x13
 1055 0110 02       		.uleb128 0x2
 1056 0111 18       		.uleb128 0x18
 1057 0112 00       		.byte	0
 1058 0113 00       		.byte	0
 1059 0114 13       		.uleb128 0x13
 1060 0115 34       		.uleb128 0x34
 1061 0116 00       		.byte	0
 1062 0117 03       		.uleb128 0x3
 1063 0118 08       		.uleb128 0x8
 1064 0119 3A       		.uleb128 0x3a
 1065 011a 0B       		.uleb128 0xb
 1066 011b 3B       		.uleb128 0x3b
 1067 011c 05       		.uleb128 0x5
 1068 011d 49       		.uleb128 0x49
 1069 011e 13       		.uleb128 0x13
 1070 011f 02       		.uleb128 0x2
 1071 0120 18       		.uleb128 0x18
 1072 0121 00       		.byte	0
 1073 0122 00       		.byte	0
 1074 0123 14       		.uleb128 0x14
 1075 0124 34       		.uleb128 0x34
 1076 0125 00       		.byte	0
 1077 0126 03       		.uleb128 0x3
 1078 0127 0E       		.uleb128 0xe
 1079 0128 3A       		.uleb128 0x3a
 1080 0129 0B       		.uleb128 0xb
 1081 012a 3B       		.uleb128 0x3b
 1082 012b 0B       		.uleb128 0xb
 1083 012c 49       		.uleb128 0x49
 1084 012d 13       		.uleb128 0x13
 1085 012e 3F       		.uleb128 0x3f
 1086 012f 19       		.uleb128 0x19
 1087 0130 3C       		.uleb128 0x3c
 1088 0131 19       		.uleb128 0x19
 1089 0132 00       		.byte	0
 1090 0133 00       		.byte	0
 1091 0134 00       		.byte	0
 1092              		.section	.debug_aranges,"",%progbits
 1093 0000 3C000000 		.4byte	0x3c
 1094 0004 0200     		.2byte	0x2
 1095 0006 00000000 		.4byte	.Ldebug_info0
 1096 000a 04       		.byte	0x4
 1097 000b 00       		.byte	0
 1098 000c 0000     		.2byte	0
 1099 000e 0000     		.2byte	0
 1100 0010 00000000 		.4byte	.LFB0
 1101 0014 54000000 		.4byte	.LFE0-.LFB0
 1102 0018 00000000 		.4byte	.LFB1
 1103 001c 5C000000 		.4byte	.LFE1-.LFB1
 1104 0020 00000000 		.4byte	.LFB2
 1105 0024 0C000000 		.4byte	.LFE2-.LFB2
 1106 0028 00000000 		.4byte	.LFB3
 1107 002c 0A000000 		.4byte	.LFE3-.LFB3
 1108 0030 00000000 		.4byte	.LFB4
 1109 0034 00010000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 37


 1110 0038 00000000 		.4byte	0
 1111 003c 00000000 		.4byte	0
 1112              		.section	.debug_ranges,"",%progbits
 1113              	.Ldebug_ranges0:
 1114 0000 00000000 		.4byte	.LFB0
 1115 0004 54000000 		.4byte	.LFE0
 1116 0008 00000000 		.4byte	.LFB1
 1117 000c 5C000000 		.4byte	.LFE1
 1118 0010 00000000 		.4byte	.LFB2
 1119 0014 0C000000 		.4byte	.LFE2
 1120 0018 00000000 		.4byte	.LFB3
 1121 001c 0A000000 		.4byte	.LFE3
 1122 0020 00000000 		.4byte	.LFB4
 1123 0024 00010000 		.4byte	.LFE4
 1124 0028 00000000 		.4byte	0
 1125 002c 00000000 		.4byte	0
 1126              		.section	.debug_line,"",%progbits
 1127              	.Ldebug_line0:
 1128 0000 FC000000 		.section	.debug_str,"MS",%progbits,1
 1128      02006400 
 1128      00000201 
 1128      FB0E0D00 
 1128      01010101 
 1129              	.LASF52:
 1130 0000 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\PSo"
 1130      73657273 
 1130      5C4C756B 
 1130      61732043 
 1130      72657574 
 1131 002e 43354C50 		.ascii	"C5LP-freeDSP-USB-Port\\PSoC_freeDSP_USB_Port\\USBFS"
 1131      2D667265 
 1131      65445350 
 1131      2D555342 
 1131      2D506F72 
 1132 005f 5F415544 		.ascii	"_AUDIO_PSoC3_5LP_Example.cydsn\000"
 1132      494F5F50 
 1132      536F4333 
 1132      5F354C50 
 1132      5F457861 
 1133              	.LASF42:
 1134 007e 61726245 		.ascii	"arbEp\000"
 1134      7000
 1135              	.LASF28:
 1136 0084 65704372 		.ascii	"epCr0\000"
 1136      3000
 1137              	.LASF49:
 1138 008a 65705374 		.ascii	"epStatus\000"
 1138      61747573 
 1138      00
 1139              	.LASF11:
 1140 0093 666C6F61 		.ascii	"float\000"
 1140      7400
 1141              	.LASF33:
 1142 0099 72657365 		.ascii	"reserved\000"
 1142      72766564 
 1142      00
 1143              	.LASF39:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 38


 1144 00a2 55534246 		.ascii	"USBFS_arb_ep_struct\000"
 1144      535F6172 
 1144      625F6570 
 1144      5F737472 
 1144      75637400 
 1145              	.LASF3:
 1146 00b6 73686F72 		.ascii	"short unsigned int\000"
 1146      7420756E 
 1146      7369676E 
 1146      65642069 
 1146      6E7400
 1147              	.LASF30:
 1148 00c9 65704366 		.ascii	"epCfg\000"
 1148      6700
 1149              	.LASF25:
 1150 00cf 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 1150      4246535F 
 1150      45505F43 
 1150      544C5F42 
 1150      4C4F434B 
 1151              	.LASF47:
 1152 00e4 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 1152      535F4255 
 1152      535F5245 
 1152      5345545F 
 1152      49535200 
 1153              	.LASF48:
 1154 00f8 61726249 		.ascii	"arbIntrStatus\000"
 1154      6E747253 
 1154      74617475 
 1154      7300
 1155              	.LASF26:
 1156 0106 6570436E 		.ascii	"epCnt0\000"
 1156      743000
 1157              	.LASF27:
 1158 010d 6570436E 		.ascii	"epCnt1\000"
 1158      743100
 1159              	.LASF19:
 1160 0114 6570546F 		.ascii	"epToggle\000"
 1160      67676C65 
 1160      00
 1161              	.LASF1:
 1162 011d 756E7369 		.ascii	"unsigned char\000"
 1162      676E6564 
 1162      20636861 
 1162      7200
 1163              	.LASF51:
 1164 012b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS_episr.c\000"
 1164      6E657261 
 1164      7465645F 
 1164      536F7572 
 1164      63655C50 
 1165              	.LASF14:
 1166 0152 72656738 		.ascii	"reg8\000"
 1166      00
 1167              	.LASF17:
 1168 0157 61706945 		.ascii	"apiEpState\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 39


 1168      70537461 
 1168      746500
 1169              	.LASF5:
 1170 0162 6C6F6E67 		.ascii	"long unsigned int\000"
 1170      20756E73 
 1170      69676E65 
 1170      6420696E 
 1170      7400
 1171              	.LASF20:
 1172 0174 61646472 		.ascii	"addr\000"
 1172      00
 1173              	.LASF46:
 1174 0179 55534246 		.ascii	"USBFS_SOF_ISR\000"
 1174      535F534F 
 1174      465F4953 
 1174      5200
 1175              	.LASF32:
 1176 0187 65705372 		.ascii	"epSr\000"
 1176      00
 1177              	.LASF54:
 1178 018c 55534246 		.ascii	"USBFS_EP\000"
 1178      535F4550 
 1178      00
 1179              	.LASF34:
 1180 0195 72775761 		.ascii	"rwWa\000"
 1180      00
 1181              	.LASF12:
 1182 019a 646F7562 		.ascii	"double\000"
 1182      6C6500
 1183              	.LASF29:
 1184 01a1 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 1184      535F7369 
 1184      655F6570 
 1184      5F737472 
 1184      75637400 
 1185              	.LASF22:
 1186 01b5 62756666 		.ascii	"buffOffset\000"
 1186      4F666673 
 1186      657400
 1187              	.LASF35:
 1188 01c0 72775761 		.ascii	"rwWaMsb\000"
 1188      4D736200 
 1189              	.LASF10:
 1190 01c8 75696E74 		.ascii	"uint16\000"
 1190      313600
 1191              	.LASF41:
 1192 01cf 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 1192      535F7369 
 1192      655F6570 
 1192      735F7374 
 1192      72756374 
 1193              	.LASF38:
 1194 01e4 72774472 		.ascii	"rwDr\000"
 1194      00
 1195              	.LASF8:
 1196 01e9 756E7369 		.ascii	"unsigned int\000"
 1196      676E6564 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 40


 1196      20696E74 
 1196      00
 1197              	.LASF37:
 1198 01f6 72775261 		.ascii	"rwRaMsb\000"
 1198      4D736200 
 1199              	.LASF7:
 1200 01fe 6C6F6E67 		.ascii	"long long unsigned int\000"
 1200      206C6F6E 
 1200      6720756E 
 1200      7369676E 
 1200      65642069 
 1201              	.LASF18:
 1202 0215 68774570 		.ascii	"hwEpState\000"
 1202      53746174 
 1202      6500
 1203              	.LASF44:
 1204 021f 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 1204      535F4550 
 1204      5F315F49 
 1204      535200
 1205              	.LASF31:
 1206 022e 6570496E 		.ascii	"epIntEn\000"
 1206      74456E00 
 1207              	.LASF43:
 1208 0236 55534246 		.ascii	"USBFS_arb_eps_struct\000"
 1208      535F6172 
 1208      625F6570 
 1208      735F7374 
 1208      72756374 
 1209              	.LASF16:
 1210 024b 61747472 		.ascii	"attrib\000"
 1210      696200
 1211              	.LASF21:
 1212 0252 65704D6F 		.ascii	"epMode\000"
 1212      646500
 1213              	.LASF6:
 1214 0259 6C6F6E67 		.ascii	"long long int\000"
 1214      206C6F6E 
 1214      6720696E 
 1214      7400
 1215              	.LASF15:
 1216 0267 73697A65 		.ascii	"sizetype\000"
 1216      74797065 
 1216      00
 1217              	.LASF13:
 1218 0270 63686172 		.ascii	"char\000"
 1218      00
 1219              	.LASF50:
 1220 0275 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1220      4320342E 
 1220      392E3320 
 1220      32303135 
 1220      30333033 
 1221 02a8 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1221      20726576 
 1221      6973696F 
 1221      6E203232 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccT79Fja.s 			page 41


 1221      31323230 
 1222 02db 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1222      66756E63 
 1222      74696F6E 
 1222      2D736563 
 1222      74696F6E 
 1223              	.LASF23:
 1224 0303 62756666 		.ascii	"bufferSize\000"
 1224      65725369 
 1224      7A6500
 1225              	.LASF2:
 1226 030e 73686F72 		.ascii	"short int\000"
 1226      7420696E 
 1226      7400
 1227              	.LASF36:
 1228 0318 72775261 		.ascii	"rwRa\000"
 1228      00
 1229              	.LASF9:
 1230 031d 75696E74 		.ascii	"uint8\000"
 1230      3800
 1231              	.LASF24:
 1232 0323 696E7465 		.ascii	"interface\000"
 1232      72666163 
 1232      6500
 1233              	.LASF45:
 1234 032d 55534246 		.ascii	"USBFS_EP_6_ISR\000"
 1234      535F4550 
 1234      5F365F49 
 1234      535200
 1235              	.LASF4:
 1236 033c 6C6F6E67 		.ascii	"long int\000"
 1236      20696E74 
 1236      00
 1237              	.LASF0:
 1238 0345 7369676E 		.ascii	"signed char\000"
 1238      65642063 
 1238      68617200 
 1239              	.LASF53:
 1240 0351 55534246 		.ascii	"USBFS_ARB_ISR\000"
 1240      535F4152 
 1240      425F4953 
 1240      5200
 1241              	.LASF40:
 1242 035f 73696545 		.ascii	"sieEp\000"
 1242      7000
 1243              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

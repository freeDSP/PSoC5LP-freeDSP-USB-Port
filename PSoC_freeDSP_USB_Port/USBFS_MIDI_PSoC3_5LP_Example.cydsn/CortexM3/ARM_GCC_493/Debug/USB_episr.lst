ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USB_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USB_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USB_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USB_EP_1_ISR, %function
  24              	USB_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USB_episr.c"
   1:.\Generated_Source\PSoC5/USB_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USB_episr.c **** * \file USB_episr.c
   3:.\Generated_Source\PSoC5/USB_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USB_episr.c **** *
   5:.\Generated_Source\PSoC5/USB_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USB_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USB_episr.c **** *
   8:.\Generated_Source\PSoC5/USB_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USB_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USB_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USB_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USB_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USB_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USB_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USB_episr.c **** 
  16:.\Generated_Source\PSoC5/USB_episr.c **** #include "USB_pvt.h"
  17:.\Generated_Source\PSoC5/USB_episr.c **** #include "USB_cydmac.h"
  18:.\Generated_Source\PSoC5/USB_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USB_episr.c **** 
  20:.\Generated_Source\PSoC5/USB_episr.c **** 
  21:.\Generated_Source\PSoC5/USB_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USB_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USB_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USB_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USB_episr.c **** 
  26:.\Generated_Source\PSoC5/USB_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USB_episr.c **** 
  28:.\Generated_Source\PSoC5/USB_episr.c **** 
  29:.\Generated_Source\PSoC5/USB_episr.c **** #if (USB_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USB_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USB_episr.c ****     * Function Name: USB_EP_1_ISR
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 2


  32:.\Generated_Source\PSoC5/USB_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USB_episr.c ****     *
  34:.\Generated_Source\PSoC5/USB_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USB_episr.c ****     *
  36:.\Generated_Source\PSoC5/USB_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USB_episr.c ****     CY_ISR(USB_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USB_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  39:.\Generated_Source\PSoC5/USB_episr.c **** 
  40:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USB_episr.c **** 
  44:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USB_episr.c **** 
  46:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USB_episr.c **** 
  48:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USB_episr.c ****         {
  51:.\Generated_Source\PSoC5/USB_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USB_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USB_episr.c ****     
  55:.\Generated_Source\PSoC5/USB_episr.c ****         USB_ClearSieEpInterruptSource(USB_SIE_INT_EP1_INTR);
  37              		.loc 1 55 0
  38 0004 104A     		ldr	r2, .L3
  39 0006 104B     		ldr	r3, .L3
  40 0008 1B78     		ldrb	r3, [r3]
  41 000a DBB2     		uxtb	r3, r3
  42 000c 23F00103 		bic	r3, r3, #1
  43 0010 DBB2     		uxtb	r3, r3
  44 0012 1370     		strb	r3, [r2]
  56:.\Generated_Source\PSoC5/USB_episr.c ****             
  57:.\Generated_Source\PSoC5/USB_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USB_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USB_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USB_episr.c ****         */
  61:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USB_episr.c ****         if (0u != (USB_EP[USB_EP1].addr & USB_DIR_IN))
  63:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USB_episr.c ****         {
  65:.\Generated_Source\PSoC5/USB_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USB_episr.c ****             (void) USB_SIE_EP_BASE.sieEp[USB_EP1].epCr0;
  45              		.loc 1 66 0
  46 0014 0D4B     		ldr	r3, .L3+4
  47 0016 9B7C     		ldrb	r3, [r3, #18]
  67:.\Generated_Source\PSoC5/USB_episr.c ****             
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 3


  68:.\Generated_Source\PSoC5/USB_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_GET_EP_TYPE(USB_EP1) != USB_EP_TYPE_ISOC)
  48              		.loc 1 69 0
  49 0018 0D4B     		ldr	r3, .L3+8
  50 001a 1B7B     		ldrb	r3, [r3, #12]
  51 001c DBB2     		uxtb	r3, r3
  52 001e 03F00303 		and	r3, r3, #3
  53 0022 012B     		cmp	r3, #1
  54 0024 08D0     		beq	.L2
  70:.\Generated_Source\PSoC5/USB_episr.c ****             {
  71:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_EP[USB_EP1].epToggle ^= USB_EPX_CNT_DATA_TOGGLE;
  55              		.loc 1 71 0
  56 0026 0A4B     		ldr	r3, .L3+8
  57 0028 DB7B     		ldrb	r3, [r3, #15]
  58 002a DBB2     		uxtb	r3, r3
  59 002c 83F07F03 		eor	r3, r3, #127
  60 0030 DB43     		mvns	r3, r3
  61 0032 DAB2     		uxtb	r2, r3
  62 0034 064B     		ldr	r3, .L3+8
  63 0036 DA73     		strb	r2, [r3, #15]
  64              	.L2:
  72:.\Generated_Source\PSoC5/USB_episr.c ****             }
  73:.\Generated_Source\PSoC5/USB_episr.c **** 
  74:.\Generated_Source\PSoC5/USB_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USB_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USB_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USB_episr.c ****             */
  80:.\Generated_Source\PSoC5/USB_episr.c ****             USB_EP[USB_EP1].apiEpState = USB_EVENT_PENDING;
  65              		.loc 1 80 0
  66 0038 054B     		ldr	r3, .L3+8
  67 003a 0122     		movs	r2, #1
  68 003c 5A73     		strb	r2, [r3, #13]
  81:.\Generated_Source\PSoC5/USB_episr.c ****         }
  82:.\Generated_Source\PSoC5/USB_episr.c **** 
  83:.\Generated_Source\PSoC5/USB_episr.c ****     #if (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USB_episr.c ****         #if (defined(USB_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USB_episr.c ****             !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_midi_out_ep == USB_EP1)
  87:.\Generated_Source\PSoC5/USB_episr.c ****             {
  88:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC5/USB_episr.c ****             }
  90:.\Generated_Source\PSoC5/USB_episr.c ****         #endif /* (USB_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USB_episr.c ****     
  93:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC5/USB_episr.c **** 
  95:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USB_episr.c **** 
  97:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_1_ISR_ExitCallback();
  99:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USB_episr.c **** 
 101:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USB_episr.c ****         
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 4


 104:.\Generated_Source\PSoC5/USB_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USB_episr.c ****         }
 106:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USB_episr.c ****     }
  69              		.loc 1 107 0
  70 003e BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0040 5DF8047B 		ldr	r7, [sp], #4
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 0044 7047     		bx	lr
  77              	.L4:
  78 0046 00BF     		.align	2
  79              	.L3:
  80 0048 0B600040 		.word	1073766411
  81 004c FC5F0040 		.word	1073766396
  82 0050 00000000 		.word	USB_EP
  83              		.cfi_endproc
  84              	.LFE0:
  85              		.size	USB_EP_1_ISR, .-USB_EP_1_ISR
  86              		.section	.text.USB_EP_2_ISR,"ax",%progbits
  87              		.align	2
  88              		.global	USB_EP_2_ISR
  89              		.thumb
  90              		.thumb_func
  91              		.type	USB_EP_2_ISR, %function
  92              	USB_EP_2_ISR:
  93              	.LFB1:
 108:.\Generated_Source\PSoC5/USB_episr.c **** 
 109:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USB_episr.c **** 
 111:.\Generated_Source\PSoC5/USB_episr.c **** 
 112:.\Generated_Source\PSoC5/USB_episr.c **** #if (USB_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USB_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USB_episr.c ****     * Function Name: USB_EP_2_ISR
 115:.\Generated_Source\PSoC5/USB_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USB_episr.c ****     *
 117:.\Generated_Source\PSoC5/USB_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USB_episr.c ****     *
 119:.\Generated_Source\PSoC5/USB_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USB_episr.c ****     CY_ISR(USB_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USB_episr.c ****     {
  94              		.loc 1 121 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 122:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USB_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 5


 126:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USB_episr.c **** 
 128:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USB_episr.c **** 
 130:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USB_episr.c ****         {
 133:.\Generated_Source\PSoC5/USB_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USB_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 136:.\Generated_Source\PSoC5/USB_episr.c **** 
 137:.\Generated_Source\PSoC5/USB_episr.c ****         USB_ClearSieEpInterruptSource(USB_SIE_INT_EP2_INTR);
 104              		.loc 1 137 0
 105 0004 104A     		ldr	r2, .L7
 106 0006 104B     		ldr	r3, .L7
 107 0008 1B78     		ldrb	r3, [r3]
 108 000a DBB2     		uxtb	r3, r3
 109 000c 23F00203 		bic	r3, r3, #2
 110 0010 DBB2     		uxtb	r3, r3
 111 0012 1370     		strb	r3, [r2]
 138:.\Generated_Source\PSoC5/USB_episr.c **** 
 139:.\Generated_Source\PSoC5/USB_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USB_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USB_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USB_episr.c ****         */
 143:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC5/USB_episr.c ****         if (0u != (USB_EP[USB_EP2].addr & USB_DIR_IN))
 145:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC5/USB_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USB_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USB_episr.c ****             (void) USB_SIE_EP_BASE.sieEp[USB_EP2].epCr0;
 112              		.loc 1 148 0
 113 0014 0D4B     		ldr	r3, .L7+4
 114 0016 93F82230 		ldrb	r3, [r3, #34]
 149:.\Generated_Source\PSoC5/USB_episr.c ****             
 150:.\Generated_Source\PSoC5/USB_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_GET_EP_TYPE(USB_EP2) != USB_EP_TYPE_ISOC)
 115              		.loc 1 151 0
 116 001a 0D4B     		ldr	r3, .L7+8
 117 001c 1B7E     		ldrb	r3, [r3, #24]
 118 001e DBB2     		uxtb	r3, r3
 119 0020 03F00303 		and	r3, r3, #3
 120 0024 012B     		cmp	r3, #1
 121 0026 08D0     		beq	.L6
 152:.\Generated_Source\PSoC5/USB_episr.c ****             {
 153:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_EP[USB_EP2].epToggle ^= USB_EPX_CNT_DATA_TOGGLE;
 122              		.loc 1 153 0
 123 0028 094B     		ldr	r3, .L7+8
 124 002a DB7E     		ldrb	r3, [r3, #27]
 125 002c DBB2     		uxtb	r3, r3
 126 002e 83F07F03 		eor	r3, r3, #127
 127 0032 DB43     		mvns	r3, r3
 128 0034 DAB2     		uxtb	r2, r3
 129 0036 064B     		ldr	r3, .L7+8
 130 0038 DA76     		strb	r2, [r3, #27]
 131              	.L6:
 154:.\Generated_Source\PSoC5/USB_episr.c ****             }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 6


 155:.\Generated_Source\PSoC5/USB_episr.c **** 
 156:.\Generated_Source\PSoC5/USB_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USB_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USB_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USB_episr.c ****             */
 162:.\Generated_Source\PSoC5/USB_episr.c ****             USB_EP[USB_EP2].apiEpState = USB_EVENT_PENDING;
 132              		.loc 1 162 0
 133 003a 054B     		ldr	r3, .L7+8
 134 003c 0122     		movs	r2, #1
 135 003e 5A76     		strb	r2, [r3, #25]
 163:.\Generated_Source\PSoC5/USB_episr.c ****         }
 164:.\Generated_Source\PSoC5/USB_episr.c **** 
 165:.\Generated_Source\PSoC5/USB_episr.c ****     #if (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC5/USB_episr.c ****         #if (defined(USB_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USB_episr.c ****             !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_midi_out_ep == USB_EP2)
 169:.\Generated_Source\PSoC5/USB_episr.c ****             {
 170:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USB_episr.c ****             }
 172:.\Generated_Source\PSoC5/USB_episr.c ****         #endif /* (USB_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USB_episr.c ****     
 175:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USB_episr.c **** 
 177:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USB_episr.c **** 
 179:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USB_episr.c **** 
 183:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USB_episr.c ****         
 186:.\Generated_Source\PSoC5/USB_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USB_episr.c ****         }
 188:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USB_episr.c ****     }
 136              		.loc 1 189 0
 137 0040 BD46     		mov	sp, r7
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 0042 5DF8047B 		ldr	r7, [sp], #4
 141              		.cfi_restore 7
 142              		.cfi_def_cfa_offset 0
 143 0046 7047     		bx	lr
 144              	.L8:
 145              		.align	2
 146              	.L7:
 147 0048 0B600040 		.word	1073766411
 148 004c FC5F0040 		.word	1073766396
 149 0050 00000000 		.word	USB_EP
 150              		.cfi_endproc
 151              	.LFE1:
 152              		.size	USB_EP_2_ISR, .-USB_EP_2_ISR
 153              		.section	.text.USB_SOF_ISR,"ax",%progbits
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 7


 154              		.align	2
 155              		.global	USB_SOF_ISR
 156              		.thumb
 157              		.thumb_func
 158              		.type	USB_SOF_ISR, %function
 159              	USB_SOF_ISR:
 160              	.LFB2:
 190:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USB_episr.c **** 
 192:.\Generated_Source\PSoC5/USB_episr.c **** 
 193:.\Generated_Source\PSoC5/USB_episr.c **** #if (USB_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USB_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USB_episr.c ****     * Function Name: USB_EP_3_ISR
 196:.\Generated_Source\PSoC5/USB_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USB_episr.c ****     *
 198:.\Generated_Source\PSoC5/USB_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USB_episr.c ****     *
 200:.\Generated_Source\PSoC5/USB_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USB_episr.c ****     CY_ISR(USB_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USB_episr.c ****     {
 203:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USB_episr.c **** 
 207:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC5/USB_episr.c **** 
 209:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USB_episr.c **** 
 211:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC5/USB_episr.c ****         {
 214:.\Generated_Source\PSoC5/USB_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USB_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USB_episr.c **** 
 218:.\Generated_Source\PSoC5/USB_episr.c ****         USB_ClearSieEpInterruptSource(USB_SIE_INT_EP3_INTR);    
 219:.\Generated_Source\PSoC5/USB_episr.c **** 
 220:.\Generated_Source\PSoC5/USB_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USB_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC5/USB_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:.\Generated_Source\PSoC5/USB_episr.c ****         */
 224:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USB_episr.c ****         if (0u != (USB_EP[USB_EP3].addr & USB_DIR_IN))
 226:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USB_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USB_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USB_episr.c ****             (void) USB_SIE_EP_BASE.sieEp[USB_EP3].epCr0;
 230:.\Generated_Source\PSoC5/USB_episr.c **** 
 231:.\Generated_Source\PSoC5/USB_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_GET_EP_TYPE(USB_EP3) != USB_EP_TYPE_ISOC)
 233:.\Generated_Source\PSoC5/USB_episr.c ****             {
 234:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_EP[USB_EP3].epToggle ^= USB_EPX_CNT_DATA_TOGGLE;
 235:.\Generated_Source\PSoC5/USB_episr.c ****             }
 236:.\Generated_Source\PSoC5/USB_episr.c **** 
 237:.\Generated_Source\PSoC5/USB_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USB_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC5/USB_episr.c ****             * Because last chunk of data is being copied.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 8


 240:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USB_episr.c ****             */
 243:.\Generated_Source\PSoC5/USB_episr.c ****             USB_EP[USB_EP3].apiEpState = USB_EVENT_PENDING;
 244:.\Generated_Source\PSoC5/USB_episr.c ****         }
 245:.\Generated_Source\PSoC5/USB_episr.c **** 
 246:.\Generated_Source\PSoC5/USB_episr.c ****     #if (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USB_episr.c ****         #if (defined(USB_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USB_episr.c ****             !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_midi_out_ep == USB_EP3)
 250:.\Generated_Source\PSoC5/USB_episr.c ****             {
 251:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USB_episr.c ****             }
 253:.\Generated_Source\PSoC5/USB_episr.c ****         #endif /* (USB_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC5/USB_episr.c **** 
 256:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USB_episr.c **** 
 258:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USB_episr.c **** 
 260:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USB_episr.c **** 
 264:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USB_episr.c ****         
 267:.\Generated_Source\PSoC5/USB_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USB_episr.c ****         }
 269:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC5/USB_episr.c ****     }
 271:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USB_episr.c **** 
 273:.\Generated_Source\PSoC5/USB_episr.c **** 
 274:.\Generated_Source\PSoC5/USB_episr.c **** #if (USB_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC5/USB_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USB_episr.c ****     * Function Name: USB_EP_4_ISR
 277:.\Generated_Source\PSoC5/USB_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USB_episr.c ****     *
 279:.\Generated_Source\PSoC5/USB_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:.\Generated_Source\PSoC5/USB_episr.c ****     *
 281:.\Generated_Source\PSoC5/USB_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USB_episr.c ****     CY_ISR(USB_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USB_episr.c ****     {
 284:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC5/USB_episr.c **** 
 288:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USB_episr.c **** 
 290:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USB_episr.c **** 
 292:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USB_episr.c ****         {
 295:.\Generated_Source\PSoC5/USB_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USB_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 9


 297:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USB_episr.c **** 
 299:.\Generated_Source\PSoC5/USB_episr.c ****         USB_ClearSieEpInterruptSource(USB_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USB_episr.c ****         
 301:.\Generated_Source\PSoC5/USB_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USB_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USB_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USB_episr.c ****         */
 305:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USB_episr.c ****         if (0u != (USB_EP[USB_EP4].addr & USB_DIR_IN))
 307:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USB_episr.c ****         {
 309:.\Generated_Source\PSoC5/USB_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USB_episr.c ****             (void) USB_SIE_EP_BASE.sieEp[USB_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USB_episr.c **** 
 312:.\Generated_Source\PSoC5/USB_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_GET_EP_TYPE(USB_EP4) != USB_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USB_episr.c ****             {
 315:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_EP[USB_EP4].epToggle ^= USB_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USB_episr.c ****             }
 317:.\Generated_Source\PSoC5/USB_episr.c **** 
 318:.\Generated_Source\PSoC5/USB_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USB_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USB_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USB_episr.c ****             */
 324:.\Generated_Source\PSoC5/USB_episr.c ****             USB_EP[USB_EP4].apiEpState = USB_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USB_episr.c ****         }
 326:.\Generated_Source\PSoC5/USB_episr.c **** 
 327:.\Generated_Source\PSoC5/USB_episr.c ****     #if (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USB_episr.c ****         #if (defined(USB_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USB_episr.c ****             !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USB_episr.c ****             if(USB_midi_out_ep == USB_EP4)
 331:.\Generated_Source\PSoC5/USB_episr.c ****             {
 332:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USB_episr.c ****             }
 334:.\Generated_Source\PSoC5/USB_episr.c ****         #endif /* (USB_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USB_episr.c **** 
 337:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USB_episr.c **** 
 339:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USB_episr.c **** 
 341:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC5/USB_episr.c **** 
 345:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC5/USB_episr.c ****         
 348:.\Generated_Source\PSoC5/USB_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USB_episr.c ****         }
 350:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USB_episr.c ****     }
 352:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USB_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 10


 354:.\Generated_Source\PSoC5/USB_episr.c **** 
 355:.\Generated_Source\PSoC5/USB_episr.c **** #if (USB_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC5/USB_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USB_episr.c ****     * Function Name: USB_EP_5_ISR
 358:.\Generated_Source\PSoC5/USB_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USB_episr.c ****     *
 360:.\Generated_Source\PSoC5/USB_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USB_episr.c ****     *
 362:.\Generated_Source\PSoC5/USB_episr.c ****     *
 363:.\Generated_Source\PSoC5/USB_episr.c ****     *******************************************************************************/
 364:.\Generated_Source\PSoC5/USB_episr.c ****     CY_ISR(USB_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USB_episr.c ****     {
 366:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USB_episr.c **** 
 370:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USB_episr.c **** 
 372:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USB_episr.c **** 
 374:.\Generated_Source\PSoC5/USB_episr.c ****     #if (defined(USB_ENABLE_MIDI_STREAMING) && !defined(USB_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USB_episr.c ****                  USB_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USB_episr.c ****         {
 377:.\Generated_Source\PSoC5/USB_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USB_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USB_episr.c **** 
 381:.\Generated_Source\PSoC5/USB_episr.c ****         USB_ClearSieEpInterruptSource(USB_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USB_episr.c ****     
 383:.\Generated_Source\PSoC5/USB_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC5/USB_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USB_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USB_episr.c ****         */
 387:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USB_episr.c ****         if (0u != (USB_EP[USB_EP5].addr & USB_DIR_IN))
 389:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USB_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USB_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USB_episr.c ****             (void) USB_SIE_EP_BASE.sieEp[USB_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USB_episr.c **** 
 394:.\Generated_Source\PSoC5/USB_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_GET_EP_TYPE(USB_EP5) != USB_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USB_episr.c ****             {
 397:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_EP[USB_EP5].epToggle ^= USB_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USB_episr.c ****             }
 399:.\Generated_Source\PSoC5/USB_episr.c **** 
 400:.\Generated_Source\PSoC5/USB_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC5/USB_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USB_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USB_episr.c ****             */
 406:.\Generated_Source\PSoC5/USB_episr.c ****             USB_EP[USB_EP5].apiEpState = USB_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USB_episr.c ****         }
 408:.\Generated_Source\PSoC5/USB_episr.c **** 
 409:.\Generated_Source\PSoC5/USB_episr.c ****     #if (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USB_episr.c ****         #if (defined(USB_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 11


 411:.\Generated_Source\PSoC5/USB_episr.c ****             !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_midi_out_ep == USB_EP5)
 413:.\Generated_Source\PSoC5/USB_episr.c ****             {
 414:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USB_episr.c ****             }
 416:.\Generated_Source\PSoC5/USB_episr.c ****         #endif /* (USB_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USB_episr.c **** 
 419:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USB_episr.c **** 
 421:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USB_episr.c **** 
 423:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USB_episr.c **** 
 427:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USB_episr.c ****         
 430:.\Generated_Source\PSoC5/USB_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USB_episr.c ****         }
 432:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USB_episr.c ****     }
 434:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USB_episr.c **** 
 436:.\Generated_Source\PSoC5/USB_episr.c **** 
 437:.\Generated_Source\PSoC5/USB_episr.c **** #if (USB_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USB_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USB_episr.c ****     * Function Name: USB_EP_6_ISR
 440:.\Generated_Source\PSoC5/USB_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC5/USB_episr.c ****     *
 442:.\Generated_Source\PSoC5/USB_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USB_episr.c ****     *
 444:.\Generated_Source\PSoC5/USB_episr.c ****     *
 445:.\Generated_Source\PSoC5/USB_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC5/USB_episr.c ****     CY_ISR(USB_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USB_episr.c ****     {
 448:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_6_ISR_ENTRY_CALLBACK) */
 451:.\Generated_Source\PSoC5/USB_episr.c **** 
 452:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USB_episr.c **** 
 454:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USB_episr.c **** 
 456:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC5/USB_episr.c ****         {
 459:.\Generated_Source\PSoC5/USB_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USB_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USB_episr.c **** 
 463:.\Generated_Source\PSoC5/USB_episr.c ****         USB_ClearSieEpInterruptSource(USB_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC5/USB_episr.c ****         
 465:.\Generated_Source\PSoC5/USB_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USB_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USB_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 12


 468:.\Generated_Source\PSoC5/USB_episr.c ****         */
 469:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC5/USB_episr.c ****         if (0u != (USB_EP[USB_EP6].addr & USB_DIR_IN))
 471:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USB_episr.c ****         {
 473:.\Generated_Source\PSoC5/USB_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USB_episr.c ****             (void) USB_SIE_EP_BASE.sieEp[USB_EP6].epCr0;
 475:.\Generated_Source\PSoC5/USB_episr.c **** 
 476:.\Generated_Source\PSoC5/USB_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_GET_EP_TYPE(USB_EP6) != USB_EP_TYPE_ISOC)
 478:.\Generated_Source\PSoC5/USB_episr.c ****             {
 479:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_EP[USB_EP6].epToggle ^= USB_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC5/USB_episr.c ****             }
 481:.\Generated_Source\PSoC5/USB_episr.c ****             
 482:.\Generated_Source\PSoC5/USB_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USB_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USB_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USB_episr.c ****             */
 488:.\Generated_Source\PSoC5/USB_episr.c ****             USB_EP[USB_EP6].apiEpState = USB_EVENT_PENDING;
 489:.\Generated_Source\PSoC5/USB_episr.c ****         }
 490:.\Generated_Source\PSoC5/USB_episr.c **** 
 491:.\Generated_Source\PSoC5/USB_episr.c ****     #if (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USB_episr.c ****         #if (defined(USB_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC5/USB_episr.c ****             !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_midi_out_ep == USB_EP6)
 495:.\Generated_Source\PSoC5/USB_episr.c ****             {
 496:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USB_episr.c ****             }
 498:.\Generated_Source\PSoC5/USB_episr.c ****         #endif /* (USB_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USB_episr.c **** 
 501:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USB_episr.c **** 
 503:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USB_episr.c **** 
 505:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_6_ISR_EXIT_CALLBACK) */
 508:.\Generated_Source\PSoC5/USB_episr.c **** 
 509:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USB_episr.c ****         
 512:.\Generated_Source\PSoC5/USB_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USB_episr.c ****         }
 514:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC5/USB_episr.c ****     }
 516:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USB_episr.c **** 
 518:.\Generated_Source\PSoC5/USB_episr.c **** 
 519:.\Generated_Source\PSoC5/USB_episr.c **** #if (USB_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USB_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USB_episr.c ****     * Function Name: USB_EP_7_ISR
 522:.\Generated_Source\PSoC5/USB_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USB_episr.c ****     *
 524:.\Generated_Source\PSoC5/USB_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 13


 525:.\Generated_Source\PSoC5/USB_episr.c ****     *
 526:.\Generated_Source\PSoC5/USB_episr.c ****     *
 527:.\Generated_Source\PSoC5/USB_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USB_episr.c ****     CY_ISR(USB_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USB_episr.c ****     {
 530:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USB_episr.c **** 
 534:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC5/USB_episr.c **** 
 536:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USB_episr.c **** 
 538:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USB_episr.c ****         {
 541:.\Generated_Source\PSoC5/USB_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USB_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USB_episr.c ****     
 545:.\Generated_Source\PSoC5/USB_episr.c ****         USB_ClearSieEpInterruptSource(USB_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USB_episr.c ****         
 547:.\Generated_Source\PSoC5/USB_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USB_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USB_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USB_episr.c ****         */
 551:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USB_episr.c ****         if (0u != (USB_EP[USB_EP7].addr & USB_DIR_IN))
 553:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USB_episr.c ****         {           
 555:.\Generated_Source\PSoC5/USB_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USB_episr.c ****             (void) USB_SIE_EP_BASE.sieEp[USB_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USB_episr.c **** 
 558:.\Generated_Source\PSoC5/USB_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_GET_EP_TYPE(USB_EP7) != USB_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC5/USB_episr.c ****             {
 561:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_EP[USB_EP7].epToggle ^= USB_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USB_episr.c ****             }
 563:.\Generated_Source\PSoC5/USB_episr.c ****             
 564:.\Generated_Source\PSoC5/USB_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:.\Generated_Source\PSoC5/USB_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USB_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USB_episr.c ****             */
 570:.\Generated_Source\PSoC5/USB_episr.c ****             USB_EP[USB_EP7].apiEpState = USB_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USB_episr.c ****         }
 572:.\Generated_Source\PSoC5/USB_episr.c **** 
 573:.\Generated_Source\PSoC5/USB_episr.c **** 
 574:.\Generated_Source\PSoC5/USB_episr.c ****     #if (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC5/USB_episr.c ****         #if (defined(USB_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USB_episr.c ****             !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USB_episr.c ****             if(USB_midi_out_ep == USB_EP7)
 578:.\Generated_Source\PSoC5/USB_episr.c ****             {
 579:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USB_episr.c ****             }
 581:.\Generated_Source\PSoC5/USB_episr.c ****         #endif /* (USB_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 14


 582:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USB_episr.c **** 
 584:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USB_episr.c **** 
 586:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USB_episr.c **** 
 588:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USB_episr.c **** 
 592:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USB_episr.c ****         
 595:.\Generated_Source\PSoC5/USB_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USB_episr.c ****         }
 597:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USB_episr.c ****     }
 599:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USB_episr.c **** 
 601:.\Generated_Source\PSoC5/USB_episr.c **** 
 602:.\Generated_Source\PSoC5/USB_episr.c **** #if (USB_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USB_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USB_episr.c ****     * Function Name: USB_EP_8_ISR
 605:.\Generated_Source\PSoC5/USB_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USB_episr.c ****     *
 607:.\Generated_Source\PSoC5/USB_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USB_episr.c ****     *
 609:.\Generated_Source\PSoC5/USB_episr.c ****     *
 610:.\Generated_Source\PSoC5/USB_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USB_episr.c ****     CY_ISR(USB_EP_8_ISR)
 612:.\Generated_Source\PSoC5/USB_episr.c ****     {
 613:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USB_episr.c **** 
 617:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USB_episr.c **** 
 619:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USB_episr.c **** 
 621:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 622:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USB_episr.c ****         {
 624:.\Generated_Source\PSoC5/USB_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USB_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USB_episr.c **** 
 628:.\Generated_Source\PSoC5/USB_episr.c ****         USB_ClearSieEpInterruptSource(USB_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC5/USB_episr.c ****         
 630:.\Generated_Source\PSoC5/USB_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USB_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC5/USB_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USB_episr.c ****         */
 634:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USB_episr.c ****         if (0u != (USB_EP[USB_EP8].addr & USB_DIR_IN))
 636:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USB_episr.c ****         {
 638:.\Generated_Source\PSoC5/USB_episr.c ****             /* Read CR0 register to clear SIE lock. */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 15


 639:.\Generated_Source\PSoC5/USB_episr.c ****             (void) USB_SIE_EP_BASE.sieEp[USB_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USB_episr.c **** 
 641:.\Generated_Source\PSoC5/USB_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_GET_EP_TYPE(USB_EP8) != USB_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USB_episr.c ****             {
 644:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_EP[USB_EP8].epToggle ^= USB_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USB_episr.c ****             }
 646:.\Generated_Source\PSoC5/USB_episr.c **** 
 647:.\Generated_Source\PSoC5/USB_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USB_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC5/USB_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USB_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USB_episr.c ****             */
 653:.\Generated_Source\PSoC5/USB_episr.c ****             USB_EP[USB_EP8].apiEpState = USB_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USB_episr.c ****         }
 655:.\Generated_Source\PSoC5/USB_episr.c **** 
 656:.\Generated_Source\PSoC5/USB_episr.c ****     #if (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USB_episr.c ****         #if (defined(USB_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USB_episr.c ****             !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USB_episr.c ****             if (USB_midi_out_ep == USB_EP8)
 660:.\Generated_Source\PSoC5/USB_episr.c ****             {
 661:.\Generated_Source\PSoC5/USB_episr.c ****                 USB_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USB_episr.c ****             }
 663:.\Generated_Source\PSoC5/USB_episr.c ****         #endif /* (USB_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (!(CY_PSOC4 && USB_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USB_episr.c **** 
 666:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USB_episr.c **** 
 668:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC5/USB_episr.c **** 
 670:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USB_episr.c ****         USB_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USB_episr.c **** 
 674:.\Generated_Source\PSoC5/USB_episr.c ****     #if (CY_PSOC3 && defined(USB_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USB_episr.c ****         !defined(USB_MAIN_SERVICE_MIDI_OUT) && USB_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USB_episr.c ****         
 677:.\Generated_Source\PSoC5/USB_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USB_episr.c ****         }
 679:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (CY_PSOC3 && USB_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USB_episr.c ****     }
 681:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USB_episr.c **** 
 683:.\Generated_Source\PSoC5/USB_episr.c **** 
 684:.\Generated_Source\PSoC5/USB_episr.c **** #if (USB_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USB_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC5/USB_episr.c ****     * Function Name: USB_SOF_ISR
 687:.\Generated_Source\PSoC5/USB_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USB_episr.c ****     *
 689:.\Generated_Source\PSoC5/USB_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USB_episr.c ****     *
 691:.\Generated_Source\PSoC5/USB_episr.c ****     *
 692:.\Generated_Source\PSoC5/USB_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USB_episr.c ****     CY_ISR(USB_SOF_ISR)
 694:.\Generated_Source\PSoC5/USB_episr.c ****     {
 161              		.loc 1 694 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 16


 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0000 80B4     		push	{r7}
 167              		.cfi_def_cfa_offset 4
 168              		.cfi_offset 7, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 695:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC5/USB_episr.c ****         USB_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USB_episr.c **** 
 699:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USB_episr.c **** 
 701:.\Generated_Source\PSoC5/USB_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USB_episr.c **** 
 703:.\Generated_Source\PSoC5/USB_episr.c ****         USB_ClearSieInterruptSource(USB_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USB_episr.c **** 
 705:.\Generated_Source\PSoC5/USB_episr.c ****     #ifdef USB_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USB_episr.c ****         USB_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USB_episr.c ****     #endif /* (USB_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USB_episr.c ****     }
 171              		.loc 1 708 0
 172 0004 BD46     		mov	sp, r7
 173              		.cfi_def_cfa_register 13
 174              		@ sp needed
 175 0006 5DF8047B 		ldr	r7, [sp], #4
 176              		.cfi_restore 7
 177              		.cfi_def_cfa_offset 0
 178 000a 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE2:
 181              		.size	USB_SOF_ISR, .-USB_SOF_ISR
 182              		.section	.text.USB_BUS_RESET_ISR,"ax",%progbits
 183              		.align	2
 184              		.global	USB_BUS_RESET_ISR
 185              		.thumb
 186              		.thumb_func
 187              		.type	USB_BUS_RESET_ISR, %function
 188              	USB_BUS_RESET_ISR:
 189              	.LFB3:
 709:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USB_episr.c **** 
 711:.\Generated_Source\PSoC5/USB_episr.c **** 
 712:.\Generated_Source\PSoC5/USB_episr.c **** #if (USB_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USB_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC5/USB_episr.c **** * Function Name: USB_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USB_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USB_episr.c **** *
 717:.\Generated_Source\PSoC5/USB_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USB_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USB_episr.c **** *
 720:.\Generated_Source\PSoC5/USB_episr.c **** *
 721:.\Generated_Source\PSoC5/USB_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USB_episr.c **** CY_ISR(USB_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USB_episr.c **** {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 17


 190              		.loc 1 723 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 724:.\Generated_Source\PSoC5/USB_episr.c **** #ifdef USB_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USB_episr.c ****     USB_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USB_episr.c **** 
 728:.\Generated_Source\PSoC5/USB_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USB_episr.c **** 
 730:.\Generated_Source\PSoC5/USB_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USB_episr.c **** 
 732:.\Generated_Source\PSoC5/USB_episr.c ****     USB_ClearSieInterruptSource(USB_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC5/USB_episr.c **** 
 734:.\Generated_Source\PSoC5/USB_episr.c ****     USB_ReInitComponent();
 200              		.loc 1 734 0
 201 0004 FFF7FEFF 		bl	USB_ReInitComponent
 735:.\Generated_Source\PSoC5/USB_episr.c **** 
 736:.\Generated_Source\PSoC5/USB_episr.c **** #ifdef USB_BUS_RESET_ISR_EXIT_CALLBACK
 737:.\Generated_Source\PSoC5/USB_episr.c ****     USB_BUS_RESET_ISR_ExitCallback();
 738:.\Generated_Source\PSoC5/USB_episr.c **** #endif /* (USB_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:.\Generated_Source\PSoC5/USB_episr.c **** }
 202              		.loc 1 739 0
 203 0008 80BD     		pop	{r7, pc}
 204              		.cfi_endproc
 205              	.LFE3:
 206              		.size	USB_BUS_RESET_ISR, .-USB_BUS_RESET_ISR
 207 000a 00BF     		.text
 208              	.Letext0:
 209              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 210              		.file 3 ".\\Generated_Source\\PSoC5\\USB.h"
 211              		.file 4 ".\\Generated_Source\\PSoC5\\USB_pvt.h"
 212              		.section	.debug_info,"",%progbits
 213              	.Ldebug_info0:
 214 0000 1A020000 		.4byte	0x21a
 215 0004 0400     		.2byte	0x4
 216 0006 00000000 		.4byte	.Ldebug_abbrev0
 217 000a 04       		.byte	0x4
 218 000b 01       		.uleb128 0x1
 219 000c A4000000 		.4byte	.LASF36
 220 0010 01       		.byte	0x1
 221 0011 BC010000 		.4byte	.LASF37
 222 0015 01020000 		.4byte	.LASF38
 223 0019 00000000 		.4byte	.Ldebug_ranges0+0
 224 001d 00000000 		.4byte	0
 225 0021 00000000 		.4byte	.Ldebug_line0
 226 0025 02       		.uleb128 0x2
 227 0026 01       		.byte	0x1
 228 0027 06       		.byte	0x6
 229 0028 AA020000 		.4byte	.LASF0
 230 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 18


 231 002d 01       		.byte	0x1
 232 002e 08       		.byte	0x8
 233 002f 62000000 		.4byte	.LASF1
 234 0033 02       		.uleb128 0x2
 235 0034 02       		.byte	0x2
 236 0035 05       		.byte	0x5
 237 0036 F7010000 		.4byte	.LASF2
 238 003a 02       		.uleb128 0x2
 239 003b 02       		.byte	0x2
 240 003c 07       		.byte	0x7
 241 003d 1F000000 		.4byte	.LASF3
 242 0041 02       		.uleb128 0x2
 243 0042 04       		.byte	0x4
 244 0043 05       		.byte	0x5
 245 0044 8E020000 		.4byte	.LASF4
 246 0048 02       		.uleb128 0x2
 247 0049 04       		.byte	0x4
 248 004a 07       		.byte	0x7
 249 004b 87000000 		.4byte	.LASF5
 250 004f 02       		.uleb128 0x2
 251 0050 08       		.byte	0x8
 252 0051 05       		.byte	0x5
 253 0052 AE010000 		.4byte	.LASF6
 254 0056 02       		.uleb128 0x2
 255 0057 08       		.byte	0x8
 256 0058 07       		.byte	0x7
 257 0059 6A010000 		.4byte	.LASF7
 258 005d 03       		.uleb128 0x3
 259 005e 04       		.byte	0x4
 260 005f 05       		.byte	0x5
 261 0060 696E7400 		.ascii	"int\000"
 262 0064 02       		.uleb128 0x2
 263 0065 04       		.byte	0x4
 264 0066 07       		.byte	0x7
 265 0067 5D010000 		.4byte	.LASF8
 266 006b 04       		.uleb128 0x4
 267 006c 7E020000 		.4byte	.LASF9
 268 0070 02       		.byte	0x2
 269 0071 3801     		.2byte	0x138
 270 0073 2C000000 		.4byte	0x2c
 271 0077 04       		.uleb128 0x4
 272 0078 4B010000 		.4byte	.LASF10
 273 007c 02       		.byte	0x2
 274 007d 3901     		.2byte	0x139
 275 007f 3A000000 		.4byte	0x3a
 276 0083 02       		.uleb128 0x2
 277 0084 04       		.byte	0x4
 278 0085 04       		.byte	0x4
 279 0086 19000000 		.4byte	.LASF11
 280 008a 02       		.uleb128 0x2
 281 008b 08       		.byte	0x8
 282 008c 04       		.byte	0x4
 283 008d 32010000 		.4byte	.LASF12
 284 0091 02       		.uleb128 0x2
 285 0092 01       		.byte	0x1
 286 0093 08       		.byte	0x8
 287 0094 E1010000 		.4byte	.LASF13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 19


 288 0098 04       		.uleb128 0x4
 289 0099 82000000 		.4byte	.LASF14
 290 009d 02       		.byte	0x2
 291 009e E201     		.2byte	0x1e2
 292 00a0 A4000000 		.4byte	0xa4
 293 00a4 05       		.uleb128 0x5
 294 00a5 6B000000 		.4byte	0x6b
 295 00a9 02       		.uleb128 0x2
 296 00aa 04       		.byte	0x4
 297 00ab 07       		.byte	0x7
 298 00ac 9E010000 		.4byte	.LASF15
 299 00b0 06       		.uleb128 0x6
 300 00b1 0C       		.byte	0xc
 301 00b2 03       		.byte	0x3
 302 00b3 8E       		.byte	0x8e
 303 00b4 25010000 		.4byte	0x125
 304 00b8 07       		.uleb128 0x7
 305 00b9 39010000 		.4byte	.LASF16
 306 00bd 03       		.byte	0x3
 307 00be 90       		.byte	0x90
 308 00bf 6B000000 		.4byte	0x6b
 309 00c3 00       		.byte	0
 310 00c4 07       		.uleb128 0x7
 311 00c5 52010000 		.4byte	.LASF17
 312 00c9 03       		.byte	0x3
 313 00ca 91       		.byte	0x91
 314 00cb 6B000000 		.4byte	0x6b
 315 00cf 01       		.byte	0x1
 316 00d0 07       		.uleb128 0x7
 317 00d1 81010000 		.4byte	.LASF18
 318 00d5 03       		.byte	0x3
 319 00d6 92       		.byte	0x92
 320 00d7 6B000000 		.4byte	0x6b
 321 00db 02       		.byte	0x2
 322 00dc 07       		.uleb128 0x7
 323 00dd 47000000 		.4byte	.LASF19
 324 00e1 03       		.byte	0x3
 325 00e2 93       		.byte	0x93
 326 00e3 6B000000 		.4byte	0x6b
 327 00e7 03       		.byte	0x3
 328 00e8 07       		.uleb128 0x7
 329 00e9 99000000 		.4byte	.LASF20
 330 00ed 03       		.byte	0x3
 331 00ee 94       		.byte	0x94
 332 00ef 6B000000 		.4byte	0x6b
 333 00f3 04       		.byte	0x4
 334 00f4 07       		.uleb128 0x7
 335 00f5 A7010000 		.4byte	.LASF21
 336 00f9 03       		.byte	0x3
 337 00fa 95       		.byte	0x95
 338 00fb 6B000000 		.4byte	0x6b
 339 00ff 05       		.byte	0x5
 340 0100 07       		.uleb128 0x7
 341 0101 40010000 		.4byte	.LASF22
 342 0105 03       		.byte	0x3
 343 0106 96       		.byte	0x96
 344 0107 77000000 		.4byte	0x77
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 20


 345 010b 06       		.byte	0x6
 346 010c 07       		.uleb128 0x7
 347 010d EC010000 		.4byte	.LASF23
 348 0111 03       		.byte	0x3
 349 0112 97       		.byte	0x97
 350 0113 77000000 		.4byte	0x77
 351 0117 08       		.byte	0x8
 352 0118 07       		.uleb128 0x7
 353 0119 84020000 		.4byte	.LASF24
 354 011d 03       		.byte	0x3
 355 011e 98       		.byte	0x98
 356 011f 6B000000 		.4byte	0x6b
 357 0123 0A       		.byte	0xa
 358 0124 00       		.byte	0
 359 0125 08       		.uleb128 0x8
 360 0126 97020000 		.4byte	.LASF25
 361 012a 03       		.byte	0x3
 362 012b 99       		.byte	0x99
 363 012c B0000000 		.4byte	0xb0
 364 0130 06       		.uleb128 0x6
 365 0131 10       		.byte	0x10
 366 0132 03       		.byte	0x3
 367 0133 D5       		.byte	0xd5
 368 0134 69010000 		.4byte	0x169
 369 0138 07       		.uleb128 0x7
 370 0139 39000000 		.4byte	.LASF26
 371 013d 03       		.byte	0x3
 372 013e D7       		.byte	0xd7
 373 013f 6B000000 		.4byte	0x6b
 374 0143 00       		.byte	0
 375 0144 07       		.uleb128 0x7
 376 0145 40000000 		.4byte	.LASF27
 377 0149 03       		.byte	0x3
 378 014a D8       		.byte	0xd8
 379 014b 6B000000 		.4byte	0x6b
 380 014f 01       		.byte	0x1
 381 0150 07       		.uleb128 0x7
 382 0151 E6010000 		.4byte	.LASF28
 383 0155 03       		.byte	0x3
 384 0156 D9       		.byte	0xd9
 385 0157 6B000000 		.4byte	0x6b
 386 015b 02       		.byte	0x2
 387 015c 09       		.uleb128 0x9
 388 015d 67617000 		.ascii	"gap\000"
 389 0161 03       		.byte	0x3
 390 0162 DA       		.byte	0xda
 391 0163 69010000 		.4byte	0x169
 392 0167 03       		.byte	0x3
 393 0168 00       		.byte	0
 394 0169 0A       		.uleb128 0xa
 395 016a 6B000000 		.4byte	0x6b
 396 016e 79010000 		.4byte	0x179
 397 0172 0B       		.uleb128 0xb
 398 0173 A9000000 		.4byte	0xa9
 399 0177 0C       		.byte	0xc
 400 0178 00       		.byte	0
 401 0179 08       		.uleb128 0x8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 21


 402 017a 70000000 		.4byte	.LASF29
 403 017e 03       		.byte	0x3
 404 017f DB       		.byte	0xdb
 405 0180 30010000 		.4byte	0x130
 406 0184 0C       		.uleb128 0xc
 407 0185 90       		.byte	0x90
 408 0186 03       		.byte	0x3
 409 0187 0F01     		.2byte	0x10f
 410 0189 9B010000 		.4byte	0x19b
 411 018d 0D       		.uleb128 0xd
 412 018e 9E000000 		.4byte	.LASF30
 413 0192 03       		.byte	0x3
 414 0193 1101     		.2byte	0x111
 415 0195 9B010000 		.4byte	0x19b
 416 0199 00       		.byte	0
 417 019a 00       		.byte	0
 418 019b 0A       		.uleb128 0xa
 419 019c 79010000 		.4byte	0x179
 420 01a0 AB010000 		.4byte	0x1ab
 421 01a4 0B       		.uleb128 0xb
 422 01a5 A9000000 		.4byte	0xa9
 423 01a9 08       		.byte	0x8
 424 01aa 00       		.byte	0
 425 01ab 04       		.uleb128 0x4
 426 01ac 8B010000 		.4byte	.LASF31
 427 01b0 03       		.byte	0x3
 428 01b1 1201     		.2byte	0x112
 429 01b3 84010000 		.4byte	0x184
 430 01b7 0E       		.uleb128 0xe
 431 01b8 B6020000 		.4byte	.LASF32
 432 01bc 01       		.byte	0x1
 433 01bd 25       		.byte	0x25
 434 01be 00000000 		.4byte	.LFB0
 435 01c2 54000000 		.4byte	.LFE0-.LFB0
 436 01c6 01       		.uleb128 0x1
 437 01c7 9C       		.byte	0x9c
 438 01c8 0E       		.uleb128 0xe
 439 01c9 00000000 		.4byte	.LASF33
 440 01cd 01       		.byte	0x1
 441 01ce 78       		.byte	0x78
 442 01cf 00000000 		.4byte	.LFB1
 443 01d3 54000000 		.4byte	.LFE1-.LFB1
 444 01d7 01       		.uleb128 0x1
 445 01d8 9C       		.byte	0x9c
 446 01d9 0F       		.uleb128 0xf
 447 01da 0D000000 		.4byte	.LASF34
 448 01de 01       		.byte	0x1
 449 01df B502     		.2byte	0x2b5
 450 01e1 00000000 		.4byte	.LFB2
 451 01e5 0C000000 		.4byte	.LFE2-.LFB2
 452 01e9 01       		.uleb128 0x1
 453 01ea 9C       		.byte	0x9c
 454 01eb 10       		.uleb128 0x10
 455 01ec 50000000 		.4byte	.LASF35
 456 01f0 01       		.byte	0x1
 457 01f1 D202     		.2byte	0x2d2
 458 01f3 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 22


 459 01f7 0A000000 		.4byte	.LFE3-.LFB3
 460 01fb 01       		.uleb128 0x1
 461 01fc 9C       		.byte	0x9c
 462 01fd 0A       		.uleb128 0xa
 463 01fe 25010000 		.4byte	0x125
 464 0202 0D020000 		.4byte	0x20d
 465 0206 0B       		.uleb128 0xb
 466 0207 A9000000 		.4byte	0xa9
 467 020b 08       		.byte	0x8
 468 020c 00       		.byte	0
 469 020d 11       		.uleb128 0x11
 470 020e 32000000 		.4byte	.LASF39
 471 0212 04       		.byte	0x4
 472 0213 79       		.byte	0x79
 473 0214 18020000 		.4byte	0x218
 474 0218 05       		.uleb128 0x5
 475 0219 FD010000 		.4byte	0x1fd
 476 021d 00       		.byte	0
 477              		.section	.debug_abbrev,"",%progbits
 478              	.Ldebug_abbrev0:
 479 0000 01       		.uleb128 0x1
 480 0001 11       		.uleb128 0x11
 481 0002 01       		.byte	0x1
 482 0003 25       		.uleb128 0x25
 483 0004 0E       		.uleb128 0xe
 484 0005 13       		.uleb128 0x13
 485 0006 0B       		.uleb128 0xb
 486 0007 03       		.uleb128 0x3
 487 0008 0E       		.uleb128 0xe
 488 0009 1B       		.uleb128 0x1b
 489 000a 0E       		.uleb128 0xe
 490 000b 55       		.uleb128 0x55
 491 000c 17       		.uleb128 0x17
 492 000d 11       		.uleb128 0x11
 493 000e 01       		.uleb128 0x1
 494 000f 10       		.uleb128 0x10
 495 0010 17       		.uleb128 0x17
 496 0011 00       		.byte	0
 497 0012 00       		.byte	0
 498 0013 02       		.uleb128 0x2
 499 0014 24       		.uleb128 0x24
 500 0015 00       		.byte	0
 501 0016 0B       		.uleb128 0xb
 502 0017 0B       		.uleb128 0xb
 503 0018 3E       		.uleb128 0x3e
 504 0019 0B       		.uleb128 0xb
 505 001a 03       		.uleb128 0x3
 506 001b 0E       		.uleb128 0xe
 507 001c 00       		.byte	0
 508 001d 00       		.byte	0
 509 001e 03       		.uleb128 0x3
 510 001f 24       		.uleb128 0x24
 511 0020 00       		.byte	0
 512 0021 0B       		.uleb128 0xb
 513 0022 0B       		.uleb128 0xb
 514 0023 3E       		.uleb128 0x3e
 515 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 23


 516 0025 03       		.uleb128 0x3
 517 0026 08       		.uleb128 0x8
 518 0027 00       		.byte	0
 519 0028 00       		.byte	0
 520 0029 04       		.uleb128 0x4
 521 002a 16       		.uleb128 0x16
 522 002b 00       		.byte	0
 523 002c 03       		.uleb128 0x3
 524 002d 0E       		.uleb128 0xe
 525 002e 3A       		.uleb128 0x3a
 526 002f 0B       		.uleb128 0xb
 527 0030 3B       		.uleb128 0x3b
 528 0031 05       		.uleb128 0x5
 529 0032 49       		.uleb128 0x49
 530 0033 13       		.uleb128 0x13
 531 0034 00       		.byte	0
 532 0035 00       		.byte	0
 533 0036 05       		.uleb128 0x5
 534 0037 35       		.uleb128 0x35
 535 0038 00       		.byte	0
 536 0039 49       		.uleb128 0x49
 537 003a 13       		.uleb128 0x13
 538 003b 00       		.byte	0
 539 003c 00       		.byte	0
 540 003d 06       		.uleb128 0x6
 541 003e 13       		.uleb128 0x13
 542 003f 01       		.byte	0x1
 543 0040 0B       		.uleb128 0xb
 544 0041 0B       		.uleb128 0xb
 545 0042 3A       		.uleb128 0x3a
 546 0043 0B       		.uleb128 0xb
 547 0044 3B       		.uleb128 0x3b
 548 0045 0B       		.uleb128 0xb
 549 0046 01       		.uleb128 0x1
 550 0047 13       		.uleb128 0x13
 551 0048 00       		.byte	0
 552 0049 00       		.byte	0
 553 004a 07       		.uleb128 0x7
 554 004b 0D       		.uleb128 0xd
 555 004c 00       		.byte	0
 556 004d 03       		.uleb128 0x3
 557 004e 0E       		.uleb128 0xe
 558 004f 3A       		.uleb128 0x3a
 559 0050 0B       		.uleb128 0xb
 560 0051 3B       		.uleb128 0x3b
 561 0052 0B       		.uleb128 0xb
 562 0053 49       		.uleb128 0x49
 563 0054 13       		.uleb128 0x13
 564 0055 38       		.uleb128 0x38
 565 0056 0B       		.uleb128 0xb
 566 0057 00       		.byte	0
 567 0058 00       		.byte	0
 568 0059 08       		.uleb128 0x8
 569 005a 16       		.uleb128 0x16
 570 005b 00       		.byte	0
 571 005c 03       		.uleb128 0x3
 572 005d 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 24


 573 005e 3A       		.uleb128 0x3a
 574 005f 0B       		.uleb128 0xb
 575 0060 3B       		.uleb128 0x3b
 576 0061 0B       		.uleb128 0xb
 577 0062 49       		.uleb128 0x49
 578 0063 13       		.uleb128 0x13
 579 0064 00       		.byte	0
 580 0065 00       		.byte	0
 581 0066 09       		.uleb128 0x9
 582 0067 0D       		.uleb128 0xd
 583 0068 00       		.byte	0
 584 0069 03       		.uleb128 0x3
 585 006a 08       		.uleb128 0x8
 586 006b 3A       		.uleb128 0x3a
 587 006c 0B       		.uleb128 0xb
 588 006d 3B       		.uleb128 0x3b
 589 006e 0B       		.uleb128 0xb
 590 006f 49       		.uleb128 0x49
 591 0070 13       		.uleb128 0x13
 592 0071 38       		.uleb128 0x38
 593 0072 0B       		.uleb128 0xb
 594 0073 00       		.byte	0
 595 0074 00       		.byte	0
 596 0075 0A       		.uleb128 0xa
 597 0076 01       		.uleb128 0x1
 598 0077 01       		.byte	0x1
 599 0078 49       		.uleb128 0x49
 600 0079 13       		.uleb128 0x13
 601 007a 01       		.uleb128 0x1
 602 007b 13       		.uleb128 0x13
 603 007c 00       		.byte	0
 604 007d 00       		.byte	0
 605 007e 0B       		.uleb128 0xb
 606 007f 21       		.uleb128 0x21
 607 0080 00       		.byte	0
 608 0081 49       		.uleb128 0x49
 609 0082 13       		.uleb128 0x13
 610 0083 2F       		.uleb128 0x2f
 611 0084 0B       		.uleb128 0xb
 612 0085 00       		.byte	0
 613 0086 00       		.byte	0
 614 0087 0C       		.uleb128 0xc
 615 0088 13       		.uleb128 0x13
 616 0089 01       		.byte	0x1
 617 008a 0B       		.uleb128 0xb
 618 008b 0B       		.uleb128 0xb
 619 008c 3A       		.uleb128 0x3a
 620 008d 0B       		.uleb128 0xb
 621 008e 3B       		.uleb128 0x3b
 622 008f 05       		.uleb128 0x5
 623 0090 01       		.uleb128 0x1
 624 0091 13       		.uleb128 0x13
 625 0092 00       		.byte	0
 626 0093 00       		.byte	0
 627 0094 0D       		.uleb128 0xd
 628 0095 0D       		.uleb128 0xd
 629 0096 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 25


 630 0097 03       		.uleb128 0x3
 631 0098 0E       		.uleb128 0xe
 632 0099 3A       		.uleb128 0x3a
 633 009a 0B       		.uleb128 0xb
 634 009b 3B       		.uleb128 0x3b
 635 009c 05       		.uleb128 0x5
 636 009d 49       		.uleb128 0x49
 637 009e 13       		.uleb128 0x13
 638 009f 38       		.uleb128 0x38
 639 00a0 0B       		.uleb128 0xb
 640 00a1 00       		.byte	0
 641 00a2 00       		.byte	0
 642 00a3 0E       		.uleb128 0xe
 643 00a4 2E       		.uleb128 0x2e
 644 00a5 00       		.byte	0
 645 00a6 3F       		.uleb128 0x3f
 646 00a7 19       		.uleb128 0x19
 647 00a8 03       		.uleb128 0x3
 648 00a9 0E       		.uleb128 0xe
 649 00aa 3A       		.uleb128 0x3a
 650 00ab 0B       		.uleb128 0xb
 651 00ac 3B       		.uleb128 0x3b
 652 00ad 0B       		.uleb128 0xb
 653 00ae 27       		.uleb128 0x27
 654 00af 19       		.uleb128 0x19
 655 00b0 11       		.uleb128 0x11
 656 00b1 01       		.uleb128 0x1
 657 00b2 12       		.uleb128 0x12
 658 00b3 06       		.uleb128 0x6
 659 00b4 40       		.uleb128 0x40
 660 00b5 18       		.uleb128 0x18
 661 00b6 9742     		.uleb128 0x2117
 662 00b8 19       		.uleb128 0x19
 663 00b9 00       		.byte	0
 664 00ba 00       		.byte	0
 665 00bb 0F       		.uleb128 0xf
 666 00bc 2E       		.uleb128 0x2e
 667 00bd 00       		.byte	0
 668 00be 3F       		.uleb128 0x3f
 669 00bf 19       		.uleb128 0x19
 670 00c0 03       		.uleb128 0x3
 671 00c1 0E       		.uleb128 0xe
 672 00c2 3A       		.uleb128 0x3a
 673 00c3 0B       		.uleb128 0xb
 674 00c4 3B       		.uleb128 0x3b
 675 00c5 05       		.uleb128 0x5
 676 00c6 27       		.uleb128 0x27
 677 00c7 19       		.uleb128 0x19
 678 00c8 11       		.uleb128 0x11
 679 00c9 01       		.uleb128 0x1
 680 00ca 12       		.uleb128 0x12
 681 00cb 06       		.uleb128 0x6
 682 00cc 40       		.uleb128 0x40
 683 00cd 18       		.uleb128 0x18
 684 00ce 9742     		.uleb128 0x2117
 685 00d0 19       		.uleb128 0x19
 686 00d1 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 26


 687 00d2 00       		.byte	0
 688 00d3 10       		.uleb128 0x10
 689 00d4 2E       		.uleb128 0x2e
 690 00d5 00       		.byte	0
 691 00d6 3F       		.uleb128 0x3f
 692 00d7 19       		.uleb128 0x19
 693 00d8 03       		.uleb128 0x3
 694 00d9 0E       		.uleb128 0xe
 695 00da 3A       		.uleb128 0x3a
 696 00db 0B       		.uleb128 0xb
 697 00dc 3B       		.uleb128 0x3b
 698 00dd 05       		.uleb128 0x5
 699 00de 27       		.uleb128 0x27
 700 00df 19       		.uleb128 0x19
 701 00e0 11       		.uleb128 0x11
 702 00e1 01       		.uleb128 0x1
 703 00e2 12       		.uleb128 0x12
 704 00e3 06       		.uleb128 0x6
 705 00e4 40       		.uleb128 0x40
 706 00e5 18       		.uleb128 0x18
 707 00e6 9642     		.uleb128 0x2116
 708 00e8 19       		.uleb128 0x19
 709 00e9 00       		.byte	0
 710 00ea 00       		.byte	0
 711 00eb 11       		.uleb128 0x11
 712 00ec 34       		.uleb128 0x34
 713 00ed 00       		.byte	0
 714 00ee 03       		.uleb128 0x3
 715 00ef 0E       		.uleb128 0xe
 716 00f0 3A       		.uleb128 0x3a
 717 00f1 0B       		.uleb128 0xb
 718 00f2 3B       		.uleb128 0x3b
 719 00f3 0B       		.uleb128 0xb
 720 00f4 49       		.uleb128 0x49
 721 00f5 13       		.uleb128 0x13
 722 00f6 3F       		.uleb128 0x3f
 723 00f7 19       		.uleb128 0x19
 724 00f8 3C       		.uleb128 0x3c
 725 00f9 19       		.uleb128 0x19
 726 00fa 00       		.byte	0
 727 00fb 00       		.byte	0
 728 00fc 00       		.byte	0
 729              		.section	.debug_aranges,"",%progbits
 730 0000 34000000 		.4byte	0x34
 731 0004 0200     		.2byte	0x2
 732 0006 00000000 		.4byte	.Ldebug_info0
 733 000a 04       		.byte	0x4
 734 000b 00       		.byte	0
 735 000c 0000     		.2byte	0
 736 000e 0000     		.2byte	0
 737 0010 00000000 		.4byte	.LFB0
 738 0014 54000000 		.4byte	.LFE0-.LFB0
 739 0018 00000000 		.4byte	.LFB1
 740 001c 54000000 		.4byte	.LFE1-.LFB1
 741 0020 00000000 		.4byte	.LFB2
 742 0024 0C000000 		.4byte	.LFE2-.LFB2
 743 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 27


 744 002c 0A000000 		.4byte	.LFE3-.LFB3
 745 0030 00000000 		.4byte	0
 746 0034 00000000 		.4byte	0
 747              		.section	.debug_ranges,"",%progbits
 748              	.Ldebug_ranges0:
 749 0000 00000000 		.4byte	.LFB0
 750 0004 54000000 		.4byte	.LFE0
 751 0008 00000000 		.4byte	.LFB1
 752 000c 54000000 		.4byte	.LFE1
 753 0010 00000000 		.4byte	.LFB2
 754 0014 0C000000 		.4byte	.LFE2
 755 0018 00000000 		.4byte	.LFB3
 756 001c 0A000000 		.4byte	.LFE3
 757 0020 00000000 		.4byte	0
 758 0024 00000000 		.4byte	0
 759              		.section	.debug_line,"",%progbits
 760              	.Ldebug_line0:
 761 0000 C6000000 		.section	.debug_str,"MS",%progbits,1
 761      02005E00 
 761      00000201 
 761      FB0E0D00 
 761      01010101 
 762              	.LASF33:
 763 0000 5553425F 		.ascii	"USB_EP_2_ISR\000"
 763      45505F32 
 763      5F495352 
 763      00
 764              	.LASF34:
 765 000d 5553425F 		.ascii	"USB_SOF_ISR\000"
 765      534F465F 
 765      49535200 
 766              	.LASF11:
 767 0019 666C6F61 		.ascii	"float\000"
 767      7400
 768              	.LASF3:
 769 001f 73686F72 		.ascii	"short unsigned int\000"
 769      7420756E 
 769      7369676E 
 769      65642069 
 769      6E7400
 770              	.LASF39:
 771 0032 5553425F 		.ascii	"USB_EP\000"
 771      455000
 772              	.LASF26:
 773 0039 6570436E 		.ascii	"epCnt0\000"
 773      743000
 774              	.LASF27:
 775 0040 6570436E 		.ascii	"epCnt1\000"
 775      743100
 776              	.LASF19:
 777 0047 6570546F 		.ascii	"epToggle\000"
 777      67676C65 
 777      00
 778              	.LASF35:
 779 0050 5553425F 		.ascii	"USB_BUS_RESET_ISR\000"
 779      4255535F 
 779      52455345 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 28


 779      545F4953 
 779      5200
 780              	.LASF1:
 781 0062 756E7369 		.ascii	"unsigned char\000"
 781      676E6564 
 781      20636861 
 781      7200
 782              	.LASF29:
 783 0070 5553425F 		.ascii	"USB_sie_ep_struct\000"
 783      7369655F 
 783      65705F73 
 783      74727563 
 783      7400
 784              	.LASF14:
 785 0082 72656738 		.ascii	"reg8\000"
 785      00
 786              	.LASF5:
 787 0087 6C6F6E67 		.ascii	"long unsigned int\000"
 787      20756E73 
 787      69676E65 
 787      6420696E 
 787      7400
 788              	.LASF20:
 789 0099 61646472 		.ascii	"addr\000"
 789      00
 790              	.LASF30:
 791 009e 73696545 		.ascii	"sieEp\000"
 791      7000
 792              	.LASF36:
 793 00a4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 793      4320342E 
 793      392E3320 
 793      32303135 
 793      30333033 
 794 00d7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 794      20726576 
 794      6973696F 
 794      6E203232 
 794      31323230 
 795 010a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 795      66756E63 
 795      74696F6E 
 795      2D736563 
 795      74696F6E 
 796              	.LASF12:
 797 0132 646F7562 		.ascii	"double\000"
 797      6C6500
 798              	.LASF16:
 799 0139 61747472 		.ascii	"attrib\000"
 799      696200
 800              	.LASF22:
 801 0140 62756666 		.ascii	"buffOffset\000"
 801      4F666673 
 801      657400
 802              	.LASF10:
 803 014b 75696E74 		.ascii	"uint16\000"
 803      313600
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 29


 804              	.LASF17:
 805 0152 61706945 		.ascii	"apiEpState\000"
 805      70537461 
 805      746500
 806              	.LASF8:
 807 015d 756E7369 		.ascii	"unsigned int\000"
 807      676E6564 
 807      20696E74 
 807      00
 808              	.LASF7:
 809 016a 6C6F6E67 		.ascii	"long long unsigned int\000"
 809      206C6F6E 
 809      6720756E 
 809      7369676E 
 809      65642069 
 810              	.LASF18:
 811 0181 68774570 		.ascii	"hwEpState\000"
 811      53746174 
 811      6500
 812              	.LASF31:
 813 018b 5553425F 		.ascii	"USB_sie_eps_struct\000"
 813      7369655F 
 813      6570735F 
 813      73747275 
 813      637400
 814              	.LASF15:
 815 019e 73697A65 		.ascii	"sizetype\000"
 815      74797065 
 815      00
 816              	.LASF21:
 817 01a7 65704D6F 		.ascii	"epMode\000"
 817      646500
 818              	.LASF6:
 819 01ae 6C6F6E67 		.ascii	"long long int\000"
 819      206C6F6E 
 819      6720696E 
 819      7400
 820              	.LASF37:
 821 01bc 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USB_episr.c\000"
 821      6E657261 
 821      7465645F 
 821      536F7572 
 821      63655C50 
 822              	.LASF13:
 823 01e1 63686172 		.ascii	"char\000"
 823      00
 824              	.LASF28:
 825 01e6 65704372 		.ascii	"epCr0\000"
 825      3000
 826              	.LASF23:
 827 01ec 62756666 		.ascii	"bufferSize\000"
 827      65725369 
 827      7A6500
 828              	.LASF2:
 829 01f7 73686F72 		.ascii	"short int\000"
 829      7420696E 
 829      7400
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccAZGMul.s 			page 30


 830              	.LASF38:
 831 0201 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\PSo"
 831      73657273 
 831      5C4C756B 
 831      61732043 
 831      72657574 
 832 022f 43354C50 		.ascii	"C5LP-freeDSP-USB-Port\\PSoC_freeDSP_USB_Port\\USBFS"
 832      2D667265 
 832      65445350 
 832      2D555342 
 832      2D506F72 
 833 0260 5F4D4944 		.ascii	"_MIDI_PSoC3_5LP_Example.cydsn\000"
 833      495F5053 
 833      6F43335F 
 833      354C505F 
 833      4578616D 
 834              	.LASF9:
 835 027e 75696E74 		.ascii	"uint8\000"
 835      3800
 836              	.LASF24:
 837 0284 696E7465 		.ascii	"interface\000"
 837      72666163 
 837      6500
 838              	.LASF4:
 839 028e 6C6F6E67 		.ascii	"long int\000"
 839      20696E74 
 839      00
 840              	.LASF25:
 841 0297 545F5553 		.ascii	"T_USB_EP_CTL_BLOCK\000"
 841      425F4550 
 841      5F43544C 
 841      5F424C4F 
 841      434B00
 842              	.LASF0:
 843 02aa 7369676E 		.ascii	"signed char\000"
 843      65642063 
 843      68617200 
 844              	.LASF32:
 845 02b6 5553425F 		.ascii	"USB_EP_1_ISR\000"
 845      45505F31 
 845      5F495352 
 845      00
 846              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

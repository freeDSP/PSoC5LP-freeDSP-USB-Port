ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_EP_1_ISR, %function
  24              	USBFS_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\USBFS_episr.c"
   1:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBFS_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBFS_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBFS_episr.c **** 
  16:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:Generated_Source\PSoC5/USBFS_episr.c **** 
  19:Generated_Source\PSoC5/USBFS_episr.c **** 
  20:Generated_Source\PSoC5/USBFS_episr.c **** 
  21:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBFS_episr.c **** 
  26:Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBFS_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_episr.c **** 
  29:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
  31:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 2


  32:Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:Generated_Source\PSoC5/USBFS_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  39:Generated_Source\PSoC5/USBFS_episr.c **** 
  40:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBFS_episr.c **** 
  44:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBFS_episr.c **** 
  46:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBFS_episr.c **** 
  48:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBFS_episr.c ****     
  55:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  37              		.loc 1 55 0
  38 0004 0D4B     		ldr	r3, .L3
  39 0006 0122     		movs	r2, #1
  40 0008 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBFS_episr.c ****             
  57:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  41              		.loc 1 66 0
  42 000a 0D4B     		ldr	r3, .L3+4
  43 000c 9B7C     		ldrb	r3, [r3, #18]
  67:Generated_Source\PSoC5/USBFS_episr.c ****             
  68:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  44              		.loc 1 69 0
  45 000e 0D4B     		ldr	r3, .L3+8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 3


  46 0010 1B7B     		ldrb	r3, [r3, #12]
  47 0012 DBB2     		uxtb	r3, r3
  48 0014 03F00303 		and	r3, r3, #3
  49 0018 012B     		cmp	r3, #1
  50 001a 08D0     		beq	.L2
  70:Generated_Source\PSoC5/USBFS_episr.c ****             {
  71:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  51              		.loc 1 71 0
  52 001c 094B     		ldr	r3, .L3+8
  53 001e DB7B     		ldrb	r3, [r3, #15]
  54 0020 DBB2     		uxtb	r3, r3
  55 0022 83F07F03 		eor	r3, r3, #127
  56 0026 DB43     		mvns	r3, r3
  57 0028 DAB2     		uxtb	r2, r3
  58 002a 064B     		ldr	r3, .L3+8
  59 002c DA73     		strb	r2, [r3, #15]
  60              	.L2:
  72:Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:Generated_Source\PSoC5/USBFS_episr.c **** 
  74:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  61              		.loc 1 80 0
  62 002e 054B     		ldr	r3, .L3+8
  63 0030 0122     		movs	r2, #1
  64 0032 5A73     		strb	r2, [r3, #13]
  81:Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:Generated_Source\PSoC5/USBFS_episr.c **** 
  83:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBFS_episr.c ****     
  93:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBFS_episr.c **** 
  95:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBFS_episr.c **** 
  97:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBFS_episr.c **** 
 101:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBFS_episr.c ****         
 104:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBFS_episr.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 4


  65              		.loc 1 107 0
  66 0034 BD46     		mov	sp, r7
  67              		.cfi_def_cfa_register 13
  68              		@ sp needed
  69 0036 5DF8047B 		ldr	r7, [sp], #4
  70              		.cfi_restore 7
  71              		.cfi_def_cfa_offset 0
  72 003a 7047     		bx	lr
  73              	.L4:
  74              		.align	2
  75              	.L3:
  76 003c 0B600040 		.word	1073766411
  77 0040 FC5F0040 		.word	1073766396
  78 0044 00000000 		.word	USBFS_EP
  79              		.cfi_endproc
  80              	.LFE0:
  81              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  82              		.section	.text.USBFS_EP_6_ISR,"ax",%progbits
  83              		.align	2
  84              		.global	USBFS_EP_6_ISR
  85              		.thumb
  86              		.thumb_func
  87              		.type	USBFS_EP_6_ISR, %function
  88              	USBFS_EP_6_ISR:
  89              	.LFB1:
 108:Generated_Source\PSoC5/USBFS_episr.c **** 
 109:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBFS_episr.c **** 
 111:Generated_Source\PSoC5/USBFS_episr.c **** 
 112:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:Generated_Source\PSoC5/USBFS_episr.c ****     {
 122:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBFS_episr.c **** 
 126:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBFS_episr.c **** 
 128:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBFS_episr.c **** 
 130:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBFS_episr.c **** 
 137:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
 138:Generated_Source\PSoC5/USBFS_episr.c **** 
 139:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 5


 140:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
 149:Generated_Source\PSoC5/USBFS_episr.c ****             
 150:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
 152:Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 154:Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:Generated_Source\PSoC5/USBFS_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
 163:Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:Generated_Source\PSoC5/USBFS_episr.c **** 
 165:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:Generated_Source\PSoC5/USBFS_episr.c ****             {
 170:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBFS_episr.c ****     
 175:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBFS_episr.c **** 
 177:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBFS_episr.c **** 
 179:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBFS_episr.c **** 
 183:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBFS_episr.c ****         
 186:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBFS_episr.c ****     }
 190:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBFS_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_episr.c **** 
 193:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 6


 197:Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:Generated_Source\PSoC5/USBFS_episr.c ****     {
 203:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBFS_episr.c **** 
 207:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBFS_episr.c **** 
 209:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBFS_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBFS_episr.c **** 
 218:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:Generated_Source\PSoC5/USBFS_episr.c **** 
 220:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:Generated_Source\PSoC5/USBFS_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:Generated_Source\PSoC5/USBFS_episr.c **** 
 237:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:Generated_Source\PSoC5/USBFS_episr.c **** 
 246:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
 250:Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 7


 254:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBFS_episr.c **** 
 256:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBFS_episr.c **** 
 258:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBFS_episr.c **** 
 260:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBFS_episr.c **** 
 264:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBFS_episr.c ****         
 267:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBFS_episr.c ****     }
 271:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBFS_episr.c **** 
 273:Generated_Source\PSoC5/USBFS_episr.c **** 
 274:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:Generated_Source\PSoC5/USBFS_episr.c ****     {
 284:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBFS_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBFS_episr.c **** 
 290:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBFS_episr.c **** 
 292:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBFS_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBFS_episr.c ****         
 301:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
 307:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 8


 311:Generated_Source\PSoC5/USBFS_episr.c **** 
 312:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:Generated_Source\PSoC5/USBFS_episr.c **** 
 318:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:Generated_Source\PSoC5/USBFS_episr.c **** 
 327:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBFS_episr.c ****             }
 334:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBFS_episr.c **** 
 337:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBFS_episr.c **** 
 339:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBFS_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBFS_episr.c **** 
 345:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBFS_episr.c ****         
 348:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBFS_episr.c ****     }
 352:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBFS_episr.c **** 
 354:Generated_Source\PSoC5/USBFS_episr.c **** 
 355:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:Generated_Source\PSoC5/USBFS_episr.c ****     {
 366:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 9


 368:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBFS_episr.c **** 
 370:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBFS_episr.c **** 
 372:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBFS_episr.c **** 
 374:Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBFS_episr.c **** 
 381:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBFS_episr.c ****     
 383:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 391:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:Generated_Source\PSoC5/USBFS_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBFS_episr.c ****             {
 397:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:Generated_Source\PSoC5/USBFS_episr.c **** 
 400:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:Generated_Source\PSoC5/USBFS_episr.c **** 
 409:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBFS_episr.c **** 
 419:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBFS_episr.c **** 
 421:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBFS_episr.c **** 
 423:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 10


 425:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBFS_episr.c **** 
 427:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBFS_episr.c ****         
 430:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBFS_episr.c ****     }
 434:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBFS_episr.c **** 
 436:Generated_Source\PSoC5/USBFS_episr.c **** 
 437:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:Generated_Source\PSoC5/USBFS_episr.c ****     {
  90              		.loc 1 447 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95 0000 80B4     		push	{r7}
  96              		.cfi_def_cfa_offset 4
  97              		.cfi_offset 7, -4
  98 0002 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 448:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBFS_episr.c **** 
 452:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBFS_episr.c **** 
 454:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBFS_episr.c **** 
 456:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBFS_episr.c ****         {
 459:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBFS_episr.c **** 
 463:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 100              		.loc 1 463 0
 101 0004 104B     		ldr	r3, .L7
 102 0006 2022     		movs	r2, #32
 103 0008 1A70     		strb	r2, [r3]
 464:Generated_Source\PSoC5/USBFS_episr.c ****         
 465:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 11


 468:Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 104              		.loc 1 474 0
 105 000a 104B     		ldr	r3, .L7+4
 106 000c 93F86230 		ldrb	r3, [r3, #98]
 475:Generated_Source\PSoC5/USBFS_episr.c **** 
 476:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 107              		.loc 1 477 0
 108 0010 0F4B     		ldr	r3, .L7+8
 109 0012 93F84830 		ldrb	r3, [r3, #72]
 110 0016 DBB2     		uxtb	r3, r3
 111 0018 03F00303 		and	r3, r3, #3
 112 001c 012B     		cmp	r3, #1
 113 001e 0AD0     		beq	.L6
 478:Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 114              		.loc 1 479 0
 115 0020 0B4B     		ldr	r3, .L7+8
 116 0022 93F84B30 		ldrb	r3, [r3, #75]
 117 0026 DBB2     		uxtb	r3, r3
 118 0028 83F07F03 		eor	r3, r3, #127
 119 002c DB43     		mvns	r3, r3
 120 002e DAB2     		uxtb	r2, r3
 121 0030 074B     		ldr	r3, .L7+8
 122 0032 83F84B20 		strb	r2, [r3, #75]
 123              	.L6:
 480:Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:Generated_Source\PSoC5/USBFS_episr.c ****             
 482:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 124              		.loc 1 488 0
 125 0036 064B     		ldr	r3, .L7+8
 126 0038 0122     		movs	r2, #1
 127 003a 83F84920 		strb	r2, [r3, #73]
 489:Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:Generated_Source\PSoC5/USBFS_episr.c **** 
 491:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 12


 501:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBFS_episr.c **** 
 503:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBFS_episr.c **** 
 505:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBFS_episr.c **** 
 509:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBFS_episr.c ****         
 512:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBFS_episr.c ****     }
 128              		.loc 1 515 0
 129 003e BD46     		mov	sp, r7
 130              		.cfi_def_cfa_register 13
 131              		@ sp needed
 132 0040 5DF8047B 		ldr	r7, [sp], #4
 133              		.cfi_restore 7
 134              		.cfi_def_cfa_offset 0
 135 0044 7047     		bx	lr
 136              	.L8:
 137 0046 00BF     		.align	2
 138              	.L7:
 139 0048 0B600040 		.word	1073766411
 140 004c FC5F0040 		.word	1073766396
 141 0050 00000000 		.word	USBFS_EP
 142              		.cfi_endproc
 143              	.LFE1:
 144              		.size	USBFS_EP_6_ISR, .-USBFS_EP_6_ISR
 145              		.section	.text.USBFS_SOF_ISR,"ax",%progbits
 146              		.align	2
 147              		.global	USBFS_SOF_ISR
 148              		.thumb
 149              		.thumb_func
 150              		.type	USBFS_SOF_ISR, %function
 151              	USBFS_SOF_ISR:
 152              	.LFB2:
 516:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBFS_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_episr.c **** 
 519:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 13


 533:Generated_Source\PSoC5/USBFS_episr.c **** 
 534:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBFS_episr.c **** 
 536:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBFS_episr.c **** 
 538:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBFS_episr.c ****     
 545:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBFS_episr.c ****         
 547:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:Generated_Source\PSoC5/USBFS_episr.c **** 
 558:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:Generated_Source\PSoC5/USBFS_episr.c ****             
 564:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:Generated_Source\PSoC5/USBFS_episr.c **** 
 573:Generated_Source\PSoC5/USBFS_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBFS_episr.c **** 
 584:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBFS_episr.c **** 
 586:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBFS_episr.c **** 
 588:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 14


 590:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBFS_episr.c **** 
 592:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBFS_episr.c ****         
 595:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBFS_episr.c **** 
 601:Generated_Source\PSoC5/USBFS_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBFS_episr.c **** 
 617:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBFS_episr.c **** 
 619:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBFS_episr.c **** 
 621:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBFS_episr.c **** 
 628:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBFS_episr.c ****         
 630:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:Generated_Source\PSoC5/USBFS_episr.c **** 
 641:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 15


 647:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBFS_episr.c ****             */
 653:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:Generated_Source\PSoC5/USBFS_episr.c **** 
 656:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBFS_episr.c **** 
 666:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBFS_episr.c **** 
 668:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBFS_episr.c **** 
 670:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBFS_episr.c **** 
 674:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBFS_episr.c ****         
 677:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBFS_episr.c ****         }
 679:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBFS_episr.c **** 
 683:Generated_Source\PSoC5/USBFS_episr.c **** 
 684:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:Generated_Source\PSoC5/USBFS_episr.c ****     {
 153              		.loc 1 694 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 16


 162              		.cfi_def_cfa_register 7
 695:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBFS_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBFS_episr.c **** 
 701:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBFS_episr.c **** 
 703:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBFS_episr.c **** 
 705:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBFS_episr.c ****     }
 163              		.loc 1 708 0
 164 0004 BD46     		mov	sp, r7
 165              		.cfi_def_cfa_register 13
 166              		@ sp needed
 167 0006 5DF8047B 		ldr	r7, [sp], #4
 168              		.cfi_restore 7
 169              		.cfi_def_cfa_offset 0
 170 000a 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE2:
 173              		.size	USBFS_SOF_ISR, .-USBFS_SOF_ISR
 174              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 175              		.align	2
 176              		.global	USBFS_BUS_RESET_ISR
 177              		.thumb
 178              		.thumb_func
 179              		.type	USBFS_BUS_RESET_ISR, %function
 180              	USBFS_BUS_RESET_ISR:
 181              	.LFB3:
 709:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBFS_episr.c **** 
 711:Generated_Source\PSoC5/USBFS_episr.c **** 
 712:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBFS_episr.c **** *
 717:Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBFS_episr.c **** *
 720:Generated_Source\PSoC5/USBFS_episr.c **** *
 721:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBFS_episr.c **** {
 182              		.loc 1 723 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 17


 190 0002 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 724:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBFS_episr.c **** 
 728:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBFS_episr.c **** 
 730:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBFS_episr.c **** 
 732:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBFS_episr.c **** 
 734:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 192              		.loc 1 734 0
 193 0004 FFF7FEFF 		bl	USBFS_ReInitComponent
 735:Generated_Source\PSoC5/USBFS_episr.c **** 
 736:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC5/USBFS_episr.c **** }
 194              		.loc 1 739 0
 195 0008 80BD     		pop	{r7, pc}
 196              		.cfi_endproc
 197              	.LFE3:
 198              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 199 000a 00BF     		.section	.text.USBFS_ARB_ISR,"ax",%progbits
 200              		.align	2
 201              		.global	USBFS_ARB_ISR
 202              		.thumb
 203              		.thumb_func
 204              		.type	USBFS_ARB_ISR, %function
 205              	USBFS_ARB_ISR:
 206              	.LFB4:
 740:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ACTIVE) */
 741:Generated_Source\PSoC5/USBFS_episr.c **** 
 742:Generated_Source\PSoC5/USBFS_episr.c **** 
 743:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_LPM_ACTIVE)
 744:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************
 745:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_INTR_LPM_ISR
 746:Generated_Source\PSoC5/USBFS_episr.c **** ************************************************************************//**
 747:Generated_Source\PSoC5/USBFS_episr.c **** *
 748:Generated_Source\PSoC5/USBFS_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:Generated_Source\PSoC5/USBFS_episr.c **** *
 750:Generated_Source\PSoC5/USBFS_episr.c **** *
 751:Generated_Source\PSoC5/USBFS_episr.c **** ***************************************************************************/
 752:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_LPM_ISR)
 753:Generated_Source\PSoC5/USBFS_episr.c **** {
 754:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_ENTRY_CALLBACK
 755:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_LPM_ISR_EntryCallback();
 756:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_ENTRY_CALLBACK) */
 757:Generated_Source\PSoC5/USBFS_episr.c **** 
 758:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:Generated_Source\PSoC5/USBFS_episr.c **** 
 760:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 761:Generated_Source\PSoC5/USBFS_episr.c **** 
 762:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_LPM_INTR);
 763:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 18


 764:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:Generated_Source\PSoC5/USBFS_episr.c **** 
 766:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 767:Generated_Source\PSoC5/USBFS_episr.c **** 
 768:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_EXIT_CALLBACK
 769:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_LPM_ISR_ExitCallback();
 770:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_EXIT_CALLBACK) */
 771:Generated_Source\PSoC5/USBFS_episr.c **** }
 772:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ACTIVE) */
 773:Generated_Source\PSoC5/USBFS_episr.c **** 
 774:Generated_Source\PSoC5/USBFS_episr.c **** 
 775:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 776:Generated_Source\PSoC5/USBFS_episr.c ****     /***************************************************************************
 777:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_ARB_ISR
 778:Generated_Source\PSoC5/USBFS_episr.c ****     ************************************************************************//**
 779:Generated_Source\PSoC5/USBFS_episr.c ****     *
 780:Generated_Source\PSoC5/USBFS_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:Generated_Source\PSoC5/USBFS_episr.c ****     *
 782:Generated_Source\PSoC5/USBFS_episr.c ****     *
 783:Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************/
 784:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_ARB_ISR)
 785:Generated_Source\PSoC5/USBFS_episr.c ****     {
 207              		.loc 1 785 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212 0000 90B4     		push	{r4, r7}
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 4, -8
 215              		.cfi_offset 7, -4
 216 0002 82B0     		sub	sp, sp, #8
 217              		.cfi_def_cfa_offset 16
 218 0004 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
 786:Generated_Source\PSoC5/USBFS_episr.c ****         uint8 arbIntrStatus;
 787:Generated_Source\PSoC5/USBFS_episr.c ****         uint8 epStatus;
 788:Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ep = USBFS_EP1;
 220              		.loc 1 788 0
 221 0006 0123     		movs	r3, #1
 222 0008 BB71     		strb	r3, [r7, #6]
 789:Generated_Source\PSoC5/USBFS_episr.c **** 
 790:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_ENTRY_CALLBACK
 791:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_ISR_EntryCallback();
 792:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_ENTRY_CALLBACK) */
 793:Generated_Source\PSoC5/USBFS_episr.c **** 
 794:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:Generated_Source\PSoC5/USBFS_episr.c **** 
 796:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 797:Generated_Source\PSoC5/USBFS_episr.c **** 
 798:Generated_Source\PSoC5/USBFS_episr.c ****         /* Get pending ARB interrupt sources. */
 799:Generated_Source\PSoC5/USBFS_episr.c ****         arbIntrStatus = USBFS_ARB_INT_SR_REG;
 223              		.loc 1 799 0
 224 000a 394B     		ldr	r3, .L17
 225 000c 1B78     		ldrb	r3, [r3]
 226 000e FB71     		strb	r3, [r7, #7]
 800:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 19


 801:Generated_Source\PSoC5/USBFS_episr.c ****         while (0u != arbIntrStatus)
 227              		.loc 1 801 0
 228 0010 67E0     		b	.L12
 229              	.L16:
 802:Generated_Source\PSoC5/USBFS_episr.c ****         {
 803:Generated_Source\PSoC5/USBFS_episr.c ****             /* Check which EP is interrupt source. */
 804:Generated_Source\PSoC5/USBFS_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 230              		.loc 1 804 0
 231 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 232 0014 03F00103 		and	r3, r3, #1
 233 0018 002B     		cmp	r3, #0
 234 001a 5CD0     		beq	.L13
 805:Generated_Source\PSoC5/USBFS_episr.c ****             {
 806:Generated_Source\PSoC5/USBFS_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:Generated_Source\PSoC5/USBFS_episr.c ****                 epStatus = (USBFS_ARB_EP_BASE.arbEp[ep].epSr & USBFS_ARB_EP_BASE.arbEp[ep].epIntEn)
 235              		.loc 1 807 0
 236 001c 354A     		ldr	r2, .L17+4
 237 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 238 0020 1B01     		lsls	r3, r3, #4
 239 0022 1344     		add	r3, r3, r2
 240 0024 9B78     		ldrb	r3, [r3, #2]
 241 0026 DAB2     		uxtb	r2, r3
 242 0028 3249     		ldr	r1, .L17+4
 243 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 244 002c 1B01     		lsls	r3, r3, #4
 245 002e 0B44     		add	r3, r3, r1
 246 0030 5B78     		ldrb	r3, [r3, #1]
 247 0032 DBB2     		uxtb	r3, r3
 248 0034 1340     		ands	r3, r3, r2
 249 0036 7B71     		strb	r3, [r7, #5]
 808:Generated_Source\PSoC5/USBFS_episr.c **** 
 809:Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_IN_BUF_FULL))
 250              		.loc 1 810 0
 251 0038 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 252 003a 03F00103 		and	r3, r3, #1
 253 003e 002B     		cmp	r3, #0
 254 0040 28D0     		beq	.L14
 811:Generated_Source\PSoC5/USBFS_episr.c ****                 {
 812:Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u != (USBFS_EP[ep].addr & USBFS_DIR_IN))
 255              		.loc 1 812 0
 256 0042 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 257 0044 2C49     		ldr	r1, .L17+8
 258 0046 1346     		mov	r3, r2
 259 0048 5B00     		lsls	r3, r3, #1
 260 004a 1344     		add	r3, r3, r2
 261 004c 9B00     		lsls	r3, r3, #2
 262 004e 0B44     		add	r3, r3, r1
 263 0050 1B79     		ldrb	r3, [r3, #4]
 264 0052 DBB2     		uxtb	r3, r3
 265 0054 DBB2     		uxtb	r3, r3
 266 0056 5BB2     		sxtb	r3, r3
 267 0058 002B     		cmp	r3, #0
 268 005a 1BDA     		bge	.L14
 813:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 814:Generated_Source\PSoC5/USBFS_episr.c ****                         /* Clear data ready status. */
 815:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_ARB_EP_BASE.arbEp[ep].epCfg &= (uint8) ~USBFS_ARB_EPX_CFG_IN_DATA_RDY
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 20


 269              		.loc 1 815 0
 270 005c 2549     		ldr	r1, .L17+4
 271 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 272 0060 2448     		ldr	r0, .L17+4
 273 0062 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 274 0064 1201     		lsls	r2, r2, #4
 275 0066 0244     		add	r2, r2, r0
 276 0068 1278     		ldrb	r2, [r2]
 277 006a D2B2     		uxtb	r2, r2
 278 006c 22F00102 		bic	r2, r2, #1
 279 0070 D2B2     		uxtb	r2, r2
 280 0072 1B01     		lsls	r3, r3, #4
 281 0074 0B44     		add	r3, r3, r1
 282 0076 1A70     		strb	r2, [r3]
 816:Generated_Source\PSoC5/USBFS_episr.c **** 
 817:Generated_Source\PSoC5/USBFS_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:Generated_Source\PSoC5/USBFS_episr.c ****                         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 819:Generated_Source\PSoC5/USBFS_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:Generated_Source\PSoC5/USBFS_episr.c ****                             if(USBFS_inLength[ep] > USBFS_DMA_BYTES_PER_BURST)
 821:Generated_Source\PSoC5/USBFS_episr.c ****                             {
 822:Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_LoadNextInEP(ep, 0u);
 823:Generated_Source\PSoC5/USBFS_episr.c ****                             }
 824:Generated_Source\PSoC5/USBFS_episr.c ****                             else
 825:Generated_Source\PSoC5/USBFS_episr.c ****                             {
 826:Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_inBufFull[ep] = 1u;
 827:Generated_Source\PSoC5/USBFS_episr.c ****                             }
 828:Generated_Source\PSoC5/USBFS_episr.c ****                         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) *
 829:Generated_Source\PSoC5/USBFS_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:Generated_Source\PSoC5/USBFS_episr.c **** 
 831:Generated_Source\PSoC5/USBFS_episr.c ****                         /* Arm IN endpoint. */
 832:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_SIE_EP_BASE.sieEp[ep].epCr0 = USBFS_EP[ep].epMode;
 283              		.loc 1 832 0
 284 0078 2048     		ldr	r0, .L17+12
 285 007a B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 286 007c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 287 007e 1E4C     		ldr	r4, .L17+8
 288 0080 1346     		mov	r3, r2
 289 0082 5B00     		lsls	r3, r3, #1
 290 0084 1344     		add	r3, r3, r2
 291 0086 9B00     		lsls	r3, r3, #2
 292 0088 2344     		add	r3, r3, r4
 293 008a 5B79     		ldrb	r3, [r3, #5]
 294 008c DAB2     		uxtb	r2, r3
 295 008e 0B01     		lsls	r3, r1, #4
 296 0090 0344     		add	r3, r3, r0
 297 0092 9A70     		strb	r2, [r3, #2]
 298              	.L14:
 833:Generated_Source\PSoC5/USBFS_episr.c **** 
 834:Generated_Source\PSoC5/USBFS_episr.c ****                     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && USBFS_ISR_SERVICE_MIDI_IN)
 835:Generated_Source\PSoC5/USBFS_episr.c ****                         if (ep == USBFS_midi_in_ep)
 836:Generated_Source\PSoC5/USBFS_episr.c ****                         {
 837:Generated_Source\PSoC5/USBFS_episr.c ****                             /* Clear MIDI input pointer. */
 838:Generated_Source\PSoC5/USBFS_episr.c ****                             USBFS_midiInPointer = 0u;
 839:Generated_Source\PSoC5/USBFS_episr.c ****                         }
 840:Generated_Source\PSoC5/USBFS_episr.c ****                     #endif /* (USBFS_ENABLE_MIDI_STREAMING) */
 841:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 842:Generated_Source\PSoC5/USBFS_episr.c ****                 }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 21


 843:Generated_Source\PSoC5/USBFS_episr.c **** 
 844:Generated_Source\PSoC5/USBFS_episr.c ****             #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
 845:Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_SR_DMA_GNT))
 299              		.loc 1 846 0
 300 0094 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 301 0096 03F00203 		and	r3, r3, #2
 302 009a 002B     		cmp	r3, #0
 303 009c 15D0     		beq	.L15
 847:Generated_Source\PSoC5/USBFS_episr.c ****                 {
 848:Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u == (USBFS_EP[ep].addr & USBFS_DIR_IN))
 304              		.loc 1 848 0
 305 009e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 306 00a0 1549     		ldr	r1, .L17+8
 307 00a2 1346     		mov	r3, r2
 308 00a4 5B00     		lsls	r3, r3, #1
 309 00a6 1344     		add	r3, r3, r2
 310 00a8 9B00     		lsls	r3, r3, #2
 311 00aa 0B44     		add	r3, r3, r1
 312 00ac 1B79     		ldrb	r3, [r3, #4]
 313 00ae DBB2     		uxtb	r3, r3
 314 00b0 DBB2     		uxtb	r3, r3
 315 00b2 5BB2     		sxtb	r3, r3
 316 00b4 002B     		cmp	r3, #0
 317 00b6 08DB     		blt	.L15
 849:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 850:Generated_Source\PSoC5/USBFS_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 318              		.loc 1 851 0
 319 00b8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 320 00ba 0F49     		ldr	r1, .L17+8
 321 00bc 1346     		mov	r3, r2
 322 00be 5B00     		lsls	r3, r3, #1
 323 00c0 1344     		add	r3, r3, r2
 324 00c2 9B00     		lsls	r3, r3, #2
 325 00c4 0B44     		add	r3, r3, r1
 326 00c6 0022     		movs	r2, #0
 327 00c8 5A70     		strb	r2, [r3, #1]
 328              	.L15:
 852:Generated_Source\PSoC5/USBFS_episr.c **** 
 853:Generated_Source\PSoC5/USBFS_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 855:Generated_Source\PSoC5/USBFS_episr.c ****                 }
 856:Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
 857:Generated_Source\PSoC5/USBFS_episr.c **** 
 858:Generated_Source\PSoC5/USBFS_episr.c ****             #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 859:Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_DMA_TERMIN))
 861:Generated_Source\PSoC5/USBFS_episr.c ****                 {
 862:Generated_Source\PSoC5/USBFS_episr.c ****                     uint32 channelNum = USBFS_DmaChan[ep];
 863:Generated_Source\PSoC5/USBFS_episr.c **** 
 864:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore burst counter for endpoint. */
 865:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_DmaEpBurstCnt[ep] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCntBackup[ep]
 866:Generated_Source\PSoC5/USBFS_episr.c **** 
 867:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaChDisable(channelNum);
 869:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 22


 870:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:Generated_Source\PSoC5/USBFS_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:Generated_Source\PSoC5/USBFS_episr.c ****                     */
 873:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaTriggerOut(USBFS_DmaBurstEndOut[ep]);
 874:Generated_Source\PSoC5/USBFS_episr.c **** 
 875:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore destination address for output endpoint. */
 876:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
 877:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
 878:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                                    
 879:Generated_Source\PSoC5/USBFS_episr.c **** 
 880:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u != (USBFS_DmaEpLastBurstEl[ep] & USBFS_DMA_DESCR_REVERT))
 882:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 883:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_CyDmaSetNumDataElements(channelNum, (USBFS_DmaEpLastBurstEl[ep] >> US
 884:Generated_Source\PSoC5/USBFS_episr.c ****                                                                              USBFS_DMA_GET_MAX_ELEM
 885:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 886:Generated_Source\PSoC5/USBFS_episr.c **** 
 887:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
 889:Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_DmaEpBurstCntBackup[ep] > 1u)
 890:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 891:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
 892:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 893:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
 894:Generated_Source\PSoC5/USBFS_episr.c **** 
 895:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Enable DMA channel: configuration complete. */
 896:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaChEnable(channelNum);
 897:Generated_Source\PSoC5/USBFS_episr.c ****                     
 898:Generated_Source\PSoC5/USBFS_episr.c ****                     
 899:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 900:Generated_Source\PSoC5/USBFS_episr.c ****                     (void) USBFS_SIE_EP_BASE.sieEp[ep].epCr0;
 901:Generated_Source\PSoC5/USBFS_episr.c ****                     
 902:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 903:Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_GET_EP_TYPE(ep) != USBFS_EP_TYPE_ISOC)
 904:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 905:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_EP[ep].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 906:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 907:Generated_Source\PSoC5/USBFS_episr.c ****             
 908:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 909:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_EP[ep].apiEpState = USBFS_EVENT_PENDING;
 910:Generated_Source\PSoC5/USBFS_episr.c ****                     
 911:Generated_Source\PSoC5/USBFS_episr.c ****                 #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 912:Generated_Source\PSoC5/USBFS_episr.c ****                     !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 913:Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_midi_out_ep == ep)
 914:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 915:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_MIDI_OUT_Service();
 916:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 917:Generated_Source\PSoC5/USBFS_episr.c ****                 #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 918:Generated_Source\PSoC5/USBFS_episr.c ****                 }
 919:Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 920:Generated_Source\PSoC5/USBFS_episr.c **** 
 921:Generated_Source\PSoC5/USBFS_episr.c **** 
 922:Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 923:Generated_Source\PSoC5/USBFS_episr.c **** 
 924:Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#END` */
 925:Generated_Source\PSoC5/USBFS_episr.c **** 
 926:Generated_Source\PSoC5/USBFS_episr.c ****             #ifdef USBFS_ARB_ISR_CALLBACK
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 23


 927:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_ISR_Callback(ep, epStatus);
 928:Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (USBFS_ARB_ISR_CALLBACK) */
 929:Generated_Source\PSoC5/USBFS_episr.c **** 
 930:Generated_Source\PSoC5/USBFS_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 931:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 329              		.loc 1 931 0
 330 00ca 0A4A     		ldr	r2, .L17+4
 331 00cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 332 00ce 1B01     		lsls	r3, r3, #4
 333 00d0 1344     		add	r3, r3, r2
 334 00d2 7A79     		ldrb	r2, [r7, #5]
 335 00d4 9A70     		strb	r2, [r3, #2]
 336              	.L13:
 932:Generated_Source\PSoC5/USBFS_episr.c ****             }
 933:Generated_Source\PSoC5/USBFS_episr.c **** 
 934:Generated_Source\PSoC5/USBFS_episr.c ****             ++ep;
 337              		.loc 1 934 0
 338 00d6 BB79     		ldrb	r3, [r7, #6]
 339 00d8 0133     		adds	r3, r3, #1
 340 00da BB71     		strb	r3, [r7, #6]
 935:Generated_Source\PSoC5/USBFS_episr.c ****             arbIntrStatus >>= 1u;
 341              		.loc 1 935 0
 342 00dc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 343 00de 5B08     		lsrs	r3, r3, #1
 344 00e0 FB71     		strb	r3, [r7, #7]
 345              	.L12:
 801:Generated_Source\PSoC5/USBFS_episr.c ****         {
 346              		.loc 1 801 0
 347 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 348 00e4 002B     		cmp	r3, #0
 349 00e6 94D1     		bne	.L16
 936:Generated_Source\PSoC5/USBFS_episr.c ****         }
 937:Generated_Source\PSoC5/USBFS_episr.c **** 
 938:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 939:Generated_Source\PSoC5/USBFS_episr.c **** 
 940:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 941:Generated_Source\PSoC5/USBFS_episr.c **** 
 942:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_EXIT_CALLBACK
 943:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_ISR_ExitCallback();
 944:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_EXIT_CALLBACK) */
 945:Generated_Source\PSoC5/USBFS_episr.c ****     }
 350              		.loc 1 945 0
 351 00e8 0837     		adds	r7, r7, #8
 352              		.cfi_def_cfa_offset 8
 353 00ea BD46     		mov	sp, r7
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 00ec 90BC     		pop	{r4, r7}
 357              		.cfi_restore 7
 358              		.cfi_restore 4
 359              		.cfi_def_cfa_offset 0
 360 00ee 7047     		bx	lr
 361              	.L18:
 362              		.align	2
 363              	.L17:
 364 00f0 9F600040 		.word	1073766559
 365 00f4 70600040 		.word	1073766512
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 24


 366 00f8 00000000 		.word	USBFS_EP
 367 00fc FC5F0040 		.word	1073766396
 368              		.cfi_endproc
 369              	.LFE4:
 370              		.size	USBFS_ARB_ISR, .-USBFS_ARB_ISR
 371              		.text
 372              	.Letext0:
 373              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 374              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
 375              		.file 4 "Generated_Source\\PSoC5\\USBFS_pvt.h"
 376              		.section	.debug_info,"",%progbits
 377              	.Ldebug_info0:
 378 0000 2D030000 		.4byte	0x32d
 379 0004 0400     		.2byte	0x4
 380 0006 00000000 		.4byte	.Ldebug_abbrev0
 381 000a 04       		.byte	0x4
 382 000b 01       		.uleb128 0x1
 383 000c 68020000 		.4byte	.LASF50
 384 0010 01       		.byte	0x1
 385 0011 51000000 		.4byte	.LASF51
 386 0015 CB010000 		.4byte	.LASF52
 387 0019 00000000 		.4byte	.Ldebug_ranges0+0
 388 001d 00000000 		.4byte	0
 389 0021 00000000 		.4byte	.Ldebug_line0
 390 0025 02       		.uleb128 0x2
 391 0026 01       		.byte	0x1
 392 0027 06       		.byte	0x6
 393 0028 38030000 		.4byte	.LASF0
 394 002c 02       		.uleb128 0x2
 395 002d 01       		.byte	0x1
 396 002e 08       		.byte	0x8
 397 002f C4000000 		.4byte	.LASF1
 398 0033 02       		.uleb128 0x2
 399 0034 02       		.byte	0x2
 400 0035 05       		.byte	0x5
 401 0036 01030000 		.4byte	.LASF2
 402 003a 02       		.uleb128 0x2
 403 003b 02       		.byte	0x2
 404 003c 07       		.byte	0x7
 405 003d 38000000 		.4byte	.LASF3
 406 0041 02       		.uleb128 0x2
 407 0042 04       		.byte	0x4
 408 0043 05       		.byte	0x5
 409 0044 2F030000 		.4byte	.LASF4
 410 0048 02       		.uleb128 0x2
 411 0049 04       		.byte	0x4
 412 004a 07       		.byte	0x7
 413 004b E2000000 		.4byte	.LASF5
 414 004f 02       		.uleb128 0x2
 415 0050 08       		.byte	0x8
 416 0051 05       		.byte	0x5
 417 0052 4C020000 		.4byte	.LASF6
 418 0056 02       		.uleb128 0x2
 419 0057 08       		.byte	0x8
 420 0058 07       		.byte	0x7
 421 0059 7E010000 		.4byte	.LASF7
 422 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 25


 423 005e 04       		.byte	0x4
 424 005f 05       		.byte	0x5
 425 0060 696E7400 		.ascii	"int\000"
 426 0064 02       		.uleb128 0x2
 427 0065 04       		.byte	0x4
 428 0066 07       		.byte	0x7
 429 0067 69010000 		.4byte	.LASF8
 430 006b 04       		.uleb128 0x4
 431 006c 10030000 		.4byte	.LASF9
 432 0070 02       		.byte	0x2
 433 0071 9201     		.2byte	0x192
 434 0073 2C000000 		.4byte	0x2c
 435 0077 04       		.uleb128 0x4
 436 0078 48010000 		.4byte	.LASF10
 437 007c 02       		.byte	0x2
 438 007d 9301     		.2byte	0x193
 439 007f 3A000000 		.4byte	0x3a
 440 0083 02       		.uleb128 0x2
 441 0084 04       		.byte	0x4
 442 0085 04       		.byte	0x4
 443 0086 15000000 		.4byte	.LASF11
 444 008a 02       		.uleb128 0x2
 445 008b 08       		.byte	0x8
 446 008c 04       		.byte	0x4
 447 008d 1A010000 		.4byte	.LASF12
 448 0091 02       		.uleb128 0x2
 449 0092 01       		.byte	0x1
 450 0093 08       		.byte	0x8
 451 0094 63020000 		.4byte	.LASF13
 452 0098 04       		.uleb128 0x4
 453 0099 D2000000 		.4byte	.LASF14
 454 009d 02       		.byte	0x2
 455 009e 3C02     		.2byte	0x23c
 456 00a0 A4000000 		.4byte	0xa4
 457 00a4 05       		.uleb128 0x5
 458 00a5 6B000000 		.4byte	0x6b
 459 00a9 02       		.uleb128 0x2
 460 00aa 04       		.byte	0x4
 461 00ab 07       		.byte	0x7
 462 00ac 5A020000 		.4byte	.LASF15
 463 00b0 06       		.uleb128 0x6
 464 00b1 0C       		.byte	0xc
 465 00b2 03       		.byte	0x3
 466 00b3 8C       		.byte	0x8c
 467 00b4 25010000 		.4byte	0x125
 468 00b8 07       		.uleb128 0x7
 469 00b9 44030000 		.4byte	.LASF16
 470 00bd 03       		.byte	0x3
 471 00be 8E       		.byte	0x8e
 472 00bf 6B000000 		.4byte	0x6b
 473 00c3 00       		.byte	0
 474 00c4 07       		.uleb128 0x7
 475 00c5 D7000000 		.4byte	.LASF17
 476 00c9 03       		.byte	0x3
 477 00ca 8F       		.byte	0x8f
 478 00cb 6B000000 		.4byte	0x6b
 479 00cf 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 26


 480 00d0 07       		.uleb128 0x7
 481 00d1 95010000 		.4byte	.LASF18
 482 00d5 03       		.byte	0x3
 483 00d6 90       		.byte	0x90
 484 00d7 6B000000 		.4byte	0x6b
 485 00db 02       		.byte	0x2
 486 00dc 07       		.uleb128 0x7
 487 00dd BB000000 		.4byte	.LASF19
 488 00e1 03       		.byte	0x3
 489 00e2 91       		.byte	0x91
 490 00e3 6B000000 		.4byte	0x6b
 491 00e7 03       		.byte	0x3
 492 00e8 07       		.uleb128 0x7
 493 00e9 F4000000 		.4byte	.LASF20
 494 00ed 03       		.byte	0x3
 495 00ee 92       		.byte	0x92
 496 00ef 6B000000 		.4byte	0x6b
 497 00f3 04       		.byte	0x4
 498 00f4 07       		.uleb128 0x7
 499 00f5 45020000 		.4byte	.LASF21
 500 00f9 03       		.byte	0x3
 501 00fa 93       		.byte	0x93
 502 00fb 6B000000 		.4byte	0x6b
 503 00ff 05       		.byte	0x5
 504 0100 07       		.uleb128 0x7
 505 0101 35010000 		.4byte	.LASF22
 506 0105 03       		.byte	0x3
 507 0106 94       		.byte	0x94
 508 0107 77000000 		.4byte	0x77
 509 010b 06       		.byte	0x6
 510 010c 07       		.uleb128 0x7
 511 010d F6020000 		.4byte	.LASF23
 512 0111 03       		.byte	0x3
 513 0112 95       		.byte	0x95
 514 0113 77000000 		.4byte	0x77
 515 0117 08       		.byte	0x8
 516 0118 07       		.uleb128 0x7
 517 0119 16030000 		.4byte	.LASF24
 518 011d 03       		.byte	0x3
 519 011e 96       		.byte	0x96
 520 011f 6B000000 		.4byte	0x6b
 521 0123 0A       		.byte	0xa
 522 0124 00       		.byte	0
 523 0125 08       		.uleb128 0x8
 524 0126 76000000 		.4byte	.LASF25
 525 012a 03       		.byte	0x3
 526 012b 97       		.byte	0x97
 527 012c B0000000 		.4byte	0xb0
 528 0130 06       		.uleb128 0x6
 529 0131 10       		.byte	0x10
 530 0132 03       		.byte	0x3
 531 0133 D3       		.byte	0xd3
 532 0134 69010000 		.4byte	0x169
 533 0138 07       		.uleb128 0x7
 534 0139 AD000000 		.4byte	.LASF26
 535 013d 03       		.byte	0x3
 536 013e D5       		.byte	0xd5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 27


 537 013f 6B000000 		.4byte	0x6b
 538 0143 00       		.byte	0
 539 0144 07       		.uleb128 0x7
 540 0145 B4000000 		.4byte	.LASF27
 541 0149 03       		.byte	0x3
 542 014a D6       		.byte	0xd6
 543 014b 6B000000 		.4byte	0x6b
 544 014f 01       		.byte	0x1
 545 0150 07       		.uleb128 0x7
 546 0151 06000000 		.4byte	.LASF28
 547 0155 03       		.byte	0x3
 548 0156 D7       		.byte	0xd7
 549 0157 6B000000 		.4byte	0x6b
 550 015b 02       		.byte	0x2
 551 015c 09       		.uleb128 0x9
 552 015d 67617000 		.ascii	"gap\000"
 553 0161 03       		.byte	0x3
 554 0162 D8       		.byte	0xd8
 555 0163 69010000 		.4byte	0x169
 556 0167 03       		.byte	0x3
 557 0168 00       		.byte	0
 558 0169 0A       		.uleb128 0xa
 559 016a 6B000000 		.4byte	0x6b
 560 016e 79010000 		.4byte	0x179
 561 0172 0B       		.uleb128 0xb
 562 0173 A9000000 		.4byte	0xa9
 563 0177 0C       		.byte	0xc
 564 0178 00       		.byte	0
 565 0179 08       		.uleb128 0x8
 566 017a 21010000 		.4byte	.LASF29
 567 017e 03       		.byte	0x3
 568 017f D9       		.byte	0xd9
 569 0180 30010000 		.4byte	0x130
 570 0184 06       		.uleb128 0x6
 571 0185 10       		.byte	0x10
 572 0186 03       		.byte	0x3
 573 0187 E5       		.byte	0xe5
 574 0188 05020000 		.4byte	0x205
 575 018c 07       		.uleb128 0x7
 576 018d 4B000000 		.4byte	.LASF30
 577 0191 03       		.byte	0x3
 578 0192 E7       		.byte	0xe7
 579 0193 6B000000 		.4byte	0x6b
 580 0197 00       		.byte	0
 581 0198 07       		.uleb128 0x7
 582 0199 AE010000 		.4byte	.LASF31
 583 019d 03       		.byte	0x3
 584 019e E8       		.byte	0xe8
 585 019f 6B000000 		.4byte	0x6b
 586 01a3 01       		.byte	0x1
 587 01a4 07       		.uleb128 0x7
 588 01a5 07010000 		.4byte	.LASF32
 589 01a9 03       		.byte	0x3
 590 01aa E9       		.byte	0xe9
 591 01ab 6B000000 		.4byte	0x6b
 592 01af 02       		.byte	0x2
 593 01b0 07       		.uleb128 0x7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 28


 594 01b1 1B000000 		.4byte	.LASF33
 595 01b5 03       		.byte	0x3
 596 01b6 EA       		.byte	0xea
 597 01b7 6B000000 		.4byte	0x6b
 598 01bb 03       		.byte	0x3
 599 01bc 07       		.uleb128 0x7
 600 01bd 15010000 		.4byte	.LASF34
 601 01c1 03       		.byte	0x3
 602 01c2 EB       		.byte	0xeb
 603 01c3 6B000000 		.4byte	0x6b
 604 01c7 04       		.byte	0x4
 605 01c8 07       		.uleb128 0x7
 606 01c9 40010000 		.4byte	.LASF35
 607 01cd 03       		.byte	0x3
 608 01ce EC       		.byte	0xec
 609 01cf 6B000000 		.4byte	0x6b
 610 01d3 05       		.byte	0x5
 611 01d4 07       		.uleb128 0x7
 612 01d5 0B030000 		.4byte	.LASF36
 613 01d9 03       		.byte	0x3
 614 01da ED       		.byte	0xed
 615 01db 6B000000 		.4byte	0x6b
 616 01df 06       		.byte	0x6
 617 01e0 07       		.uleb128 0x7
 618 01e1 76010000 		.4byte	.LASF37
 619 01e5 03       		.byte	0x3
 620 01e6 EE       		.byte	0xee
 621 01e7 6B000000 		.4byte	0x6b
 622 01eb 07       		.byte	0x7
 623 01ec 07       		.uleb128 0x7
 624 01ed 64010000 		.4byte	.LASF38
 625 01f1 03       		.byte	0x3
 626 01f2 EF       		.byte	0xef
 627 01f3 6B000000 		.4byte	0x6b
 628 01f7 08       		.byte	0x8
 629 01f8 09       		.uleb128 0x9
 630 01f9 67617000 		.ascii	"gap\000"
 631 01fd 03       		.byte	0x3
 632 01fe F0       		.byte	0xf0
 633 01ff 05020000 		.4byte	0x205
 634 0203 09       		.byte	0x9
 635 0204 00       		.byte	0
 636 0205 0A       		.uleb128 0xa
 637 0206 6B000000 		.4byte	0x6b
 638 020a 15020000 		.4byte	0x215
 639 020e 0B       		.uleb128 0xb
 640 020f A9000000 		.4byte	0xa9
 641 0213 06       		.byte	0x6
 642 0214 00       		.byte	0
 643 0215 08       		.uleb128 0x8
 644 0216 24000000 		.4byte	.LASF39
 645 021a 03       		.byte	0x3
 646 021b F1       		.byte	0xf1
 647 021c 84010000 		.4byte	0x184
 648 0220 0C       		.uleb128 0xc
 649 0221 90       		.byte	0x90
 650 0222 03       		.byte	0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 29


 651 0223 0D01     		.2byte	0x10d
 652 0225 37020000 		.4byte	0x237
 653 0229 0D       		.uleb128 0xd
 654 022a 59030000 		.4byte	.LASF40
 655 022e 03       		.byte	0x3
 656 022f 0F01     		.2byte	0x10f
 657 0231 37020000 		.4byte	0x237
 658 0235 00       		.byte	0
 659 0236 00       		.byte	0
 660 0237 0A       		.uleb128 0xa
 661 0238 79010000 		.4byte	0x179
 662 023c 47020000 		.4byte	0x247
 663 0240 0B       		.uleb128 0xb
 664 0241 A9000000 		.4byte	0xa9
 665 0245 08       		.byte	0x8
 666 0246 00       		.byte	0
 667 0247 04       		.uleb128 0x4
 668 0248 4F010000 		.4byte	.LASF41
 669 024c 03       		.byte	0x3
 670 024d 1001     		.2byte	0x110
 671 024f 20020000 		.4byte	0x220
 672 0253 0C       		.uleb128 0xc
 673 0254 90       		.byte	0x90
 674 0255 03       		.byte	0x3
 675 0256 1301     		.2byte	0x113
 676 0258 6A020000 		.4byte	0x26a
 677 025c 0D       		.uleb128 0xd
 678 025d 00000000 		.4byte	.LASF42
 679 0261 03       		.byte	0x3
 680 0262 1501     		.2byte	0x115
 681 0264 6A020000 		.4byte	0x26a
 682 0268 00       		.byte	0
 683 0269 00       		.byte	0
 684 026a 0A       		.uleb128 0xa
 685 026b 15020000 		.4byte	0x215
 686 026f 7A020000 		.4byte	0x27a
 687 0273 0B       		.uleb128 0xb
 688 0274 A9000000 		.4byte	0xa9
 689 0278 08       		.byte	0x8
 690 0279 00       		.byte	0
 691 027a 04       		.uleb128 0x4
 692 027b B6010000 		.4byte	.LASF43
 693 027f 03       		.byte	0x3
 694 0280 1601     		.2byte	0x116
 695 0282 53020000 		.4byte	0x253
 696 0286 0E       		.uleb128 0xe
 697 0287 9F010000 		.4byte	.LASF44
 698 028b 01       		.byte	0x1
 699 028c 25       		.byte	0x25
 700 028d 00000000 		.4byte	.LFB0
 701 0291 48000000 		.4byte	.LFE0-.LFB0
 702 0295 01       		.uleb128 0x1
 703 0296 9C       		.byte	0x9c
 704 0297 0F       		.uleb128 0xf
 705 0298 20030000 		.4byte	.LASF45
 706 029c 01       		.byte	0x1
 707 029d BE01     		.2byte	0x1be
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 30


 708 029f 00000000 		.4byte	.LFB1
 709 02a3 54000000 		.4byte	.LFE1-.LFB1
 710 02a7 01       		.uleb128 0x1
 711 02a8 9C       		.byte	0x9c
 712 02a9 0F       		.uleb128 0xf
 713 02aa F9000000 		.4byte	.LASF46
 714 02ae 01       		.byte	0x1
 715 02af B502     		.2byte	0x2b5
 716 02b1 00000000 		.4byte	.LFB2
 717 02b5 0C000000 		.4byte	.LFE2-.LFB2
 718 02b9 01       		.uleb128 0x1
 719 02ba 9C       		.byte	0x9c
 720 02bb 10       		.uleb128 0x10
 721 02bc 8B000000 		.4byte	.LASF47
 722 02c0 01       		.byte	0x1
 723 02c1 D202     		.2byte	0x2d2
 724 02c3 00000000 		.4byte	.LFB3
 725 02c7 0A000000 		.4byte	.LFE3-.LFB3
 726 02cb 01       		.uleb128 0x1
 727 02cc 9C       		.byte	0x9c
 728 02cd 11       		.uleb128 0x11
 729 02ce 4B030000 		.4byte	.LASF53
 730 02d2 01       		.byte	0x1
 731 02d3 1003     		.2byte	0x310
 732 02d5 00000000 		.4byte	.LFB4
 733 02d9 00010000 		.4byte	.LFE4-.LFB4
 734 02dd 01       		.uleb128 0x1
 735 02de 9C       		.byte	0x9c
 736 02df 10030000 		.4byte	0x310
 737 02e3 12       		.uleb128 0x12
 738 02e4 9F000000 		.4byte	.LASF48
 739 02e8 01       		.byte	0x1
 740 02e9 1203     		.2byte	0x312
 741 02eb 6B000000 		.4byte	0x6b
 742 02ef 02       		.uleb128 0x2
 743 02f0 91       		.byte	0x91
 744 02f1 77       		.sleb128 -9
 745 02f2 12       		.uleb128 0x12
 746 02f3 0C000000 		.4byte	.LASF49
 747 02f7 01       		.byte	0x1
 748 02f8 1303     		.2byte	0x313
 749 02fa 6B000000 		.4byte	0x6b
 750 02fe 02       		.uleb128 0x2
 751 02ff 91       		.byte	0x91
 752 0300 75       		.sleb128 -11
 753 0301 13       		.uleb128 0x13
 754 0302 657000   		.ascii	"ep\000"
 755 0305 01       		.byte	0x1
 756 0306 1403     		.2byte	0x314
 757 0308 6B000000 		.4byte	0x6b
 758 030c 02       		.uleb128 0x2
 759 030d 91       		.byte	0x91
 760 030e 76       		.sleb128 -10
 761 030f 00       		.byte	0
 762 0310 0A       		.uleb128 0xa
 763 0311 25010000 		.4byte	0x125
 764 0315 20030000 		.4byte	0x320
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 31


 765 0319 0B       		.uleb128 0xb
 766 031a A9000000 		.4byte	0xa9
 767 031e 08       		.byte	0x8
 768 031f 00       		.byte	0
 769 0320 14       		.uleb128 0x14
 770 0321 0C010000 		.4byte	.LASF54
 771 0325 04       		.byte	0x4
 772 0326 78       		.byte	0x78
 773 0327 2B030000 		.4byte	0x32b
 774 032b 05       		.uleb128 0x5
 775 032c 10030000 		.4byte	0x310
 776 0330 00       		.byte	0
 777              		.section	.debug_abbrev,"",%progbits
 778              	.Ldebug_abbrev0:
 779 0000 01       		.uleb128 0x1
 780 0001 11       		.uleb128 0x11
 781 0002 01       		.byte	0x1
 782 0003 25       		.uleb128 0x25
 783 0004 0E       		.uleb128 0xe
 784 0005 13       		.uleb128 0x13
 785 0006 0B       		.uleb128 0xb
 786 0007 03       		.uleb128 0x3
 787 0008 0E       		.uleb128 0xe
 788 0009 1B       		.uleb128 0x1b
 789 000a 0E       		.uleb128 0xe
 790 000b 55       		.uleb128 0x55
 791 000c 17       		.uleb128 0x17
 792 000d 11       		.uleb128 0x11
 793 000e 01       		.uleb128 0x1
 794 000f 10       		.uleb128 0x10
 795 0010 17       		.uleb128 0x17
 796 0011 00       		.byte	0
 797 0012 00       		.byte	0
 798 0013 02       		.uleb128 0x2
 799 0014 24       		.uleb128 0x24
 800 0015 00       		.byte	0
 801 0016 0B       		.uleb128 0xb
 802 0017 0B       		.uleb128 0xb
 803 0018 3E       		.uleb128 0x3e
 804 0019 0B       		.uleb128 0xb
 805 001a 03       		.uleb128 0x3
 806 001b 0E       		.uleb128 0xe
 807 001c 00       		.byte	0
 808 001d 00       		.byte	0
 809 001e 03       		.uleb128 0x3
 810 001f 24       		.uleb128 0x24
 811 0020 00       		.byte	0
 812 0021 0B       		.uleb128 0xb
 813 0022 0B       		.uleb128 0xb
 814 0023 3E       		.uleb128 0x3e
 815 0024 0B       		.uleb128 0xb
 816 0025 03       		.uleb128 0x3
 817 0026 08       		.uleb128 0x8
 818 0027 00       		.byte	0
 819 0028 00       		.byte	0
 820 0029 04       		.uleb128 0x4
 821 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 32


 822 002b 00       		.byte	0
 823 002c 03       		.uleb128 0x3
 824 002d 0E       		.uleb128 0xe
 825 002e 3A       		.uleb128 0x3a
 826 002f 0B       		.uleb128 0xb
 827 0030 3B       		.uleb128 0x3b
 828 0031 05       		.uleb128 0x5
 829 0032 49       		.uleb128 0x49
 830 0033 13       		.uleb128 0x13
 831 0034 00       		.byte	0
 832 0035 00       		.byte	0
 833 0036 05       		.uleb128 0x5
 834 0037 35       		.uleb128 0x35
 835 0038 00       		.byte	0
 836 0039 49       		.uleb128 0x49
 837 003a 13       		.uleb128 0x13
 838 003b 00       		.byte	0
 839 003c 00       		.byte	0
 840 003d 06       		.uleb128 0x6
 841 003e 13       		.uleb128 0x13
 842 003f 01       		.byte	0x1
 843 0040 0B       		.uleb128 0xb
 844 0041 0B       		.uleb128 0xb
 845 0042 3A       		.uleb128 0x3a
 846 0043 0B       		.uleb128 0xb
 847 0044 3B       		.uleb128 0x3b
 848 0045 0B       		.uleb128 0xb
 849 0046 01       		.uleb128 0x1
 850 0047 13       		.uleb128 0x13
 851 0048 00       		.byte	0
 852 0049 00       		.byte	0
 853 004a 07       		.uleb128 0x7
 854 004b 0D       		.uleb128 0xd
 855 004c 00       		.byte	0
 856 004d 03       		.uleb128 0x3
 857 004e 0E       		.uleb128 0xe
 858 004f 3A       		.uleb128 0x3a
 859 0050 0B       		.uleb128 0xb
 860 0051 3B       		.uleb128 0x3b
 861 0052 0B       		.uleb128 0xb
 862 0053 49       		.uleb128 0x49
 863 0054 13       		.uleb128 0x13
 864 0055 38       		.uleb128 0x38
 865 0056 0B       		.uleb128 0xb
 866 0057 00       		.byte	0
 867 0058 00       		.byte	0
 868 0059 08       		.uleb128 0x8
 869 005a 16       		.uleb128 0x16
 870 005b 00       		.byte	0
 871 005c 03       		.uleb128 0x3
 872 005d 0E       		.uleb128 0xe
 873 005e 3A       		.uleb128 0x3a
 874 005f 0B       		.uleb128 0xb
 875 0060 3B       		.uleb128 0x3b
 876 0061 0B       		.uleb128 0xb
 877 0062 49       		.uleb128 0x49
 878 0063 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 33


 879 0064 00       		.byte	0
 880 0065 00       		.byte	0
 881 0066 09       		.uleb128 0x9
 882 0067 0D       		.uleb128 0xd
 883 0068 00       		.byte	0
 884 0069 03       		.uleb128 0x3
 885 006a 08       		.uleb128 0x8
 886 006b 3A       		.uleb128 0x3a
 887 006c 0B       		.uleb128 0xb
 888 006d 3B       		.uleb128 0x3b
 889 006e 0B       		.uleb128 0xb
 890 006f 49       		.uleb128 0x49
 891 0070 13       		.uleb128 0x13
 892 0071 38       		.uleb128 0x38
 893 0072 0B       		.uleb128 0xb
 894 0073 00       		.byte	0
 895 0074 00       		.byte	0
 896 0075 0A       		.uleb128 0xa
 897 0076 01       		.uleb128 0x1
 898 0077 01       		.byte	0x1
 899 0078 49       		.uleb128 0x49
 900 0079 13       		.uleb128 0x13
 901 007a 01       		.uleb128 0x1
 902 007b 13       		.uleb128 0x13
 903 007c 00       		.byte	0
 904 007d 00       		.byte	0
 905 007e 0B       		.uleb128 0xb
 906 007f 21       		.uleb128 0x21
 907 0080 00       		.byte	0
 908 0081 49       		.uleb128 0x49
 909 0082 13       		.uleb128 0x13
 910 0083 2F       		.uleb128 0x2f
 911 0084 0B       		.uleb128 0xb
 912 0085 00       		.byte	0
 913 0086 00       		.byte	0
 914 0087 0C       		.uleb128 0xc
 915 0088 13       		.uleb128 0x13
 916 0089 01       		.byte	0x1
 917 008a 0B       		.uleb128 0xb
 918 008b 0B       		.uleb128 0xb
 919 008c 3A       		.uleb128 0x3a
 920 008d 0B       		.uleb128 0xb
 921 008e 3B       		.uleb128 0x3b
 922 008f 05       		.uleb128 0x5
 923 0090 01       		.uleb128 0x1
 924 0091 13       		.uleb128 0x13
 925 0092 00       		.byte	0
 926 0093 00       		.byte	0
 927 0094 0D       		.uleb128 0xd
 928 0095 0D       		.uleb128 0xd
 929 0096 00       		.byte	0
 930 0097 03       		.uleb128 0x3
 931 0098 0E       		.uleb128 0xe
 932 0099 3A       		.uleb128 0x3a
 933 009a 0B       		.uleb128 0xb
 934 009b 3B       		.uleb128 0x3b
 935 009c 05       		.uleb128 0x5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 34


 936 009d 49       		.uleb128 0x49
 937 009e 13       		.uleb128 0x13
 938 009f 38       		.uleb128 0x38
 939 00a0 0B       		.uleb128 0xb
 940 00a1 00       		.byte	0
 941 00a2 00       		.byte	0
 942 00a3 0E       		.uleb128 0xe
 943 00a4 2E       		.uleb128 0x2e
 944 00a5 00       		.byte	0
 945 00a6 3F       		.uleb128 0x3f
 946 00a7 19       		.uleb128 0x19
 947 00a8 03       		.uleb128 0x3
 948 00a9 0E       		.uleb128 0xe
 949 00aa 3A       		.uleb128 0x3a
 950 00ab 0B       		.uleb128 0xb
 951 00ac 3B       		.uleb128 0x3b
 952 00ad 0B       		.uleb128 0xb
 953 00ae 27       		.uleb128 0x27
 954 00af 19       		.uleb128 0x19
 955 00b0 11       		.uleb128 0x11
 956 00b1 01       		.uleb128 0x1
 957 00b2 12       		.uleb128 0x12
 958 00b3 06       		.uleb128 0x6
 959 00b4 40       		.uleb128 0x40
 960 00b5 18       		.uleb128 0x18
 961 00b6 9742     		.uleb128 0x2117
 962 00b8 19       		.uleb128 0x19
 963 00b9 00       		.byte	0
 964 00ba 00       		.byte	0
 965 00bb 0F       		.uleb128 0xf
 966 00bc 2E       		.uleb128 0x2e
 967 00bd 00       		.byte	0
 968 00be 3F       		.uleb128 0x3f
 969 00bf 19       		.uleb128 0x19
 970 00c0 03       		.uleb128 0x3
 971 00c1 0E       		.uleb128 0xe
 972 00c2 3A       		.uleb128 0x3a
 973 00c3 0B       		.uleb128 0xb
 974 00c4 3B       		.uleb128 0x3b
 975 00c5 05       		.uleb128 0x5
 976 00c6 27       		.uleb128 0x27
 977 00c7 19       		.uleb128 0x19
 978 00c8 11       		.uleb128 0x11
 979 00c9 01       		.uleb128 0x1
 980 00ca 12       		.uleb128 0x12
 981 00cb 06       		.uleb128 0x6
 982 00cc 40       		.uleb128 0x40
 983 00cd 18       		.uleb128 0x18
 984 00ce 9742     		.uleb128 0x2117
 985 00d0 19       		.uleb128 0x19
 986 00d1 00       		.byte	0
 987 00d2 00       		.byte	0
 988 00d3 10       		.uleb128 0x10
 989 00d4 2E       		.uleb128 0x2e
 990 00d5 00       		.byte	0
 991 00d6 3F       		.uleb128 0x3f
 992 00d7 19       		.uleb128 0x19
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 35


 993 00d8 03       		.uleb128 0x3
 994 00d9 0E       		.uleb128 0xe
 995 00da 3A       		.uleb128 0x3a
 996 00db 0B       		.uleb128 0xb
 997 00dc 3B       		.uleb128 0x3b
 998 00dd 05       		.uleb128 0x5
 999 00de 27       		.uleb128 0x27
 1000 00df 19       		.uleb128 0x19
 1001 00e0 11       		.uleb128 0x11
 1002 00e1 01       		.uleb128 0x1
 1003 00e2 12       		.uleb128 0x12
 1004 00e3 06       		.uleb128 0x6
 1005 00e4 40       		.uleb128 0x40
 1006 00e5 18       		.uleb128 0x18
 1007 00e6 9642     		.uleb128 0x2116
 1008 00e8 19       		.uleb128 0x19
 1009 00e9 00       		.byte	0
 1010 00ea 00       		.byte	0
 1011 00eb 11       		.uleb128 0x11
 1012 00ec 2E       		.uleb128 0x2e
 1013 00ed 01       		.byte	0x1
 1014 00ee 3F       		.uleb128 0x3f
 1015 00ef 19       		.uleb128 0x19
 1016 00f0 03       		.uleb128 0x3
 1017 00f1 0E       		.uleb128 0xe
 1018 00f2 3A       		.uleb128 0x3a
 1019 00f3 0B       		.uleb128 0xb
 1020 00f4 3B       		.uleb128 0x3b
 1021 00f5 05       		.uleb128 0x5
 1022 00f6 27       		.uleb128 0x27
 1023 00f7 19       		.uleb128 0x19
 1024 00f8 11       		.uleb128 0x11
 1025 00f9 01       		.uleb128 0x1
 1026 00fa 12       		.uleb128 0x12
 1027 00fb 06       		.uleb128 0x6
 1028 00fc 40       		.uleb128 0x40
 1029 00fd 18       		.uleb128 0x18
 1030 00fe 9742     		.uleb128 0x2117
 1031 0100 19       		.uleb128 0x19
 1032 0101 01       		.uleb128 0x1
 1033 0102 13       		.uleb128 0x13
 1034 0103 00       		.byte	0
 1035 0104 00       		.byte	0
 1036 0105 12       		.uleb128 0x12
 1037 0106 34       		.uleb128 0x34
 1038 0107 00       		.byte	0
 1039 0108 03       		.uleb128 0x3
 1040 0109 0E       		.uleb128 0xe
 1041 010a 3A       		.uleb128 0x3a
 1042 010b 0B       		.uleb128 0xb
 1043 010c 3B       		.uleb128 0x3b
 1044 010d 05       		.uleb128 0x5
 1045 010e 49       		.uleb128 0x49
 1046 010f 13       		.uleb128 0x13
 1047 0110 02       		.uleb128 0x2
 1048 0111 18       		.uleb128 0x18
 1049 0112 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 36


 1050 0113 00       		.byte	0
 1051 0114 13       		.uleb128 0x13
 1052 0115 34       		.uleb128 0x34
 1053 0116 00       		.byte	0
 1054 0117 03       		.uleb128 0x3
 1055 0118 08       		.uleb128 0x8
 1056 0119 3A       		.uleb128 0x3a
 1057 011a 0B       		.uleb128 0xb
 1058 011b 3B       		.uleb128 0x3b
 1059 011c 05       		.uleb128 0x5
 1060 011d 49       		.uleb128 0x49
 1061 011e 13       		.uleb128 0x13
 1062 011f 02       		.uleb128 0x2
 1063 0120 18       		.uleb128 0x18
 1064 0121 00       		.byte	0
 1065 0122 00       		.byte	0
 1066 0123 14       		.uleb128 0x14
 1067 0124 34       		.uleb128 0x34
 1068 0125 00       		.byte	0
 1069 0126 03       		.uleb128 0x3
 1070 0127 0E       		.uleb128 0xe
 1071 0128 3A       		.uleb128 0x3a
 1072 0129 0B       		.uleb128 0xb
 1073 012a 3B       		.uleb128 0x3b
 1074 012b 0B       		.uleb128 0xb
 1075 012c 49       		.uleb128 0x49
 1076 012d 13       		.uleb128 0x13
 1077 012e 3F       		.uleb128 0x3f
 1078 012f 19       		.uleb128 0x19
 1079 0130 3C       		.uleb128 0x3c
 1080 0131 19       		.uleb128 0x19
 1081 0132 00       		.byte	0
 1082 0133 00       		.byte	0
 1083 0134 00       		.byte	0
 1084              		.section	.debug_aranges,"",%progbits
 1085 0000 3C000000 		.4byte	0x3c
 1086 0004 0200     		.2byte	0x2
 1087 0006 00000000 		.4byte	.Ldebug_info0
 1088 000a 04       		.byte	0x4
 1089 000b 00       		.byte	0
 1090 000c 0000     		.2byte	0
 1091 000e 0000     		.2byte	0
 1092 0010 00000000 		.4byte	.LFB0
 1093 0014 48000000 		.4byte	.LFE0-.LFB0
 1094 0018 00000000 		.4byte	.LFB1
 1095 001c 54000000 		.4byte	.LFE1-.LFB1
 1096 0020 00000000 		.4byte	.LFB2
 1097 0024 0C000000 		.4byte	.LFE2-.LFB2
 1098 0028 00000000 		.4byte	.LFB3
 1099 002c 0A000000 		.4byte	.LFE3-.LFB3
 1100 0030 00000000 		.4byte	.LFB4
 1101 0034 00010000 		.4byte	.LFE4-.LFB4
 1102 0038 00000000 		.4byte	0
 1103 003c 00000000 		.4byte	0
 1104              		.section	.debug_ranges,"",%progbits
 1105              	.Ldebug_ranges0:
 1106 0000 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 37


 1107 0004 48000000 		.4byte	.LFE0
 1108 0008 00000000 		.4byte	.LFB1
 1109 000c 54000000 		.4byte	.LFE1
 1110 0010 00000000 		.4byte	.LFB2
 1111 0014 0C000000 		.4byte	.LFE2
 1112 0018 00000000 		.4byte	.LFB3
 1113 001c 0A000000 		.4byte	.LFE3
 1114 0020 00000000 		.4byte	.LFB4
 1115 0024 00010000 		.4byte	.LFE4
 1116 0028 00000000 		.4byte	0
 1117 002c 00000000 		.4byte	0
 1118              		.section	.debug_line,"",%progbits
 1119              	.Ldebug_line0:
 1120 0000 FA000000 		.section	.debug_str,"MS",%progbits,1
 1120      02006200 
 1120      00000201 
 1120      FB0E0D00 
 1120      01010101 
 1121              	.LASF42:
 1122 0000 61726245 		.ascii	"arbEp\000"
 1122      7000
 1123              	.LASF28:
 1124 0006 65704372 		.ascii	"epCr0\000"
 1124      3000
 1125              	.LASF49:
 1126 000c 65705374 		.ascii	"epStatus\000"
 1126      61747573 
 1126      00
 1127              	.LASF11:
 1128 0015 666C6F61 		.ascii	"float\000"
 1128      7400
 1129              	.LASF33:
 1130 001b 72657365 		.ascii	"reserved\000"
 1130      72766564 
 1130      00
 1131              	.LASF39:
 1132 0024 55534246 		.ascii	"USBFS_arb_ep_struct\000"
 1132      535F6172 
 1132      625F6570 
 1132      5F737472 
 1132      75637400 
 1133              	.LASF3:
 1134 0038 73686F72 		.ascii	"short unsigned int\000"
 1134      7420756E 
 1134      7369676E 
 1134      65642069 
 1134      6E7400
 1135              	.LASF30:
 1136 004b 65704366 		.ascii	"epCfg\000"
 1136      6700
 1137              	.LASF51:
 1138 0051 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_episr.c\000"
 1138      72617465 
 1138      645F536F 
 1138      75726365 
 1138      5C50536F 
 1139              	.LASF25:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 38


 1140 0076 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 1140      4246535F 
 1140      45505F43 
 1140      544C5F42 
 1140      4C4F434B 
 1141              	.LASF47:
 1142 008b 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 1142      535F4255 
 1142      535F5245 
 1142      5345545F 
 1142      49535200 
 1143              	.LASF48:
 1144 009f 61726249 		.ascii	"arbIntrStatus\000"
 1144      6E747253 
 1144      74617475 
 1144      7300
 1145              	.LASF26:
 1146 00ad 6570436E 		.ascii	"epCnt0\000"
 1146      743000
 1147              	.LASF27:
 1148 00b4 6570436E 		.ascii	"epCnt1\000"
 1148      743100
 1149              	.LASF19:
 1150 00bb 6570546F 		.ascii	"epToggle\000"
 1150      67676C65 
 1150      00
 1151              	.LASF1:
 1152 00c4 756E7369 		.ascii	"unsigned char\000"
 1152      676E6564 
 1152      20636861 
 1152      7200
 1153              	.LASF14:
 1154 00d2 72656738 		.ascii	"reg8\000"
 1154      00
 1155              	.LASF17:
 1156 00d7 61706945 		.ascii	"apiEpState\000"
 1156      70537461 
 1156      746500
 1157              	.LASF5:
 1158 00e2 6C6F6E67 		.ascii	"long unsigned int\000"
 1158      20756E73 
 1158      69676E65 
 1158      6420696E 
 1158      7400
 1159              	.LASF20:
 1160 00f4 61646472 		.ascii	"addr\000"
 1160      00
 1161              	.LASF46:
 1162 00f9 55534246 		.ascii	"USBFS_SOF_ISR\000"
 1162      535F534F 
 1162      465F4953 
 1162      5200
 1163              	.LASF32:
 1164 0107 65705372 		.ascii	"epSr\000"
 1164      00
 1165              	.LASF54:
 1166 010c 55534246 		.ascii	"USBFS_EP\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 39


 1166      535F4550 
 1166      00
 1167              	.LASF34:
 1168 0115 72775761 		.ascii	"rwWa\000"
 1168      00
 1169              	.LASF12:
 1170 011a 646F7562 		.ascii	"double\000"
 1170      6C6500
 1171              	.LASF29:
 1172 0121 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 1172      535F7369 
 1172      655F6570 
 1172      5F737472 
 1172      75637400 
 1173              	.LASF22:
 1174 0135 62756666 		.ascii	"buffOffset\000"
 1174      4F666673 
 1174      657400
 1175              	.LASF35:
 1176 0140 72775761 		.ascii	"rwWaMsb\000"
 1176      4D736200 
 1177              	.LASF10:
 1178 0148 75696E74 		.ascii	"uint16\000"
 1178      313600
 1179              	.LASF41:
 1180 014f 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 1180      535F7369 
 1180      655F6570 
 1180      735F7374 
 1180      72756374 
 1181              	.LASF38:
 1182 0164 72774472 		.ascii	"rwDr\000"
 1182      00
 1183              	.LASF8:
 1184 0169 756E7369 		.ascii	"unsigned int\000"
 1184      676E6564 
 1184      20696E74 
 1184      00
 1185              	.LASF37:
 1186 0176 72775261 		.ascii	"rwRaMsb\000"
 1186      4D736200 
 1187              	.LASF7:
 1188 017e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1188      206C6F6E 
 1188      6720756E 
 1188      7369676E 
 1188      65642069 
 1189              	.LASF18:
 1190 0195 68774570 		.ascii	"hwEpState\000"
 1190      53746174 
 1190      6500
 1191              	.LASF44:
 1192 019f 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 1192      535F4550 
 1192      5F315F49 
 1192      535200
 1193              	.LASF31:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 40


 1194 01ae 6570496E 		.ascii	"epIntEn\000"
 1194      74456E00 
 1195              	.LASF43:
 1196 01b6 55534246 		.ascii	"USBFS_arb_eps_struct\000"
 1196      535F6172 
 1196      625F6570 
 1196      735F7374 
 1196      72756374 
 1197              	.LASF52:
 1198 01cb 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\PSo"
 1198      73657273 
 1198      5C4C756B 
 1198      61732043 
 1198      72657574 
 1199 01f9 43354C50 		.ascii	"C5LP-freeDSP-USB-Port\\PSoC_freeDSP_USB_Port\\PSoC5"
 1199      2D667265 
 1199      65445350 
 1199      2D555342 
 1199      2D506F72 
 1200 022a 5F555342 		.ascii	"_USB_Sound_Interface.cydsn\000"
 1200      5F536F75 
 1200      6E645F49 
 1200      6E746572 
 1200      66616365 
 1201              	.LASF21:
 1202 0245 65704D6F 		.ascii	"epMode\000"
 1202      646500
 1203              	.LASF6:
 1204 024c 6C6F6E67 		.ascii	"long long int\000"
 1204      206C6F6E 
 1204      6720696E 
 1204      7400
 1205              	.LASF15:
 1206 025a 73697A65 		.ascii	"sizetype\000"
 1206      74797065 
 1206      00
 1207              	.LASF13:
 1208 0263 63686172 		.ascii	"char\000"
 1208      00
 1209              	.LASF50:
 1210 0268 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1210      4320342E 
 1210      392E3320 
 1210      32303135 
 1210      30333033 
 1211 029b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1211      20726576 
 1211      6973696F 
 1211      6E203232 
 1211      31323230 
 1212 02ce 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1212      66756E63 
 1212      74696F6E 
 1212      2D736563 
 1212      74696F6E 
 1213              	.LASF23:
 1214 02f6 62756666 		.ascii	"bufferSize\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccfDsbWp.s 			page 41


 1214      65725369 
 1214      7A6500
 1215              	.LASF2:
 1216 0301 73686F72 		.ascii	"short int\000"
 1216      7420696E 
 1216      7400
 1217              	.LASF36:
 1218 030b 72775261 		.ascii	"rwRa\000"
 1218      00
 1219              	.LASF9:
 1220 0310 75696E74 		.ascii	"uint8\000"
 1220      3800
 1221              	.LASF24:
 1222 0316 696E7465 		.ascii	"interface\000"
 1222      72666163 
 1222      6500
 1223              	.LASF45:
 1224 0320 55534246 		.ascii	"USBFS_EP_6_ISR\000"
 1224      535F4550 
 1224      5F365F49 
 1224      535200
 1225              	.LASF4:
 1226 032f 6C6F6E67 		.ascii	"long int\000"
 1226      20696E74 
 1226      00
 1227              	.LASF0:
 1228 0338 7369676E 		.ascii	"signed char\000"
 1228      65642063 
 1228      68617200 
 1229              	.LASF16:
 1230 0344 61747472 		.ascii	"attrib\000"
 1230      696200
 1231              	.LASF53:
 1232 034b 55534246 		.ascii	"USBFS_ARB_ISR\000"
 1232      535F4152 
 1232      425F4953 
 1232      5200
 1233              	.LASF40:
 1234 0359 73696545 		.ascii	"sieEp\000"
 1234      7000
 1235              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

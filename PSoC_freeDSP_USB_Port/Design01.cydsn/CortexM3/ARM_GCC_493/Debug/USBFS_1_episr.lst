ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_1_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_1_EP_2_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_1_EP_2_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_1_EP_2_ISR, %function
  24              	USBFS_1_EP_2_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS_1_episr.c"
   1:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * \file USBFS_1_episr.c
   3:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
   5:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
   8:.\Generated_Source\PSoC5/USBFS_1_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  16:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #include "USBFS_1_pvt.h"
  17:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #include "USBFS_1_cydmac.h"
  18:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  20:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  21:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USBFS_1_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  26:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  28:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  29:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_1_ISR
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 2


  32:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
  34:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
  36:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
  39:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  40:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  44:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  46:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  48:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
  51:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     
  55:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP1_INTR);
  56:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
  57:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
  61:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP1].addr & USBFS_1_DIR_IN))
  63:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
  65:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP1].epCr0;
  67:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
  68:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP1) != USBFS_1_EP_TYPE_ISOC)
  70:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
  71:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP1].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
  72:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
  73:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  74:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
  80:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP1].apiEpState = USBFS_1_EVENT_PENDING;
  81:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
  82:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  83:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP1)
  87:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
  88:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 3


  89:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
  90:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     
  93:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  95:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
  97:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_1_ISR_ExitCallback();
  99:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 101:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 104:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 108:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 109:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 111:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 112:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_2_ISR
 115:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 117:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 119:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
  27              		.loc 1 121 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 122:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 126:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 128:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 130:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 133:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 136:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 137:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP2_INTR);
  32              		.loc 1 137 0
  33 0000 0B4A     		ldr	r2, .L3
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 4


  35 0004 03F0FD03 		and	r3, r3, #253
  36 0008 1370     		strb	r3, [r2]
 138:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 139:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 143:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP2].addr & USBFS_1_DIR_IN))
 145:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP2].epCr0;
  37              		.loc 1 148 0
  38 000a 0A4B     		ldr	r3, .L3+4
  39 000c 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
 150:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP2) != USBFS_1_EP_TYPE_ISOC)
  40              		.loc 1 151 0
  41 0010 094B     		ldr	r3, .L3+8
  42 0012 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  43 0014 03F00303 		and	r3, r3, #3
  44 0018 012B     		cmp	r3, #1
  45 001a 04D0     		beq	.L2
 152:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 153:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP2].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 153 0
  47 001c 064A     		ldr	r2, .L3+8
  48 001e D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  49 0020 83F08003 		eor	r3, r3, #128
  50 0024 D376     		strb	r3, [r2, #27]
  51              	.L2:
 154:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 155:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 156:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 162:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP2].apiEpState = USBFS_1_EVENT_PENDING;
  52              		.loc 1 162 0
  53 0026 0122     		movs	r2, #1
  54 0028 034B     		ldr	r3, .L3+8
  55 002a 5A76     		strb	r2, [r3, #25]
  56 002c 7047     		bx	lr
  57              	.L4:
  58 002e 00BF     		.align	2
  59              	.L3:
  60 0030 0B600040 		.word	1073766411
  61 0034 FC5F0040 		.word	1073766396
  62 0038 00000000 		.word	USBFS_1_EP
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	USBFS_1_EP_2_ISR, .-USBFS_1_EP_2_ISR
  66              		.section	.text.USBFS_1_BUS_RESET_ISR,"ax",%progbits
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 5


  67              		.align	2
  68              		.global	USBFS_1_BUS_RESET_ISR
  69              		.thumb
  70              		.thumb_func
  71              		.type	USBFS_1_BUS_RESET_ISR, %function
  72              	USBFS_1_BUS_RESET_ISR:
  73              	.LFB1:
 163:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 164:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 165:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP2)
 169:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 170:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 172:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     
 175:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 177:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 179:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 183:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 186:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 188:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 190:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 192:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 193:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_3_ISR
 196:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 198:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 200:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 203:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 207:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 209:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 211:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 6


 213:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 214:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 218:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP3_INTR);    
 219:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 220:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 224:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP3].addr & USBFS_1_DIR_IN))
 226:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP3].epCr0;
 230:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 231:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP3) != USBFS_1_EP_TYPE_ISOC)
 233:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 234:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP3].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 235:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 236:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 237:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 243:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP3].apiEpState = USBFS_1_EVENT_PENDING;
 244:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 245:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 246:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP3)
 250:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 251:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 253:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 256:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 258:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 260:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 264:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 267:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 269:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 7


 270:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 271:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 273:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 274:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_4_ISR
 277:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 279:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 281:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 284:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 288:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 290:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 292:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 295:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 299:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 301:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 305:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP4].addr & USBFS_1_DIR_IN))
 307:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 309:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 312:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP4) != USBFS_1_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 315:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP4].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 317:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 318:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 324:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP4].apiEpState = USBFS_1_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 326:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 8


 327:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if(USBFS_1_midi_out_ep == USBFS_1_EP4)
 331:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 332:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 334:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 337:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 339:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 341:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 345:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 348:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 350:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 352:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 354:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 355:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_5_ISR
 358:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 360:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 362:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 363:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 364:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 366:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 370:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 372:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 374:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                  USBFS_1_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 377:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 381:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     
 383:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 9


 384:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 387:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP5].addr & USBFS_1_DIR_IN))
 389:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 394:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP5) != USBFS_1_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 397:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP5].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 399:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 400:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 406:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP5].apiEpState = USBFS_1_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 408:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 409:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP5)
 413:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 414:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 416:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 419:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 421:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 423:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 427:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 430:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 434:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 436:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 437:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_6_ISR
 440:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 10


 441:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 442:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 444:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 445:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 448:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_6_ISR_ENTRY_CALLBACK) */
 451:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 452:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 454:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 456:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 459:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 463:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 465:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 469:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP6].addr & USBFS_1_DIR_IN))
 471:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 473:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP6].epCr0;
 475:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 476:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP6) != USBFS_1_EP_TYPE_ISOC)
 478:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 479:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP6].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 481:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
 482:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 488:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP6].apiEpState = USBFS_1_EVENT_PENDING;
 489:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 490:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 491:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP6)
 495:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 496:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 11


 498:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 501:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 503:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 505:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_6_ISR_EXIT_CALLBACK) */
 508:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 509:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 512:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 514:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 516:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 518:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 519:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_7_ISR
 522:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 524:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 526:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 527:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 530:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 534:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 536:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 538:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 541:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     
 545:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 547:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 551:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP7].addr & USBFS_1_DIR_IN))
 553:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {           
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 12


 555:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 558:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP7) != USBFS_1_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 561:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP7].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 563:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
 564:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 570:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP7].apiEpState = USBFS_1_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 572:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 573:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 574:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if(USBFS_1_midi_out_ep == USBFS_1_EP7)
 578:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 579:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 581:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 582:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 584:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 586:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 588:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 592:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 595:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 597:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 599:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 601:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 602:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_8_ISR
 605:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 607:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 609:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 610:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_8_ISR)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 13


 612:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 613:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 617:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 619:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 621:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 622:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 624:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 628:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 630:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 634:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP8].addr & USBFS_1_DIR_IN))
 636:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 638:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 641:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP8) != USBFS_1_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 644:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP8].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 646:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 647:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 653:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP8].apiEpState = USBFS_1_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 655:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 656:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP8)
 660:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 661:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 663:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 666:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 668:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 14


 669:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 670:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 674:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         
 677:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 679:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 681:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 683:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 684:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_SOF_ISR
 687:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 689:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 691:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 692:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_SOF_ISR)
 694:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 695:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 699:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 701:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 703:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 705:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 709:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 711:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 712:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * Function Name: USBFS_1_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USBFS_1_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
 717:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
 720:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
 721:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USBFS_1_episr.c **** CY_ISR(USBFS_1_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USBFS_1_episr.c **** {
  74              		.loc 1 723 0
  75              		.cfi_startproc
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 15


  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 08B5     		push	{r3, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
 724:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #ifdef USBFS_1_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 728:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 730:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 732:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 734:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ReInitComponent();
  82              		.loc 1 734 0
  83 0002 FFF7FEFF 		bl	USBFS_1_ReInitComponent
  84              	.LVL0:
  85 0006 08BD     		pop	{r3, pc}
  86              		.cfi_endproc
  87              	.LFE1:
  88              		.size	USBFS_1_BUS_RESET_ISR, .-USBFS_1_BUS_RESET_ISR
  89              		.section	.text.USBFS_1_ARB_ISR,"ax",%progbits
  90              		.align	2
  91              		.global	USBFS_1_ARB_ISR
  92              		.thumb
  93              		.thumb_func
  94              		.type	USBFS_1_ARB_ISR, %function
  95              	USBFS_1_ARB_ISR:
  96              	.LFB2:
 735:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 736:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #ifdef USBFS_1_BUS_RESET_ISR_EXIT_CALLBACK
 737:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_BUS_RESET_ISR_ExitCallback();
 738:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:.\Generated_Source\PSoC5/USBFS_1_episr.c **** }
 740:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_BUS_RESET_ISR_ACTIVE) */
 741:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 742:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 743:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_LPM_ACTIVE)
 744:.\Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************************************************
 745:.\Generated_Source\PSoC5/USBFS_1_episr.c **** * Function Name: USBFS_1_INTR_LPM_ISR
 746:.\Generated_Source\PSoC5/USBFS_1_episr.c **** ************************************************************************//**
 747:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
 748:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
 750:.\Generated_Source\PSoC5/USBFS_1_episr.c **** *
 751:.\Generated_Source\PSoC5/USBFS_1_episr.c **** ***************************************************************************/
 752:.\Generated_Source\PSoC5/USBFS_1_episr.c **** CY_ISR(USBFS_1_LPM_ISR)
 753:.\Generated_Source\PSoC5/USBFS_1_episr.c **** {
 754:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #ifdef USBFS_1_LPM_ISR_ENTRY_CALLBACK
 755:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_LPM_ISR_EntryCallback();
 756:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_LPM_ISR_ENTRY_CALLBACK) */
 757:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 758:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 16


 760:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#END` */
 761:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 762:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_LPM_INTR);
 763:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 764:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 766:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#END` */
 767:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 768:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #ifdef USBFS_1_LPM_ISR_EXIT_CALLBACK
 769:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_LPM_ISR_ExitCallback();
 770:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_LPM_ISR_EXIT_CALLBACK) */
 771:.\Generated_Source\PSoC5/USBFS_1_episr.c **** }
 772:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_LPM_ACTIVE) */
 773:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 774:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 775:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE)
 776:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     /***************************************************************************
 777:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_ARB_ISR
 778:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ************************************************************************//**
 779:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 780:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 782:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 783:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     ***************************************************************************/
 784:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_ARB_ISR)
 785:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     {
  97              		.loc 1 785 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 102              		.cfi_def_cfa_offset 24
 103              		.cfi_offset 3, -24
 104              		.cfi_offset 4, -20
 105              		.cfi_offset 5, -16
 106              		.cfi_offset 6, -12
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109              	.LVL1:
 786:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         uint8 arbIntrStatus;
 787:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         uint8 epStatus;
 788:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         uint8 ep = USBFS_1_EP1;
 789:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 790:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_ARB_ISR_ENTRY_CALLBACK
 791:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ARB_ISR_EntryCallback();
 792:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_ARB_ISR_ENTRY_CALLBACK) */
 793:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 794:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 796:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 797:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 798:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Get pending ARB interrupt sources. */
 799:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         arbIntrStatus = USBFS_1_ARB_INT_SR_REG;
 110              		.loc 1 799 0
 111 0002 214B     		ldr	r3, .L15
 112 0004 1F78     		ldrb	r7, [r3]	@ zero_extendqisi2
 113 0006 FFB2     		uxtb	r7, r7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 17


 114              	.LVL2:
 788:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 115              		.loc 1 788 0
 116 0008 0124     		movs	r4, #1
 800:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 801:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         while (0u != arbIntrStatus)
 117              		.loc 1 801 0
 118 000a 39E0     		b	.L8
 119              	.LVL3:
 120              	.L13:
 802:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 803:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Check which EP is interrupt source. */
 804:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 121              		.loc 1 804 0
 122 000c 17F0010F 		tst	r7, #1
 123 0010 33D0     		beq	.L9
 805:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 806:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 epStatus = (USBFS_1_ARB_EP_BASE.arbEp[ep].epSr & USBFS_1_ARB_EP_BASE.arbEp[ep].epIn
 124              		.loc 1 807 0
 125 0012 2646     		mov	r6, r4
 126 0014 2201     		lsls	r2, r4, #4
 127 0016 1D4B     		ldr	r3, .L15+4
 128 0018 1344     		add	r3, r3, r2
 129 001a 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 130 001c 5D78     		ldrb	r5, [r3, #1]	@ zero_extendqisi2
 131 001e 1540     		ands	r5, r5, r2
 132              	.LVL4:
 808:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 809:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 if (0u != (epStatus & USBFS_1_ARB_EPX_INT_IN_BUF_FULL))
 133              		.loc 1 810 0
 134 0020 15F0010F 		tst	r5, #1
 135 0024 26D0     		beq	.L10
 811:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 {
 812:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     if (0u != (USBFS_1_EP[ep].addr & USBFS_1_DIR_IN))
 136              		.loc 1 812 0
 137 0026 04EB4403 		add	r3, r4, r4, lsl #1
 138 002a 9B00     		lsls	r3, r3, #2
 139 002c 184A     		ldr	r2, .L15+8
 140 002e 1344     		add	r3, r3, r2
 141 0030 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 142 0032 13F0800F 		tst	r3, #128
 143 0036 1DD0     		beq	.L10
 813:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     {
 814:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         /* Clear data ready status. */
 815:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         USBFS_1_ARB_EP_BASE.arbEp[ep].epCfg &= (uint8) ~USBFS_1_ARB_EPX_CFG_IN_DATA
 144              		.loc 1 815 0
 145 0038 1449     		ldr	r1, .L15+4
 146 003a 2201     		lsls	r2, r4, #4
 147 003c 8B5C     		ldrb	r3, [r1, r2]	@ zero_extendqisi2
 148 003e 03F0FE03 		and	r3, r3, #254
 149 0042 8B54     		strb	r3, [r1, r2]
 816:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 817:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
 819:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             /* Set up common area DMA with rest of data. */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 18


 820:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             if(USBFS_1_inLength[ep] > USBFS_1_DMA_BYTES_PER_BURST)
 150              		.loc 1 820 0
 151 0044 134B     		ldr	r3, .L15+12
 152 0046 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 153 004a 9BB2     		uxth	r3, r3
 154 004c 202B     		cmp	r3, #32
 155 004e 04D9     		bls	.L11
 821:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             {
 822:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                 USBFS_1_LoadNextInEP(ep, 0u);
 156              		.loc 1 822 0
 157 0050 2046     		mov	r0, r4
 158 0052 0021     		movs	r1, #0
 159 0054 FFF7FEFF 		bl	USBFS_1_LoadNextInEP
 160              	.LVL5:
 161 0058 02E0     		b	.L12
 162              	.L11:
 823:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             }
 824:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             else
 825:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             {
 826:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                 USBFS_1_inBufFull[ep] = 1u;
 163              		.loc 1 826 0
 164 005a 0122     		movs	r2, #1
 165 005c 0E4B     		ldr	r3, .L15+16
 166 005e 1A55     		strb	r2, [r3, r4]
 167              	.L12:
 827:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             }
 828:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u
 829:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 831:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         /* Arm IN endpoint. */
 832:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         USBFS_1_SIE_EP_BASE.sieEp[ep].epCr0 = USBFS_1_EP[ep].epMode;
 168              		.loc 1 832 0
 169 0060 06EB4603 		add	r3, r6, r6, lsl #1
 170 0064 9B00     		lsls	r3, r3, #2
 171 0066 0A4A     		ldr	r2, .L15+8
 172 0068 1344     		add	r3, r3, r2
 173 006a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 174 006c D2B2     		uxtb	r2, r2
 175 006e 3101     		lsls	r1, r6, #4
 176 0070 0A4B     		ldr	r3, .L15+20
 177 0072 5A54     		strb	r2, [r3, r1]
 178              	.L10:
 833:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 834:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && USBFS_1_ISR_SERVICE_MIDI_IN)
 835:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         if (ep == USBFS_1_midi_in_ep)
 836:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         {
 837:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             /* Clear MIDI input pointer. */
 838:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             USBFS_1_midiInPointer = 0u;
 839:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         }
 840:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     #endif /* (USBFS_1_ENABLE_MIDI_STREAMING) */
 841:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     }
 842:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 }
 843:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 844:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
 845:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 if (0u != (epStatus & USBFS_1_ARB_EPX_SR_DMA_GNT))
 847:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 19


 848:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     if (0u == (USBFS_1_EP[ep].addr & USBFS_1_DIR_IN))
 849:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     {
 850:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         USBFS_1_EP[ep].apiEpState = USBFS_1_NO_EVENT_PENDING;
 852:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 853:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     }
 855:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 }
 856:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
 857:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 858:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 859:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 if (0u != (epStatus & USBFS_1_ARB_EPX_INT_DMA_TERMIN))
 861:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 {
 862:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     uint32 channelNum = USBFS_1_DmaChan[ep];
 863:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 864:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Restore burst counter for endpoint. */
 865:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     USBFS_1_DmaEpBurstCnt[ep] = USBFS_1_DmaEpBurstCntBackup[ep];
 866:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 867:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     USBFS_1_CyDmaChDisable(channelNum);
 869:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 870:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     */
 873:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     USBFS_1_CyDmaTriggerOut(USBFS_1_DmaBurstEndOut[ep]);
 874:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 875:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Restore destination address for output endpoint. */
 876:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) US
 877:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) US
 878:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                                                                    
 879:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 880:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     if (0u != (USBFS_1_DmaEpLastBurstEl[ep] & USBFS_1_DMA_DESCR_REVERT))
 882:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     {
 883:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         USBFS_1_CyDmaSetNumDataElements(channelNum, (USBFS_1_DmaEpLastBurstEl[ep] >
 884:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                                              USBFS_1_DMA_GET_MAX_EL
 885:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     }
 886:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 887:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
 889:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1);
 890:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     USBFS_1_CyDmaSetDescriptor0Next(channelNum);
 891:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 892:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Enable DMA channel: configuration complete. */
 893:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     USBFS_1_CyDmaChEnable(channelNum);
 894:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     
 895:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     
 896:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 897:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     (void) USBFS_1_SIE_EP_BASE.sieEp[ep].epCr0;
 898:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     
 899:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 900:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     if (USBFS_1_GET_EP_TYPE(ep) != USBFS_1_EP_TYPE_ISOC)
 901:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     {
 902:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         USBFS_1_EP[ep].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 903:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     }
 904:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 20


 905:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 906:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     USBFS_1_EP[ep].apiEpState = USBFS_1_EVENT_PENDING;
 907:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     
 908:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 909:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 910:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     if (USBFS_1_midi_out_ep == ep)
 911:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     {
 912:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         USBFS_1_MIDI_OUT_Service();
 913:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     }
 914:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 915:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 }
 916:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 917:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 918:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 919:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 920:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 921:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* `#END` */
 922:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 923:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             #ifdef USBFS_1_ARB_ISR_CALLBACK
 924:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_ARB_ISR_Callback(ep, epStatus);
 925:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             #endif /* (USBFS_1_ARB_ISR_CALLBACK) */
 926:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 927:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 928:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 179              		.loc 1 928 0
 180 0074 3601     		lsls	r6, r6, #4
 181 0076 0A4B     		ldr	r3, .L15+24
 182 0078 9D55     		strb	r5, [r3, r6]
 183              	.LVL6:
 184              	.L9:
 929:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 930:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 931:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             ++ep;
 185              		.loc 1 931 0
 186 007a 0134     		adds	r4, r4, #1
 187              	.LVL7:
 188 007c E4B2     		uxtb	r4, r4
 189              	.LVL8:
 932:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             arbIntrStatus >>= 1u;
 190              		.loc 1 932 0
 191 007e 7F08     		lsrs	r7, r7, #1
 192              	.LVL9:
 193              	.L8:
 801:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 194              		.loc 1 801 0
 195 0080 002F     		cmp	r7, #0
 196 0082 C3D1     		bne	.L13
 933:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 934:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 935:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 936:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 937:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 938:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 939:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_ARB_ISR_EXIT_CALLBACK
 940:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ARB_ISR_ExitCallback();
 941:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_ARB_ISR_EXIT_CALLBACK) */
 942:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 21


 197              		.loc 1 942 0
 198 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 199              	.LVL10:
 200              	.L16:
 201 0086 00BF     		.align	2
 202              	.L15:
 203 0088 9F600040 		.word	1073766559
 204 008c 70600040 		.word	1073766512
 205 0090 00000000 		.word	USBFS_1_EP
 206 0094 00000000 		.word	USBFS_1_inLength
 207 0098 00000000 		.word	USBFS_1_inBufFull
 208 009c FE5F0040 		.word	1073766398
 209 00a0 72600040 		.word	1073766514
 210              		.cfi_endproc
 211              	.LFE2:
 212              		.size	USBFS_1_ARB_ISR, .-USBFS_1_ARB_ISR
 213              		.section	.text.USBFS_1_EP_DMA_DONE_ISR,"ax",%progbits
 214              		.align	2
 215              		.global	USBFS_1_EP_DMA_DONE_ISR
 216              		.thumb
 217              		.thumb_func
 218              		.type	USBFS_1_EP_DMA_DONE_ISR, %function
 219              	USBFS_1_EP_DMA_DONE_ISR:
 220              	.LFB3:
 943:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 944:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /*  (USBFS_1_ARB_ISR_ACTIVE && USBFS_1_EP_MANAGEMENT_DMA) */
 945:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 946:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 947:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 948:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #if (CY_PSOC4)
 949:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (USBFS_1_DMA1_ACTIVE)
 950:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /******************************************************************************
 951:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * Function Name: USBFS_1_EP1_DMA_DONE_ISR
 952:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ***************************************************************************//**
 953:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
 954:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *  Endpoint 1 DMA Done Interrupt Service Routine.
 955:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
 956:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
 957:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ******************************************************************************/
 958:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         void USBFS_1_EP1_DMA_DONE_ISR(void)
 959:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 960:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint32 nextAddr;
 961:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 962:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Manage data elements which remain to transfer. */
 963:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != USBFS_1_DmaEpBurstCnt[USBFS_1_EP1])
 964:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 965:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Decrement burst counter. */
 966:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 --USBFS_1_DmaEpBurstCnt[USBFS_1_EP1];
 967:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 968:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
 969:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 970:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Adjust length of last burst. */
 971:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetNumDataElements(USBFS_1_EP1_DMA_CH,
 972:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
 973:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
 974:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 975:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 22


 976:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
 977:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != (USBFS_1_EP[USBFS_1_EP1].addr & USBFS_1_DIR_IN))
 978:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 979:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 0. */
 980:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr = (uint32) USBFS_1_CyDmaGetSrcAddress(USBFS_1_EP1_DMA_CH, USBFS_1_DMA_DESC
 981:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
 982:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP1_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
 983:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 984:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 1. */
 985:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
 986:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP1_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
 987:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 988:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
 989:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 990:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 0. */
 991:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr  = (uint32) USBFS_1_CyDmaGetDstAddress(USBFS_1_EP1_DMA_CH, USBFS_1_DMA_DES
 992:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
 993:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP1_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
 994:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 995:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 1. */
 996:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
 997:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP1_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
 998:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 999:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1000:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1001:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaValidateDescriptor(USBFS_1_EP1_DMA_CH, USBFS_1_DMA_DESCR0);
1002:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaChEnable (USBFS_1_EP1_DMA_CH);
1003:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaTriggerIn(USBFS_1_DmaReqOut[USBFS_1_EP1]);
1004:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
1005:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_DMA1_ACTIVE) */
1006:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1007:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1008:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (USBFS_1_DMA2_ACTIVE)
1009:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /******************************************************************************
1010:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * Function Name: USBFS_1_EP2_DMA_DONE_ISR
1011:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ***************************************************************************//**
1012:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1013:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *  Endpoint 2 DMA Done Interrupt Service Routine.
1014:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1015:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1016:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ******************************************************************************/
1017:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         void USBFS_1_EP2_DMA_DONE_ISR(void)
1018:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
1019:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint32 nextAddr;
1020:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1021:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Manage data elements which remain to transfer. */
1022:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != USBFS_1_DmaEpBurstCnt[USBFS_1_EP2])
1023:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1024:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Decrement burst counter. */
1025:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 --USBFS_1_DmaEpBurstCnt[USBFS_1_EP2];
1026:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1027:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1028:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1029:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Adjust length of last burst. */
1030:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetNumDataElements(USBFS_1_EP2_DMA_CH,
1031:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1032:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 23


1033:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1034:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1035:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1036:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != (USBFS_1_EP[USBFS_1_EP2].addr & USBFS_1_DIR_IN))
1037:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1038:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 0. */
1039:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr = (uint32) USBFS_1_CyDmaGetSrcAddress(USBFS_1_EP2_DMA_CH, USBFS_1_DMA_DESC
1040:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1041:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP2_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1042:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1043:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 1. */
1044:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1045:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP2_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1046:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1047:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1048:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1049:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 0. */
1050:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr  = (uint32) USBFS_1_CyDmaGetDstAddress(USBFS_1_EP2_DMA_CH, USBFS_1_DMA_DES
1051:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1052:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP2_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1053:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1054:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 1. */
1055:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1056:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP2_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1057:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1058:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1059:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1060:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaValidateDescriptor(USBFS_1_EP2_DMA_CH, USBFS_1_DMA_DESCR0);
1061:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaChEnable (USBFS_1_EP2_DMA_CH);
1062:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaTriggerIn(USBFS_1_DmaReqOut[USBFS_1_EP2]);
1063:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
1064:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_DMA2_ACTIVE) */
1065:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1066:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1067:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (USBFS_1_DMA3_ACTIVE)
1068:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /******************************************************************************
1069:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * Function Name: USBFS_1_EP3_DMA_DONE_ISR
1070:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ***************************************************************************//**
1071:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1072:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *  Endpoint 3 DMA Done Interrupt Service Routine.
1073:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1074:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1075:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ******************************************************************************/
1076:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         void USBFS_1_EP3_DMA_DONE_ISR(void)
1077:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
1078:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint32 nextAddr;
1079:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1080:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Manage data elements which remain to transfer. */
1081:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != USBFS_1_DmaEpBurstCnt[USBFS_1_EP3])
1082:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1083:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Decrement burst counter. */
1084:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 --USBFS_1_DmaEpBurstCnt[USBFS_1_EP3];
1085:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1086:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1087:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1088:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Adjust length of last burst. */
1089:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetNumDataElements(USBFS_1_EP3_DMA_CH,
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 24


1090:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1091:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1092:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1093:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1094:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1095:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != (USBFS_1_EP[USBFS_1_EP3].addr & USBFS_1_DIR_IN))
1096:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1097:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 0. */
1098:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr = (uint32) USBFS_1_CyDmaGetSrcAddress(USBFS_1_EP3_DMA_CH, USBFS_1_DMA_DESC
1099:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1100:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP3_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1101:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1102:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 1. */
1103:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1104:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP3_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1105:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1106:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1107:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1108:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 0. */
1109:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr  = (uint32) USBFS_1_CyDmaGetDstAddress(USBFS_1_EP3_DMA_CH, USBFS_1_DMA_DES
1110:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1111:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP3_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1112:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1113:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 1. */
1114:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1115:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP3_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1116:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1117:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1118:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1119:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaValidateDescriptor(USBFS_1_EP3_DMA_CH, USBFS_1_DMA_DESCR0);
1120:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaChEnable (USBFS_1_EP3_DMA_CH);
1121:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaTriggerIn(USBFS_1_DmaReqOut[USBFS_1_EP3]);
1122:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
1123:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_DMA3_ACTIVE) */
1124:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1125:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1126:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (USBFS_1_DMA4_ACTIVE)
1127:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /******************************************************************************
1128:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * Function Name: USBFS_1_EP4_DMA_DONE_ISR
1129:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ***************************************************************************//**
1130:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1131:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *  Endpoint 4 DMA Done Interrupt Service Routine.
1132:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1133:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1134:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ******************************************************************************/
1135:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         void USBFS_1_EP4_DMA_DONE_ISR(void)
1136:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
1137:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint32 nextAddr;
1138:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1139:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Manage data elements which remain to transfer. */
1140:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != USBFS_1_DmaEpBurstCnt[USBFS_1_EP4])
1141:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1142:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Decrement burst counter. */
1143:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 --USBFS_1_DmaEpBurstCnt[USBFS_1_EP4];
1144:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1145:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1146:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 25


1147:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Adjust length of last burst. */
1148:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetNumDataElements(USBFS_1_EP4_DMA_CH,
1149:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1150:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1151:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1152:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1153:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1154:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != (USBFS_1_EP[USBFS_1_EP4].addr & USBFS_1_DIR_IN))
1155:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1156:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 0. */
1157:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr = (uint32) USBFS_1_CyDmaGetSrcAddress(USBFS_1_EP4_DMA_CH, USBFS_1_DMA_DESC
1158:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1159:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP4_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1160:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1161:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 1. */
1162:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1163:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP4_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1164:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1165:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1166:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1167:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 0. */
1168:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr  = (uint32) USBFS_1_CyDmaGetDstAddress(USBFS_1_EP4_DMA_CH, USBFS_1_DMA_DES
1169:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1170:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP4_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1171:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1172:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 1. */
1173:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1174:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP4_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1175:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1176:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1177:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1178:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaValidateDescriptor(USBFS_1_EP4_DMA_CH, USBFS_1_DMA_DESCR0);
1179:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaChEnable (USBFS_1_EP4_DMA_CH);
1180:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaTriggerIn(USBFS_1_DmaReqOut[USBFS_1_EP4]);
1181:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
1182:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_DMA4_ACTIVE) */
1183:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1184:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1185:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (USBFS_1_DMA5_ACTIVE)
1186:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /******************************************************************************
1187:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * Function Name: USBFS_1_EP5_DMA_DONE_ISR
1188:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ***************************************************************************//**
1189:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1190:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *  Endpoint 5 DMA Done Interrupt Service Routine.
1191:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1192:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1193:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ******************************************************************************/
1194:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         void USBFS_1_EP5_DMA_DONE_ISR(void)
1195:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
1196:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint32 nextAddr;
1197:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1198:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Manage data elements which remain to transfer. */
1199:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != USBFS_1_DmaEpBurstCnt[USBFS_1_EP5])
1200:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1201:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Decrement burst counter. */
1202:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 --USBFS_1_DmaEpBurstCnt[USBFS_1_EP5];
1203:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 26


1204:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1205:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1206:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Adjust length of last burst. */
1207:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetNumDataElements(USBFS_1_EP5_DMA_CH,
1208:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1209:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1210:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1211:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1212:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1213:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != (USBFS_1_EP[USBFS_1_EP5].addr & USBFS_1_DIR_IN))
1214:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1215:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 0. */
1216:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr = (uint32) USBFS_1_CyDmaGetSrcAddress(USBFS_1_EP5_DMA_CH, USBFS_1_DMA_DESC
1217:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1218:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP5_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1219:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1220:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 1. */
1221:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1222:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP5_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1223:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1224:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1225:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1226:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 0. */
1227:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr  = (uint32) USBFS_1_CyDmaGetDstAddress(USBFS_1_EP5_DMA_CH, USBFS_1_DMA_DES
1228:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1229:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP5_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1230:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1231:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 1. */
1232:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1233:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP5_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1234:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1235:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1236:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1237:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaValidateDescriptor(USBFS_1_EP5_DMA_CH, USBFS_1_DMA_DESCR0);
1238:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaChEnable (USBFS_1_EP5_DMA_CH);
1239:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaTriggerIn(USBFS_1_DmaReqOut[USBFS_1_EP5]);
1240:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
1241:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_DMA5_ACTIVE) */
1242:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1243:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1244:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (USBFS_1_DMA6_ACTIVE)
1245:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /******************************************************************************
1246:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * Function Name: USBFS_1_EP6_DMA_DONE_ISR
1247:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ***************************************************************************//**
1248:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1249:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *  Endpoint 6 DMA Done Interrupt Service Routine.
1250:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1251:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1252:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ******************************************************************************/
1253:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         void USBFS_1_EP6_DMA_DONE_ISR(void)
1254:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
1255:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint32 nextAddr;
1256:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1257:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Manage data elements which remain to transfer. */
1258:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != USBFS_1_DmaEpBurstCnt[USBFS_1_EP6])
1259:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1260:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Decrement burst counter. */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 27


1261:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 --USBFS_1_DmaEpBurstCnt[USBFS_1_EP6];
1262:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1263:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1264:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1265:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Adjust length of last burst. */
1266:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetNumDataElements(USBFS_1_EP6_DMA_CH,
1267:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1268:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1269:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1270:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1271:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1272:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != (USBFS_1_EP[USBFS_1_EP6].addr & USBFS_1_DIR_IN))
1273:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1274:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 0. */
1275:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr = (uint32) USBFS_1_CyDmaGetSrcAddress(USBFS_1_EP6_DMA_CH, USBFS_1_DMA_DESC
1276:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1277:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP6_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1278:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1279:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 1. */
1280:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1281:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP6_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1282:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1283:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1284:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1285:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 0. */
1286:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr  = (uint32) USBFS_1_CyDmaGetDstAddress(USBFS_1_EP6_DMA_CH, USBFS_1_DMA_DES
1287:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1288:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP6_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1289:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1290:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 1. */
1291:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1292:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP6_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1293:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1294:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1295:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Enable the DMA to execute transfer as it was disabled because there were no valid de
1296:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaValidateDescriptor(USBFS_1_EP6_DMA_CH, USBFS_1_DMA_DESCR0);
1297:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaChEnable (USBFS_1_EP6_DMA_CH);
1298:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaTriggerIn(USBFS_1_DmaReqOut[USBFS_1_EP6]);
1299:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
1300:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_DMA6_ACTIVE) */
1301:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1302:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1303:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (USBFS_1_DMA7_ACTIVE)
1304:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /******************************************************************************
1305:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * Function Name: USBFS_1_EP7_DMA_DONE_ISR
1306:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ***************************************************************************//**
1307:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1308:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *  Endpoint 7 DMA Done Interrupt Service Routine.
1309:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1310:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1311:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ******************************************************************************/
1312:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         void USBFS_1_EP7_DMA_DONE_ISR(void)
1313:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
1314:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint32 nextAddr;
1315:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1316:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Manage data elements which remain to transfer. */
1317:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != USBFS_1_DmaEpBurstCnt[USBFS_1_EP7])
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 28


1318:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1319:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Decrement burst counter. */
1320:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 --USBFS_1_DmaEpBurstCnt[USBFS_1_EP7];
1321:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1322:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1323:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1324:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Adjust length of last burst. */
1325:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetNumDataElements(USBFS_1_EP7_DMA_CH,
1326:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1327:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1328:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1329:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1330:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1331:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != (USBFS_1_EP[USBFS_1_EP7].addr & USBFS_1_DIR_IN))
1332:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1333:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 0. */
1334:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr = (uint32) USBFS_1_CyDmaGetSrcAddress(USBFS_1_EP7_DMA_CH, USBFS_1_DMA_DESC
1335:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1336:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP7_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1337:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1338:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 1. */
1339:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1340:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP7_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1341:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1342:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1343:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1344:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 0. */
1345:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr  = (uint32) USBFS_1_CyDmaGetDstAddress(USBFS_1_EP7_DMA_CH, USBFS_1_DMA_DES
1346:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1347:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP7_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1348:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1349:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 1. */
1350:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1351:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP7_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1352:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1353:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1354:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1355:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaValidateDescriptor(USBFS_1_EP7_DMA_CH, USBFS_1_DMA_DESCR0);
1356:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaChEnable (USBFS_1_EP7_DMA_CH);
1357:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaTriggerIn(USBFS_1_DmaReqOut[USBFS_1_EP7]);
1358:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
1359:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_DMA7_ACTIVE) */
1360:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1361:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1362:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (USBFS_1_DMA8_ACTIVE)
1363:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /******************************************************************************
1364:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * Function Name: USBFS_1_EP8_DMA_DONE_ISR
1365:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ***************************************************************************//**
1366:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1367:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *  Endpoint 8 DMA Done Interrupt Service Routine.
1368:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1369:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1370:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ******************************************************************************/
1371:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         void USBFS_1_EP8_DMA_DONE_ISR(void)
1372:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
1373:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint32 nextAddr;
1374:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 29


1375:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Manage data elements which remain to transfer. */
1376:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != USBFS_1_DmaEpBurstCnt[USBFS_1_EP8])
1377:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1378:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Decrement burst counter. */
1379:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 --USBFS_1_DmaEpBurstCnt[USBFS_1_EP8];
1380:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1381:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1382:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1383:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Adjust length of last burst. */
1384:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetNumDataElements(USBFS_1_EP8_DMA_CH,
1385:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1386:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                                                         ((uint32) USBFS_1_DmaEpLastBurstEl[USBFS_1_
1387:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1388:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1389:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1390:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             if (0u != (USBFS_1_EP[USBFS_1_EP8].addr & USBFS_1_DIR_IN))
1391:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1392:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 0. */
1393:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr = (uint32) USBFS_1_CyDmaGetSrcAddress(USBFS_1_EP8_DMA_CH, USBFS_1_DMA_DESC
1394:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1395:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP8_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1396:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1397:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change source for descriptor 1. */
1398:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1399:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetSrcAddress(USBFS_1_EP8_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1400:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1401:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             else
1402:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1403:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 0. */
1404:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr  = (uint32) USBFS_1_CyDmaGetDstAddress(USBFS_1_EP8_DMA_CH, USBFS_1_DMA_DES
1405:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += (2u * USBFS_1_DMA_BYTES_PER_BURST);
1406:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP8_DMA_CH, USBFS_1_DMA_DESCR0, (void *) nextAdd
1407:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1408:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 /* Change destination for descriptor 1. */
1409:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 nextAddr += USBFS_1_DMA_BYTES_PER_BURST;
1410:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_CyDmaSetDstAddress(USBFS_1_EP8_DMA_CH, USBFS_1_DMA_DESCR1, (void *) nextAdd
1411:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1412:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1413:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1414:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaValidateDescriptor(USBFS_1_EP8_DMA_CH, USBFS_1_DMA_DESCR0);
1415:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaChEnable (USBFS_1_EP8_DMA_CH);
1416:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_CyDmaTriggerIn(USBFS_1_DmaReqOut[USBFS_1_EP8]);
1417:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
1418:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_DMA8_ACTIVE) */
1419:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1420:.\Generated_Source\PSoC5/USBFS_1_episr.c **** #else
1421:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (USBFS_1_EP_DMA_AUTO_OPT == 0u)
1422:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         /******************************************************************************
1423:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         * Function Name: USBFS_1_EP_DMA_DONE_ISR
1424:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ***************************************************************************//**
1425:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1426:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *  DMA Done Interrupt Service Routine.
1427:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1428:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         *
1429:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         ******************************************************************************/
1430:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         CY_ISR(USBFS_1_EP_DMA_DONE_ISR)
1431:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 30


 221              		.loc 1 1431 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 226              		.cfi_def_cfa_offset 24
 227              		.cfi_offset 4, -24
 228              		.cfi_offset 5, -20
 229              		.cfi_offset 6, -16
 230              		.cfi_offset 7, -12
 231              		.cfi_offset 8, -8
 232              		.cfi_offset 14, -4
 233              	.LVL11:
1432:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 int8Status;
1433:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 int17Status;
1434:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 ep_status;
1435:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 ep = USBFS_1_EP1;
1436:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1437:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #ifdef USBFS_1_EP_DMA_DONE_ISR_ENTRY_CALLBACK
1438:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP_DMA_DONE_ISR_EntryCallback();
1439:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_EP_DMA_DONE_ISR_ENTRY_CALLBACK) */
1440:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1441:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* `#START EP_DMA_DONE_BEGIN_USER_CODE` Place your code here */
1442:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1443:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* `#END` */
1444:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1445:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read clear on read status register with EP source of interrupt. */
1446:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             int17Status = USBFS_1_EP17_DMA_Done_SR_Read() & USBFS_1_EP17_SR_MASK;
 234              		.loc 1 1446 0
 235 0004 FFF7FEFF 		bl	USBFS_1_EP17_DMA_Done_SR_Read
 236              	.LVL12:
 237 0008 00F07F05 		and	r5, r0, #127
 238              	.LVL13:
1447:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             int8Status  = USBFS_1_EP8_DMA_Done_SR_Read()  & USBFS_1_EP8_SR_MASK;
 239              		.loc 1 1447 0
 240 000c FFF7FEFF 		bl	USBFS_1_EP8_DMA_Done_SR_Read
 241              	.LVL14:
 242 0010 00F00306 		and	r6, r0, #3
 243              	.LVL15:
1435:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
 244              		.loc 1 1435 0
 245 0014 0124     		movs	r4, #1
1448:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1449:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             while (int8Status != 0u)
 246              		.loc 1 1449 0
 247 0016 2BE0     		b	.L18
 248              	.LVL16:
 249              	.L20:
1450:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
1451:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 while (int17Status != 0u)
1452:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 {
1453:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     if ((int17Status & 1u) != 0u)  /* If EpX interrupt present. */
 250              		.loc 1 1453 0
 251 0018 15F0010F 		tst	r5, #1
 252 001c 1ED0     		beq	.L19
1454:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     {
1455:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         /* Read Endpoint Status Register. */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 31


1456:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         ep_status = USBFS_1_ARB_EP_BASE.arbEp[ep].epSr;
 253              		.loc 1 1456 0
 254 001e 2201     		lsls	r2, r4, #4
 255 0020 154B     		ldr	r3, .L24
 256 0022 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 257              	.LVL17:
1457:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1458:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         if ((0u == (ep_status & USBFS_1_ARB_EPX_SR_IN_BUF_FULL)) &&
 258              		.loc 1 1458 0
 259 0024 13F0010F 		tst	r3, #1
 260 0028 18D1     		bne	.L19
1459:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             (0u ==USBFS_1_inBufFull[ep]))
 261              		.loc 1 1459 0 discriminator 1
 262 002a 144B     		ldr	r3, .L24+4
 263              	.LVL18:
 264 002c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
1458:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             (0u ==USBFS_1_inBufFull[ep]))
 265              		.loc 1 1458 0 discriminator 1
 266 002e 13F0FF0F 		tst	r3, #255
 267 0032 13D1     		bne	.L19
1460:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         {
1461:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             /* `#START EP_DMA_DONE_USER_CODE` Place your code here */
1462:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1463:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             /* `#END` */
1464:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1465:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         #ifdef USBFS_1_EP_DMA_DONE_ISR_CALLBACK
1466:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             USBFS_1_EP_DMA_DONE_ISR_Callback();
1467:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         #endif /* (USBFS_1_EP_DMA_DONE_ISR_CALLBACK) */
1468:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1469:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             /* Transfer again 2 last bytes into pre-fetch endpoint area. */
1470:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             USBFS_1_ARB_EP_BASE.arbEp[ep].rwWaMsb = 0u;
 268              		.loc 1 1470 0
 269 0034 DFF84880 		ldr	r8, .L24+8
 270 0038 1746     		mov	r7, r2
 271 003a 4244     		add	r2, r8, r2
 272 003c 0023     		movs	r3, #0
 273 003e 5371     		strb	r3, [r2, #5]
1471:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             USBFS_1_ARB_EP_BASE.arbEp[ep].rwWa = (USBFS_1_DMA_BYTES_PER_BURST * ep)
 274              		.loc 1 1471 0
 275 0040 6301     		lsls	r3, r4, #5
 276 0042 023B     		subs	r3, r3, #2
 277 0044 DBB2     		uxtb	r3, r3
 278 0046 1371     		strb	r3, [r2, #4]
1472:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             USBFS_1_LoadNextInEP(ep, 1u);
 279              		.loc 1 1472 0
 280 0048 2046     		mov	r0, r4
 281 004a 0121     		movs	r1, #1
 282 004c FFF7FEFF 		bl	USBFS_1_LoadNextInEP
 283              	.LVL19:
1473:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1474:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             /* Set Data ready status to generate DMA request. */
1475:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                             USBFS_1_ARB_EP_BASE.arbEp[ep].epCfg |= USBFS_1_ARB_EPX_CFG_IN_DATA_RDY;
 284              		.loc 1 1475 0
 285 0050 18F80730 		ldrb	r3, [r8, r7]	@ zero_extendqisi2
 286 0054 43F00103 		orr	r3, r3, #1
 287 0058 08F80730 		strb	r3, [r8, r7]
 288              	.L19:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 32


1476:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                         }
1477:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     }
1478:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1479:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     ep++;
 289              		.loc 1 1479 0
 290 005c 0134     		adds	r4, r4, #1
 291              	.LVL20:
 292 005e E4B2     		uxtb	r4, r4
 293              	.LVL21:
1480:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     int17Status >>= 1u;
 294              		.loc 1 1480 0
 295 0060 6D08     		lsrs	r5, r5, #1
 296              	.LVL22:
 297              	.L22:
1451:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 {
 298              		.loc 1 1451 0
 299 0062 002D     		cmp	r5, #0
 300 0064 D8D1     		bne	.L20
 301              	.LVL23:
1481:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 }
1482:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1483:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 int8Status >>= 1u;
1484:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1485:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 if (int8Status != 0u)
 302              		.loc 1 1485 0
 303 0066 7608     		lsrs	r6, r6, #1
 304              	.LVL24:
 305 0068 02D0     		beq	.L18
 306              	.LVL25:
1486:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 {
1487:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     /* Prepare pointer for EP8. */
1488:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     ep = USBFS_1_EP8;
1489:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     int17Status = int8Status & 0x01u;
 307              		.loc 1 1489 0
 308 006a 06F00105 		and	r5, r6, #1
 309              	.LVL26:
1488:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                     int17Status = int8Status & 0x01u;
 310              		.loc 1 1488 0
 311 006e 0824     		movs	r4, #8
 312              	.LVL27:
 313              	.L18:
1449:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 314              		.loc 1 1449 0
 315 0070 002E     		cmp	r6, #0
 316 0072 F6D1     		bne	.L22
1490:.\Generated_Source\PSoC5/USBFS_1_episr.c ****                 }
1491:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             }
1492:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1493:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* `#START EP_DMA_DONE_END_USER_CODE` Place your code here */
1494:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1495:.\Generated_Source\PSoC5/USBFS_1_episr.c ****             /* `#END` */
1496:.\Generated_Source\PSoC5/USBFS_1_episr.c **** 
1497:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_DMA_DONE_ISR_EXIT_CALLBACK
1498:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_DMA_DONE_ISR_ExitCallback();
1499:.\Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_DMA_DONE_ISR_EXIT_CALLBACK) */
1500:.\Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 317              		.loc 1 1500 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 33


 318 0074 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 319              	.LVL28:
 320              	.L25:
 321              		.align	2
 322              	.L24:
 323 0078 72600040 		.word	1073766514
 324 007c 00000000 		.word	USBFS_1_inBufFull
 325 0080 70600040 		.word	1073766512
 326              		.cfi_endproc
 327              	.LFE3:
 328              		.size	USBFS_1_EP_DMA_DONE_ISR, .-USBFS_1_EP_DMA_DONE_ISR
 329              		.text
 330              	.Letext0:
 331              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 332              		.file 3 ".\\Generated_Source\\PSoC5\\USBFS_1.h"
 333              		.file 4 ".\\Generated_Source\\PSoC5\\USBFS_1_pvt.h"
 334              		.file 5 ".\\Generated_Source\\PSoC5\\USBFS_1_EP17_DMA_Done_SR.h"
 335              		.file 6 ".\\Generated_Source\\PSoC5\\USBFS_1_EP8_DMA_Done_SR.h"
 336              		.section	.debug_info,"",%progbits
 337              	.Ldebug_info0:
 338 0000 1F040000 		.4byte	0x41f
 339 0004 0400     		.2byte	0x4
 340 0006 00000000 		.4byte	.Ldebug_abbrev0
 341 000a 04       		.byte	0x4
 342 000b 01       		.uleb128 0x1
 343 000c 58030000 		.4byte	.LASF57
 344 0010 01       		.byte	0x1
 345 0011 2F030000 		.4byte	.LASF58
 346 0015 B1020000 		.4byte	.LASF59
 347 0019 00000000 		.4byte	.Ldebug_ranges0+0
 348 001d 00000000 		.4byte	0
 349 0021 00000000 		.4byte	.Ldebug_line0
 350 0025 02       		.uleb128 0x2
 351 0026 01       		.byte	0x1
 352 0027 06       		.byte	0x6
 353 0028 7D000000 		.4byte	.LASF0
 354 002c 02       		.uleb128 0x2
 355 002d 01       		.byte	0x1
 356 002e 08       		.byte	0x8
 357 002f 3D020000 		.4byte	.LASF1
 358 0033 02       		.uleb128 0x2
 359 0034 02       		.byte	0x2
 360 0035 05       		.byte	0x5
 361 0036 4B020000 		.4byte	.LASF2
 362 003a 02       		.uleb128 0x2
 363 003b 02       		.byte	0x2
 364 003c 07       		.byte	0x7
 365 003d 6C010000 		.4byte	.LASF3
 366 0041 02       		.uleb128 0x2
 367 0042 04       		.byte	0x4
 368 0043 05       		.byte	0x5
 369 0044 9B000000 		.4byte	.LASF4
 370 0048 02       		.uleb128 0x2
 371 0049 04       		.byte	0x4
 372 004a 07       		.byte	0x7
 373 004b 20010000 		.4byte	.LASF5
 374 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 34


 375 0050 08       		.byte	0x8
 376 0051 05       		.byte	0x5
 377 0052 6F000000 		.4byte	.LASF6
 378 0056 02       		.uleb128 0x2
 379 0057 08       		.byte	0x8
 380 0058 07       		.byte	0x7
 381 0059 42000000 		.4byte	.LASF7
 382 005d 03       		.uleb128 0x3
 383 005e 04       		.byte	0x4
 384 005f 05       		.byte	0x5
 385 0060 696E7400 		.ascii	"int\000"
 386 0064 02       		.uleb128 0x2
 387 0065 04       		.byte	0x4
 388 0066 07       		.byte	0x7
 389 0067 FD000000 		.4byte	.LASF8
 390 006b 04       		.uleb128 0x4
 391 006c A4000000 		.4byte	.LASF9
 392 0070 02       		.byte	0x2
 393 0071 3801     		.2byte	0x138
 394 0073 2C000000 		.4byte	0x2c
 395 0077 04       		.uleb128 0x4
 396 0078 00000000 		.4byte	.LASF10
 397 007c 02       		.byte	0x2
 398 007d 3901     		.2byte	0x139
 399 007f 3A000000 		.4byte	0x3a
 400 0083 02       		.uleb128 0x2
 401 0084 04       		.byte	0x4
 402 0085 04       		.byte	0x4
 403 0086 1C020000 		.4byte	.LASF11
 404 008a 02       		.uleb128 0x2
 405 008b 08       		.byte	0x8
 406 008c 04       		.byte	0x4
 407 008d B8000000 		.4byte	.LASF12
 408 0091 02       		.uleb128 0x2
 409 0092 01       		.byte	0x1
 410 0093 08       		.byte	0x8
 411 0094 83020000 		.4byte	.LASF13
 412 0098 04       		.uleb128 0x4
 413 0099 38020000 		.4byte	.LASF14
 414 009d 02       		.byte	0x2
 415 009e E201     		.2byte	0x1e2
 416 00a0 A4000000 		.4byte	0xa4
 417 00a4 05       		.uleb128 0x5
 418 00a5 6B000000 		.4byte	0x6b
 419 00a9 02       		.uleb128 0x2
 420 00aa 04       		.byte	0x4
 421 00ab 07       		.byte	0x7
 422 00ac C6010000 		.4byte	.LASF15
 423 00b0 06       		.uleb128 0x6
 424 00b1 0C       		.byte	0xc
 425 00b2 03       		.byte	0x3
 426 00b3 8C       		.byte	0x8c
 427 00b4 25010000 		.4byte	0x125
 428 00b8 07       		.uleb128 0x7
 429 00b9 E3010000 		.4byte	.LASF16
 430 00bd 03       		.byte	0x3
 431 00be 8E       		.byte	0x8e
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 35


 432 00bf 6B000000 		.4byte	0x6b
 433 00c3 00       		.byte	0
 434 00c4 07       		.uleb128 0x7
 435 00c5 22020000 		.4byte	.LASF17
 436 00c9 03       		.byte	0x3
 437 00ca 8F       		.byte	0x8f
 438 00cb 6B000000 		.4byte	0x6b
 439 00cf 01       		.byte	0x1
 440 00d0 07       		.uleb128 0x7
 441 00d1 BC010000 		.4byte	.LASF18
 442 00d5 03       		.byte	0x3
 443 00d6 90       		.byte	0x90
 444 00d7 6B000000 		.4byte	0x6b
 445 00db 02       		.byte	0x2
 446 00dc 07       		.uleb128 0x7
 447 00dd AA000000 		.4byte	.LASF19
 448 00e1 03       		.byte	0x3
 449 00e2 91       		.byte	0x91
 450 00e3 6B000000 		.4byte	0x6b
 451 00e7 03       		.byte	0x3
 452 00e8 07       		.uleb128 0x7
 453 00e9 59000000 		.4byte	.LASF20
 454 00ed 03       		.byte	0x3
 455 00ee 92       		.byte	0x92
 456 00ef 6B000000 		.4byte	0x6b
 457 00f3 04       		.byte	0x4
 458 00f4 07       		.uleb128 0x7
 459 00f5 DC000000 		.4byte	.LASF21
 460 00f9 03       		.byte	0x3
 461 00fa 93       		.byte	0x93
 462 00fb 6B000000 		.4byte	0x6b
 463 00ff 05       		.byte	0x5
 464 0100 07       		.uleb128 0x7
 465 0101 1A030000 		.4byte	.LASF22
 466 0105 03       		.byte	0x3
 467 0106 94       		.byte	0x94
 468 0107 77000000 		.4byte	0x77
 469 010b 06       		.byte	0x6
 470 010c 07       		.uleb128 0x7
 471 010d 88020000 		.4byte	.LASF23
 472 0111 03       		.byte	0x3
 473 0112 95       		.byte	0x95
 474 0113 77000000 		.4byte	0x77
 475 0117 08       		.byte	0x8
 476 0118 07       		.uleb128 0x7
 477 0119 B2010000 		.4byte	.LASF24
 478 011d 03       		.byte	0x3
 479 011e 96       		.byte	0x96
 480 011f 6B000000 		.4byte	0x6b
 481 0123 0A       		.byte	0xa
 482 0124 00       		.byte	0
 483 0125 08       		.uleb128 0x8
 484 0126 7F010000 		.4byte	.LASF25
 485 012a 03       		.byte	0x3
 486 012b 97       		.byte	0x97
 487 012c B0000000 		.4byte	0xb0
 488 0130 06       		.uleb128 0x6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 36


 489 0131 10       		.byte	0x10
 490 0132 03       		.byte	0x3
 491 0133 D3       		.byte	0xd3
 492 0134 69010000 		.4byte	0x169
 493 0138 07       		.uleb128 0x7
 494 0139 F2010000 		.4byte	.LASF26
 495 013d 03       		.byte	0x3
 496 013e D5       		.byte	0xd5
 497 013f 6B000000 		.4byte	0x6b
 498 0143 00       		.byte	0
 499 0144 07       		.uleb128 0x7
 500 0145 F9010000 		.4byte	.LASF27
 501 0149 03       		.byte	0x3
 502 014a D6       		.byte	0xd6
 503 014b 6B000000 		.4byte	0x6b
 504 014f 01       		.byte	0x1
 505 0150 07       		.uleb128 0x7
 506 0151 16020000 		.4byte	.LASF28
 507 0155 03       		.byte	0x3
 508 0156 D7       		.byte	0xd7
 509 0157 6B000000 		.4byte	0x6b
 510 015b 02       		.byte	0x2
 511 015c 09       		.uleb128 0x9
 512 015d 67617000 		.ascii	"gap\000"
 513 0161 03       		.byte	0x3
 514 0162 D8       		.byte	0xd8
 515 0163 69010000 		.4byte	0x169
 516 0167 03       		.byte	0x3
 517 0168 00       		.byte	0
 518 0169 0A       		.uleb128 0xa
 519 016a 6B000000 		.4byte	0x6b
 520 016e 79010000 		.4byte	0x179
 521 0172 0B       		.uleb128 0xb
 522 0173 A9000000 		.4byte	0xa9
 523 0177 0C       		.byte	0xc
 524 0178 00       		.byte	0
 525 0179 08       		.uleb128 0x8
 526 017a 00020000 		.4byte	.LASF29
 527 017e 03       		.byte	0x3
 528 017f D9       		.byte	0xd9
 529 0180 30010000 		.4byte	0x130
 530 0184 06       		.uleb128 0x6
 531 0185 10       		.byte	0x10
 532 0186 03       		.byte	0x3
 533 0187 E5       		.byte	0xe5
 534 0188 05020000 		.4byte	0x205
 535 018c 07       		.uleb128 0x7
 536 018d 5E000000 		.4byte	.LASF30
 537 0191 03       		.byte	0x3
 538 0192 E7       		.byte	0xe7
 539 0193 6B000000 		.4byte	0x6b
 540 0197 00       		.byte	0
 541 0198 07       		.uleb128 0x7
 542 0199 EB030000 		.4byte	.LASF31
 543 019d 03       		.byte	0x3
 544 019e E8       		.byte	0xe8
 545 019f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 37


 546 01a3 01       		.byte	0x1
 547 01a4 07       		.uleb128 0x7
 548 01a5 BF000000 		.4byte	.LASF32
 549 01a9 03       		.byte	0x3
 550 01aa E9       		.byte	0xe9
 551 01ab 6B000000 		.4byte	0x6b
 552 01af 02       		.byte	0x2
 553 01b0 07       		.uleb128 0x7
 554 01b1 E3000000 		.4byte	.LASF33
 555 01b5 03       		.byte	0x3
 556 01b6 EA       		.byte	0xea
 557 01b7 6B000000 		.4byte	0x6b
 558 01bb 03       		.byte	0x3
 559 01bc 07       		.uleb128 0x7
 560 01bd B3000000 		.4byte	.LASF34
 561 01c1 03       		.byte	0x3
 562 01c2 EB       		.byte	0xeb
 563 01c3 6B000000 		.4byte	0x6b
 564 01c7 04       		.byte	0x4
 565 01c8 07       		.uleb128 0x7
 566 01c9 6A020000 		.4byte	.LASF35
 567 01cd 03       		.byte	0x3
 568 01ce EC       		.byte	0xec
 569 01cf 6B000000 		.4byte	0x6b
 570 01d3 05       		.byte	0x5
 571 01d4 07       		.uleb128 0x7
 572 01d5 65020000 		.4byte	.LASF36
 573 01d9 03       		.byte	0x3
 574 01da ED       		.byte	0xed
 575 01db 6B000000 		.4byte	0x6b
 576 01df 06       		.byte	0x6
 577 01e0 07       		.uleb128 0x7
 578 01e1 EA010000 		.4byte	.LASF37
 579 01e5 03       		.byte	0x3
 580 01e6 EE       		.byte	0xee
 581 01e7 6B000000 		.4byte	0x6b
 582 01eb 07       		.byte	0x7
 583 01ec 07       		.uleb128 0x7
 584 01ed E6030000 		.4byte	.LASF38
 585 01f1 03       		.byte	0x3
 586 01f2 EF       		.byte	0xef
 587 01f3 6B000000 		.4byte	0x6b
 588 01f7 08       		.byte	0x8
 589 01f8 09       		.uleb128 0x9
 590 01f9 67617000 		.ascii	"gap\000"
 591 01fd 03       		.byte	0x3
 592 01fe F0       		.byte	0xf0
 593 01ff 05020000 		.4byte	0x205
 594 0203 09       		.byte	0x9
 595 0204 00       		.byte	0
 596 0205 0A       		.uleb128 0xa
 597 0206 6B000000 		.4byte	0x6b
 598 020a 15020000 		.4byte	0x215
 599 020e 0B       		.uleb128 0xb
 600 020f A9000000 		.4byte	0xa9
 601 0213 06       		.byte	0x6
 602 0214 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 38


 603 0215 08       		.uleb128 0x8
 604 0216 0A010000 		.4byte	.LASF39
 605 021a 03       		.byte	0x3
 606 021b F1       		.byte	0xf1
 607 021c 84010000 		.4byte	0x184
 608 0220 0C       		.uleb128 0xc
 609 0221 90       		.byte	0x90
 610 0222 03       		.byte	0x3
 611 0223 0D01     		.2byte	0x10d
 612 0225 37020000 		.4byte	0x237
 613 0229 0D       		.uleb128 0xd
 614 022a CF010000 		.4byte	.LASF40
 615 022e 03       		.byte	0x3
 616 022f 0F01     		.2byte	0x10f
 617 0231 37020000 		.4byte	0x237
 618 0235 00       		.byte	0
 619 0236 00       		.byte	0
 620 0237 0A       		.uleb128 0xa
 621 0238 79010000 		.4byte	0x179
 622 023c 47020000 		.4byte	0x247
 623 0240 0B       		.uleb128 0xb
 624 0241 A9000000 		.4byte	0xa9
 625 0245 08       		.byte	0x8
 626 0246 00       		.byte	0
 627 0247 04       		.uleb128 0x4
 628 0248 32010000 		.4byte	.LASF41
 629 024c 03       		.byte	0x3
 630 024d 1001     		.2byte	0x110
 631 024f 20020000 		.4byte	0x220
 632 0253 0C       		.uleb128 0xc
 633 0254 90       		.byte	0x90
 634 0255 03       		.byte	0x3
 635 0256 1301     		.2byte	0x113
 636 0258 6A020000 		.4byte	0x26a
 637 025c 0D       		.uleb128 0xd
 638 025d AC010000 		.4byte	.LASF42
 639 0261 03       		.byte	0x3
 640 0262 1501     		.2byte	0x115
 641 0264 6A020000 		.4byte	0x26a
 642 0268 00       		.byte	0
 643 0269 00       		.byte	0
 644 026a 0A       		.uleb128 0xa
 645 026b 15020000 		.4byte	0x215
 646 026f 7A020000 		.4byte	0x27a
 647 0273 0B       		.uleb128 0xb
 648 0274 A9000000 		.4byte	0xa9
 649 0278 08       		.byte	0x8
 650 0279 00       		.byte	0
 651 027a 04       		.uleb128 0x4
 652 027b 49010000 		.4byte	.LASF43
 653 027f 03       		.byte	0x3
 654 0280 1601     		.2byte	0x116
 655 0282 53020000 		.4byte	0x253
 656 0286 0E       		.uleb128 0xe
 657 0287 72020000 		.4byte	.LASF60
 658 028b 01       		.byte	0x1
 659 028c 78       		.byte	0x78
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 39


 660 028d 00000000 		.4byte	.LFB0
 661 0291 3C000000 		.4byte	.LFE0-.LFB0
 662 0295 01       		.uleb128 0x1
 663 0296 9C       		.byte	0x9c
 664 0297 0F       		.uleb128 0xf
 665 0298 96010000 		.4byte	.LASF44
 666 029c 01       		.byte	0x1
 667 029d D202     		.2byte	0x2d2
 668 029f 00000000 		.4byte	.LFB1
 669 02a3 08000000 		.4byte	.LFE1-.LFB1
 670 02a7 01       		.uleb128 0x1
 671 02a8 9C       		.byte	0x9c
 672 02a9 B7020000 		.4byte	0x2b7
 673 02ad 10       		.uleb128 0x10
 674 02ae 06000000 		.4byte	.LVL0
 675 02b2 EF030000 		.4byte	0x3ef
 676 02b6 00       		.byte	0
 677 02b7 0F       		.uleb128 0xf
 678 02b8 55020000 		.4byte	.LASF45
 679 02bc 01       		.byte	0x1
 680 02bd 1003     		.2byte	0x310
 681 02bf 00000000 		.4byte	.LFB2
 682 02c3 A4000000 		.4byte	.LFE2-.LFB2
 683 02c7 01       		.uleb128 0x1
 684 02c8 9C       		.byte	0x9c
 685 02c9 12030000 		.4byte	0x312
 686 02cd 11       		.uleb128 0x11
 687 02ce D5010000 		.4byte	.LASF46
 688 02d2 01       		.byte	0x1
 689 02d3 1203     		.2byte	0x312
 690 02d5 6B000000 		.4byte	0x6b
 691 02d9 00000000 		.4byte	.LLST0
 692 02dd 11       		.uleb128 0x11
 693 02de 93020000 		.4byte	.LASF47
 694 02e2 01       		.byte	0x1
 695 02e3 1303     		.2byte	0x313
 696 02e5 6B000000 		.4byte	0x6b
 697 02e9 13000000 		.4byte	.LLST1
 698 02ed 12       		.uleb128 0x12
 699 02ee 657000   		.ascii	"ep\000"
 700 02f1 01       		.byte	0x1
 701 02f2 1403     		.2byte	0x314
 702 02f4 6B000000 		.4byte	0x6b
 703 02f8 26000000 		.4byte	.LLST2
 704 02fc 13       		.uleb128 0x13
 705 02fd 58000000 		.4byte	.LVL5
 706 0301 F6030000 		.4byte	0x3f6
 707 0305 14       		.uleb128 0x14
 708 0306 01       		.uleb128 0x1
 709 0307 51       		.byte	0x51
 710 0308 01       		.uleb128 0x1
 711 0309 30       		.byte	0x30
 712 030a 14       		.uleb128 0x14
 713 030b 01       		.uleb128 0x1
 714 030c 50       		.byte	0x50
 715 030d 02       		.uleb128 0x2
 716 030e 74       		.byte	0x74
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 40


 717 030f 00       		.sleb128 0
 718 0310 00       		.byte	0
 719 0311 00       		.byte	0
 720 0312 0F       		.uleb128 0xf
 721 0313 C4000000 		.4byte	.LASF48
 722 0317 01       		.byte	0x1
 723 0318 9605     		.2byte	0x596
 724 031a 00000000 		.4byte	.LFB3
 725 031e 84000000 		.4byte	.LFE3-.LFB3
 726 0322 01       		.uleb128 0x1
 727 0323 9C       		.byte	0x9c
 728 0324 8F030000 		.4byte	0x38f
 729 0328 11       		.uleb128 0x11
 730 0329 2D020000 		.4byte	.LASF49
 731 032d 01       		.byte	0x1
 732 032e 9805     		.2byte	0x598
 733 0330 6B000000 		.4byte	0x6b
 734 0334 50000000 		.4byte	.LLST3
 735 0338 11       		.uleb128 0x11
 736 0339 60010000 		.4byte	.LASF50
 737 033d 01       		.byte	0x1
 738 033e 9905     		.2byte	0x599
 739 0340 6B000000 		.4byte	0x6b
 740 0344 7D000000 		.4byte	.LLST4
 741 0348 11       		.uleb128 0x11
 742 0349 25030000 		.4byte	.LASF51
 743 034d 01       		.byte	0x1
 744 034e 9A05     		.2byte	0x59a
 745 0350 6B000000 		.4byte	0x6b
 746 0354 90000000 		.4byte	.LLST5
 747 0358 12       		.uleb128 0x12
 748 0359 657000   		.ascii	"ep\000"
 749 035c 01       		.byte	0x1
 750 035d 9B05     		.2byte	0x59b
 751 035f 6B000000 		.4byte	0x6b
 752 0363 A3000000 		.4byte	.LLST6
 753 0367 10       		.uleb128 0x10
 754 0368 08000000 		.4byte	.LVL12
 755 036c 0C040000 		.4byte	0x40c
 756 0370 10       		.uleb128 0x10
 757 0371 10000000 		.4byte	.LVL14
 758 0375 17040000 		.4byte	0x417
 759 0379 13       		.uleb128 0x13
 760 037a 50000000 		.4byte	.LVL19
 761 037e F6030000 		.4byte	0x3f6
 762 0382 14       		.uleb128 0x14
 763 0383 01       		.uleb128 0x1
 764 0384 51       		.byte	0x51
 765 0385 01       		.uleb128 0x1
 766 0386 31       		.byte	0x31
 767 0387 14       		.uleb128 0x14
 768 0388 01       		.uleb128 0x1
 769 0389 50       		.byte	0x50
 770 038a 02       		.uleb128 0x2
 771 038b 74       		.byte	0x74
 772 038c 00       		.sleb128 0
 773 038d 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 41


 774 038e 00       		.byte	0
 775 038f 0A       		.uleb128 0xa
 776 0390 25010000 		.4byte	0x125
 777 0394 9F030000 		.4byte	0x39f
 778 0398 0B       		.uleb128 0xb
 779 0399 A9000000 		.4byte	0xa9
 780 039d 08       		.byte	0x8
 781 039e 00       		.byte	0
 782 039f 15       		.uleb128 0x15
 783 03a0 64000000 		.4byte	.LASF52
 784 03a4 04       		.byte	0x4
 785 03a5 78       		.byte	0x78
 786 03a6 AA030000 		.4byte	0x3aa
 787 03aa 05       		.uleb128 0x5
 788 03ab 8F030000 		.4byte	0x38f
 789 03af 0A       		.uleb128 0xa
 790 03b0 77000000 		.4byte	0x77
 791 03b4 BF030000 		.4byte	0x3bf
 792 03b8 0B       		.uleb128 0xb
 793 03b9 A9000000 		.4byte	0xa9
 794 03bd 08       		.byte	0x8
 795 03be 00       		.byte	0
 796 03bf 15       		.uleb128 0x15
 797 03c0 EC000000 		.4byte	.LASF53
 798 03c4 04       		.byte	0x4
 799 03c5 91       		.byte	0x91
 800 03c6 CA030000 		.4byte	0x3ca
 801 03ca 05       		.uleb128 0x5
 802 03cb AF030000 		.4byte	0x3af
 803 03cf 0A       		.uleb128 0xa
 804 03d0 6B000000 		.4byte	0x6b
 805 03d4 DF030000 		.4byte	0x3df
 806 03d8 0B       		.uleb128 0xb
 807 03d9 A9000000 		.4byte	0xa9
 808 03dd 08       		.byte	0x8
 809 03de 00       		.byte	0
 810 03df 15       		.uleb128 0x15
 811 03e0 89000000 		.4byte	.LASF54
 812 03e4 04       		.byte	0x4
 813 03e5 92       		.byte	0x92
 814 03e6 EA030000 		.4byte	0x3ea
 815 03ea 05       		.uleb128 0x5
 816 03eb CF030000 		.4byte	0x3cf
 817 03ef 16       		.uleb128 0x16
 818 03f0 F3030000 		.4byte	.LASF61
 819 03f4 04       		.byte	0x4
 820 03f5 A3       		.byte	0xa3
 821 03f6 17       		.uleb128 0x17
 822 03f7 9C020000 		.4byte	.LASF62
 823 03fb 04       		.byte	0x4
 824 03fc CC       		.byte	0xcc
 825 03fd 0C040000 		.4byte	0x40c
 826 0401 18       		.uleb128 0x18
 827 0402 6B000000 		.4byte	0x6b
 828 0406 18       		.uleb128 0x18
 829 0407 6B000000 		.4byte	0x6b
 830 040b 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 42


 831 040c 19       		.uleb128 0x19
 832 040d 07000000 		.4byte	.LASF55
 833 0411 05       		.byte	0x5
 834 0412 28       		.byte	0x28
 835 0413 6B000000 		.4byte	0x6b
 836 0417 19       		.uleb128 0x19
 837 0418 25000000 		.4byte	.LASF56
 838 041c 06       		.byte	0x6
 839 041d 28       		.byte	0x28
 840 041e 6B000000 		.4byte	0x6b
 841 0422 00       		.byte	0
 842              		.section	.debug_abbrev,"",%progbits
 843              	.Ldebug_abbrev0:
 844 0000 01       		.uleb128 0x1
 845 0001 11       		.uleb128 0x11
 846 0002 01       		.byte	0x1
 847 0003 25       		.uleb128 0x25
 848 0004 0E       		.uleb128 0xe
 849 0005 13       		.uleb128 0x13
 850 0006 0B       		.uleb128 0xb
 851 0007 03       		.uleb128 0x3
 852 0008 0E       		.uleb128 0xe
 853 0009 1B       		.uleb128 0x1b
 854 000a 0E       		.uleb128 0xe
 855 000b 55       		.uleb128 0x55
 856 000c 17       		.uleb128 0x17
 857 000d 11       		.uleb128 0x11
 858 000e 01       		.uleb128 0x1
 859 000f 10       		.uleb128 0x10
 860 0010 17       		.uleb128 0x17
 861 0011 00       		.byte	0
 862 0012 00       		.byte	0
 863 0013 02       		.uleb128 0x2
 864 0014 24       		.uleb128 0x24
 865 0015 00       		.byte	0
 866 0016 0B       		.uleb128 0xb
 867 0017 0B       		.uleb128 0xb
 868 0018 3E       		.uleb128 0x3e
 869 0019 0B       		.uleb128 0xb
 870 001a 03       		.uleb128 0x3
 871 001b 0E       		.uleb128 0xe
 872 001c 00       		.byte	0
 873 001d 00       		.byte	0
 874 001e 03       		.uleb128 0x3
 875 001f 24       		.uleb128 0x24
 876 0020 00       		.byte	0
 877 0021 0B       		.uleb128 0xb
 878 0022 0B       		.uleb128 0xb
 879 0023 3E       		.uleb128 0x3e
 880 0024 0B       		.uleb128 0xb
 881 0025 03       		.uleb128 0x3
 882 0026 08       		.uleb128 0x8
 883 0027 00       		.byte	0
 884 0028 00       		.byte	0
 885 0029 04       		.uleb128 0x4
 886 002a 16       		.uleb128 0x16
 887 002b 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 43


 888 002c 03       		.uleb128 0x3
 889 002d 0E       		.uleb128 0xe
 890 002e 3A       		.uleb128 0x3a
 891 002f 0B       		.uleb128 0xb
 892 0030 3B       		.uleb128 0x3b
 893 0031 05       		.uleb128 0x5
 894 0032 49       		.uleb128 0x49
 895 0033 13       		.uleb128 0x13
 896 0034 00       		.byte	0
 897 0035 00       		.byte	0
 898 0036 05       		.uleb128 0x5
 899 0037 35       		.uleb128 0x35
 900 0038 00       		.byte	0
 901 0039 49       		.uleb128 0x49
 902 003a 13       		.uleb128 0x13
 903 003b 00       		.byte	0
 904 003c 00       		.byte	0
 905 003d 06       		.uleb128 0x6
 906 003e 13       		.uleb128 0x13
 907 003f 01       		.byte	0x1
 908 0040 0B       		.uleb128 0xb
 909 0041 0B       		.uleb128 0xb
 910 0042 3A       		.uleb128 0x3a
 911 0043 0B       		.uleb128 0xb
 912 0044 3B       		.uleb128 0x3b
 913 0045 0B       		.uleb128 0xb
 914 0046 01       		.uleb128 0x1
 915 0047 13       		.uleb128 0x13
 916 0048 00       		.byte	0
 917 0049 00       		.byte	0
 918 004a 07       		.uleb128 0x7
 919 004b 0D       		.uleb128 0xd
 920 004c 00       		.byte	0
 921 004d 03       		.uleb128 0x3
 922 004e 0E       		.uleb128 0xe
 923 004f 3A       		.uleb128 0x3a
 924 0050 0B       		.uleb128 0xb
 925 0051 3B       		.uleb128 0x3b
 926 0052 0B       		.uleb128 0xb
 927 0053 49       		.uleb128 0x49
 928 0054 13       		.uleb128 0x13
 929 0055 38       		.uleb128 0x38
 930 0056 0B       		.uleb128 0xb
 931 0057 00       		.byte	0
 932 0058 00       		.byte	0
 933 0059 08       		.uleb128 0x8
 934 005a 16       		.uleb128 0x16
 935 005b 00       		.byte	0
 936 005c 03       		.uleb128 0x3
 937 005d 0E       		.uleb128 0xe
 938 005e 3A       		.uleb128 0x3a
 939 005f 0B       		.uleb128 0xb
 940 0060 3B       		.uleb128 0x3b
 941 0061 0B       		.uleb128 0xb
 942 0062 49       		.uleb128 0x49
 943 0063 13       		.uleb128 0x13
 944 0064 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 44


 945 0065 00       		.byte	0
 946 0066 09       		.uleb128 0x9
 947 0067 0D       		.uleb128 0xd
 948 0068 00       		.byte	0
 949 0069 03       		.uleb128 0x3
 950 006a 08       		.uleb128 0x8
 951 006b 3A       		.uleb128 0x3a
 952 006c 0B       		.uleb128 0xb
 953 006d 3B       		.uleb128 0x3b
 954 006e 0B       		.uleb128 0xb
 955 006f 49       		.uleb128 0x49
 956 0070 13       		.uleb128 0x13
 957 0071 38       		.uleb128 0x38
 958 0072 0B       		.uleb128 0xb
 959 0073 00       		.byte	0
 960 0074 00       		.byte	0
 961 0075 0A       		.uleb128 0xa
 962 0076 01       		.uleb128 0x1
 963 0077 01       		.byte	0x1
 964 0078 49       		.uleb128 0x49
 965 0079 13       		.uleb128 0x13
 966 007a 01       		.uleb128 0x1
 967 007b 13       		.uleb128 0x13
 968 007c 00       		.byte	0
 969 007d 00       		.byte	0
 970 007e 0B       		.uleb128 0xb
 971 007f 21       		.uleb128 0x21
 972 0080 00       		.byte	0
 973 0081 49       		.uleb128 0x49
 974 0082 13       		.uleb128 0x13
 975 0083 2F       		.uleb128 0x2f
 976 0084 0B       		.uleb128 0xb
 977 0085 00       		.byte	0
 978 0086 00       		.byte	0
 979 0087 0C       		.uleb128 0xc
 980 0088 13       		.uleb128 0x13
 981 0089 01       		.byte	0x1
 982 008a 0B       		.uleb128 0xb
 983 008b 0B       		.uleb128 0xb
 984 008c 3A       		.uleb128 0x3a
 985 008d 0B       		.uleb128 0xb
 986 008e 3B       		.uleb128 0x3b
 987 008f 05       		.uleb128 0x5
 988 0090 01       		.uleb128 0x1
 989 0091 13       		.uleb128 0x13
 990 0092 00       		.byte	0
 991 0093 00       		.byte	0
 992 0094 0D       		.uleb128 0xd
 993 0095 0D       		.uleb128 0xd
 994 0096 00       		.byte	0
 995 0097 03       		.uleb128 0x3
 996 0098 0E       		.uleb128 0xe
 997 0099 3A       		.uleb128 0x3a
 998 009a 0B       		.uleb128 0xb
 999 009b 3B       		.uleb128 0x3b
 1000 009c 05       		.uleb128 0x5
 1001 009d 49       		.uleb128 0x49
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 45


 1002 009e 13       		.uleb128 0x13
 1003 009f 38       		.uleb128 0x38
 1004 00a0 0B       		.uleb128 0xb
 1005 00a1 00       		.byte	0
 1006 00a2 00       		.byte	0
 1007 00a3 0E       		.uleb128 0xe
 1008 00a4 2E       		.uleb128 0x2e
 1009 00a5 00       		.byte	0
 1010 00a6 3F       		.uleb128 0x3f
 1011 00a7 19       		.uleb128 0x19
 1012 00a8 03       		.uleb128 0x3
 1013 00a9 0E       		.uleb128 0xe
 1014 00aa 3A       		.uleb128 0x3a
 1015 00ab 0B       		.uleb128 0xb
 1016 00ac 3B       		.uleb128 0x3b
 1017 00ad 0B       		.uleb128 0xb
 1018 00ae 27       		.uleb128 0x27
 1019 00af 19       		.uleb128 0x19
 1020 00b0 11       		.uleb128 0x11
 1021 00b1 01       		.uleb128 0x1
 1022 00b2 12       		.uleb128 0x12
 1023 00b3 06       		.uleb128 0x6
 1024 00b4 40       		.uleb128 0x40
 1025 00b5 18       		.uleb128 0x18
 1026 00b6 9742     		.uleb128 0x2117
 1027 00b8 19       		.uleb128 0x19
 1028 00b9 00       		.byte	0
 1029 00ba 00       		.byte	0
 1030 00bb 0F       		.uleb128 0xf
 1031 00bc 2E       		.uleb128 0x2e
 1032 00bd 01       		.byte	0x1
 1033 00be 3F       		.uleb128 0x3f
 1034 00bf 19       		.uleb128 0x19
 1035 00c0 03       		.uleb128 0x3
 1036 00c1 0E       		.uleb128 0xe
 1037 00c2 3A       		.uleb128 0x3a
 1038 00c3 0B       		.uleb128 0xb
 1039 00c4 3B       		.uleb128 0x3b
 1040 00c5 05       		.uleb128 0x5
 1041 00c6 27       		.uleb128 0x27
 1042 00c7 19       		.uleb128 0x19
 1043 00c8 11       		.uleb128 0x11
 1044 00c9 01       		.uleb128 0x1
 1045 00ca 12       		.uleb128 0x12
 1046 00cb 06       		.uleb128 0x6
 1047 00cc 40       		.uleb128 0x40
 1048 00cd 18       		.uleb128 0x18
 1049 00ce 9742     		.uleb128 0x2117
 1050 00d0 19       		.uleb128 0x19
 1051 00d1 01       		.uleb128 0x1
 1052 00d2 13       		.uleb128 0x13
 1053 00d3 00       		.byte	0
 1054 00d4 00       		.byte	0
 1055 00d5 10       		.uleb128 0x10
 1056 00d6 898201   		.uleb128 0x4109
 1057 00d9 00       		.byte	0
 1058 00da 11       		.uleb128 0x11
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 46


 1059 00db 01       		.uleb128 0x1
 1060 00dc 31       		.uleb128 0x31
 1061 00dd 13       		.uleb128 0x13
 1062 00de 00       		.byte	0
 1063 00df 00       		.byte	0
 1064 00e0 11       		.uleb128 0x11
 1065 00e1 34       		.uleb128 0x34
 1066 00e2 00       		.byte	0
 1067 00e3 03       		.uleb128 0x3
 1068 00e4 0E       		.uleb128 0xe
 1069 00e5 3A       		.uleb128 0x3a
 1070 00e6 0B       		.uleb128 0xb
 1071 00e7 3B       		.uleb128 0x3b
 1072 00e8 05       		.uleb128 0x5
 1073 00e9 49       		.uleb128 0x49
 1074 00ea 13       		.uleb128 0x13
 1075 00eb 02       		.uleb128 0x2
 1076 00ec 17       		.uleb128 0x17
 1077 00ed 00       		.byte	0
 1078 00ee 00       		.byte	0
 1079 00ef 12       		.uleb128 0x12
 1080 00f0 34       		.uleb128 0x34
 1081 00f1 00       		.byte	0
 1082 00f2 03       		.uleb128 0x3
 1083 00f3 08       		.uleb128 0x8
 1084 00f4 3A       		.uleb128 0x3a
 1085 00f5 0B       		.uleb128 0xb
 1086 00f6 3B       		.uleb128 0x3b
 1087 00f7 05       		.uleb128 0x5
 1088 00f8 49       		.uleb128 0x49
 1089 00f9 13       		.uleb128 0x13
 1090 00fa 02       		.uleb128 0x2
 1091 00fb 17       		.uleb128 0x17
 1092 00fc 00       		.byte	0
 1093 00fd 00       		.byte	0
 1094 00fe 13       		.uleb128 0x13
 1095 00ff 898201   		.uleb128 0x4109
 1096 0102 01       		.byte	0x1
 1097 0103 11       		.uleb128 0x11
 1098 0104 01       		.uleb128 0x1
 1099 0105 31       		.uleb128 0x31
 1100 0106 13       		.uleb128 0x13
 1101 0107 00       		.byte	0
 1102 0108 00       		.byte	0
 1103 0109 14       		.uleb128 0x14
 1104 010a 8A8201   		.uleb128 0x410a
 1105 010d 00       		.byte	0
 1106 010e 02       		.uleb128 0x2
 1107 010f 18       		.uleb128 0x18
 1108 0110 9142     		.uleb128 0x2111
 1109 0112 18       		.uleb128 0x18
 1110 0113 00       		.byte	0
 1111 0114 00       		.byte	0
 1112 0115 15       		.uleb128 0x15
 1113 0116 34       		.uleb128 0x34
 1114 0117 00       		.byte	0
 1115 0118 03       		.uleb128 0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 47


 1116 0119 0E       		.uleb128 0xe
 1117 011a 3A       		.uleb128 0x3a
 1118 011b 0B       		.uleb128 0xb
 1119 011c 3B       		.uleb128 0x3b
 1120 011d 0B       		.uleb128 0xb
 1121 011e 49       		.uleb128 0x49
 1122 011f 13       		.uleb128 0x13
 1123 0120 3F       		.uleb128 0x3f
 1124 0121 19       		.uleb128 0x19
 1125 0122 3C       		.uleb128 0x3c
 1126 0123 19       		.uleb128 0x19
 1127 0124 00       		.byte	0
 1128 0125 00       		.byte	0
 1129 0126 16       		.uleb128 0x16
 1130 0127 2E       		.uleb128 0x2e
 1131 0128 00       		.byte	0
 1132 0129 3F       		.uleb128 0x3f
 1133 012a 19       		.uleb128 0x19
 1134 012b 03       		.uleb128 0x3
 1135 012c 0E       		.uleb128 0xe
 1136 012d 3A       		.uleb128 0x3a
 1137 012e 0B       		.uleb128 0xb
 1138 012f 3B       		.uleb128 0x3b
 1139 0130 0B       		.uleb128 0xb
 1140 0131 27       		.uleb128 0x27
 1141 0132 19       		.uleb128 0x19
 1142 0133 3C       		.uleb128 0x3c
 1143 0134 19       		.uleb128 0x19
 1144 0135 00       		.byte	0
 1145 0136 00       		.byte	0
 1146 0137 17       		.uleb128 0x17
 1147 0138 2E       		.uleb128 0x2e
 1148 0139 01       		.byte	0x1
 1149 013a 3F       		.uleb128 0x3f
 1150 013b 19       		.uleb128 0x19
 1151 013c 03       		.uleb128 0x3
 1152 013d 0E       		.uleb128 0xe
 1153 013e 3A       		.uleb128 0x3a
 1154 013f 0B       		.uleb128 0xb
 1155 0140 3B       		.uleb128 0x3b
 1156 0141 0B       		.uleb128 0xb
 1157 0142 27       		.uleb128 0x27
 1158 0143 19       		.uleb128 0x19
 1159 0144 3C       		.uleb128 0x3c
 1160 0145 19       		.uleb128 0x19
 1161 0146 01       		.uleb128 0x1
 1162 0147 13       		.uleb128 0x13
 1163 0148 00       		.byte	0
 1164 0149 00       		.byte	0
 1165 014a 18       		.uleb128 0x18
 1166 014b 05       		.uleb128 0x5
 1167 014c 00       		.byte	0
 1168 014d 49       		.uleb128 0x49
 1169 014e 13       		.uleb128 0x13
 1170 014f 00       		.byte	0
 1171 0150 00       		.byte	0
 1172 0151 19       		.uleb128 0x19
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 48


 1173 0152 2E       		.uleb128 0x2e
 1174 0153 00       		.byte	0
 1175 0154 3F       		.uleb128 0x3f
 1176 0155 19       		.uleb128 0x19
 1177 0156 03       		.uleb128 0x3
 1178 0157 0E       		.uleb128 0xe
 1179 0158 3A       		.uleb128 0x3a
 1180 0159 0B       		.uleb128 0xb
 1181 015a 3B       		.uleb128 0x3b
 1182 015b 0B       		.uleb128 0xb
 1183 015c 27       		.uleb128 0x27
 1184 015d 19       		.uleb128 0x19
 1185 015e 49       		.uleb128 0x49
 1186 015f 13       		.uleb128 0x13
 1187 0160 3C       		.uleb128 0x3c
 1188 0161 19       		.uleb128 0x19
 1189 0162 00       		.byte	0
 1190 0163 00       		.byte	0
 1191 0164 00       		.byte	0
 1192              		.section	.debug_loc,"",%progbits
 1193              	.Ldebug_loc0:
 1194              	.LLST0:
 1195 0000 08000000 		.4byte	.LVL2
 1196 0004 86000000 		.4byte	.LVL10
 1197 0008 0100     		.2byte	0x1
 1198 000a 57       		.byte	0x57
 1199 000b 00000000 		.4byte	0
 1200 000f 00000000 		.4byte	0
 1201              	.LLST1:
 1202 0013 20000000 		.4byte	.LVL4
 1203 0017 7A000000 		.4byte	.LVL6
 1204 001b 0100     		.2byte	0x1
 1205 001d 55       		.byte	0x55
 1206 001e 00000000 		.4byte	0
 1207 0022 00000000 		.4byte	0
 1208              	.LLST2:
 1209 0026 02000000 		.4byte	.LVL1
 1210 002a 0C000000 		.4byte	.LVL3
 1211 002e 0200     		.2byte	0x2
 1212 0030 31       		.byte	0x31
 1213 0031 9F       		.byte	0x9f
 1214 0032 0C000000 		.4byte	.LVL3
 1215 0036 7C000000 		.4byte	.LVL7
 1216 003a 0100     		.2byte	0x1
 1217 003c 54       		.byte	0x54
 1218 003d 7E000000 		.4byte	.LVL8
 1219 0041 86000000 		.4byte	.LVL10
 1220 0045 0100     		.2byte	0x1
 1221 0047 54       		.byte	0x54
 1222 0048 00000000 		.4byte	0
 1223 004c 00000000 		.4byte	0
 1224              	.LLST3:
 1225 0050 14000000 		.4byte	.LVL15
 1226 0054 66000000 		.4byte	.LVL23
 1227 0058 0100     		.2byte	0x1
 1228 005a 56       		.byte	0x56
 1229 005b 66000000 		.4byte	.LVL23
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 49


 1230 005f 68000000 		.4byte	.LVL24
 1231 0063 0500     		.2byte	0x5
 1232 0065 76       		.byte	0x76
 1233 0066 00       		.sleb128 0
 1234 0067 31       		.byte	0x31
 1235 0068 25       		.byte	0x25
 1236 0069 9F       		.byte	0x9f
 1237 006a 70000000 		.4byte	.LVL27
 1238 006e 78000000 		.4byte	.LVL28
 1239 0072 0100     		.2byte	0x1
 1240 0074 56       		.byte	0x56
 1241 0075 00000000 		.4byte	0
 1242 0079 00000000 		.4byte	0
 1243              	.LLST4:
 1244 007d 0C000000 		.4byte	.LVL13
 1245 0081 78000000 		.4byte	.LVL28
 1246 0085 0100     		.2byte	0x1
 1247 0087 55       		.byte	0x55
 1248 0088 00000000 		.4byte	0
 1249 008c 00000000 		.4byte	0
 1250              	.LLST5:
 1251 0090 24000000 		.4byte	.LVL17
 1252 0094 2C000000 		.4byte	.LVL18
 1253 0098 0100     		.2byte	0x1
 1254 009a 53       		.byte	0x53
 1255 009b 00000000 		.4byte	0
 1256 009f 00000000 		.4byte	0
 1257              	.LLST6:
 1258 00a3 04000000 		.4byte	.LVL11
 1259 00a7 18000000 		.4byte	.LVL16
 1260 00ab 0200     		.2byte	0x2
 1261 00ad 31       		.byte	0x31
 1262 00ae 9F       		.byte	0x9f
 1263 00af 18000000 		.4byte	.LVL16
 1264 00b3 5E000000 		.4byte	.LVL20
 1265 00b7 0100     		.2byte	0x1
 1266 00b9 54       		.byte	0x54
 1267 00ba 60000000 		.4byte	.LVL21
 1268 00be 6A000000 		.4byte	.LVL25
 1269 00c2 0100     		.2byte	0x1
 1270 00c4 54       		.byte	0x54
 1271 00c5 6A000000 		.4byte	.LVL25
 1272 00c9 70000000 		.4byte	.LVL27
 1273 00cd 0200     		.2byte	0x2
 1274 00cf 38       		.byte	0x38
 1275 00d0 9F       		.byte	0x9f
 1276 00d1 70000000 		.4byte	.LVL27
 1277 00d5 78000000 		.4byte	.LVL28
 1278 00d9 0100     		.2byte	0x1
 1279 00db 54       		.byte	0x54
 1280 00dc 00000000 		.4byte	0
 1281 00e0 00000000 		.4byte	0
 1282              		.section	.debug_aranges,"",%progbits
 1283 0000 34000000 		.4byte	0x34
 1284 0004 0200     		.2byte	0x2
 1285 0006 00000000 		.4byte	.Ldebug_info0
 1286 000a 04       		.byte	0x4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 50


 1287 000b 00       		.byte	0
 1288 000c 0000     		.2byte	0
 1289 000e 0000     		.2byte	0
 1290 0010 00000000 		.4byte	.LFB0
 1291 0014 3C000000 		.4byte	.LFE0-.LFB0
 1292 0018 00000000 		.4byte	.LFB1
 1293 001c 08000000 		.4byte	.LFE1-.LFB1
 1294 0020 00000000 		.4byte	.LFB2
 1295 0024 A4000000 		.4byte	.LFE2-.LFB2
 1296 0028 00000000 		.4byte	.LFB3
 1297 002c 84000000 		.4byte	.LFE3-.LFB3
 1298 0030 00000000 		.4byte	0
 1299 0034 00000000 		.4byte	0
 1300              		.section	.debug_ranges,"",%progbits
 1301              	.Ldebug_ranges0:
 1302 0000 00000000 		.4byte	.LFB0
 1303 0004 3C000000 		.4byte	.LFE0
 1304 0008 00000000 		.4byte	.LFB1
 1305 000c 08000000 		.4byte	.LFE1
 1306 0010 00000000 		.4byte	.LFB2
 1307 0014 A4000000 		.4byte	.LFE2
 1308 0018 00000000 		.4byte	.LFB3
 1309 001c 84000000 		.4byte	.LFE3
 1310 0020 00000000 		.4byte	0
 1311 0024 00000000 		.4byte	0
 1312              		.section	.debug_line,"",%progbits
 1313              	.Ldebug_line0:
 1314 0000 46010000 		.section	.debug_str,"MS",%progbits,1
 1314      0200A500 
 1314      00000201 
 1314      FB0E0D00 
 1314      01010101 
 1315              	.LASF10:
 1316 0000 75696E74 		.ascii	"uint16\000"
 1316      313600
 1317              	.LASF55:
 1318 0007 55534246 		.ascii	"USBFS_1_EP17_DMA_Done_SR_Read\000"
 1318      535F315F 
 1318      45503137 
 1318      5F444D41 
 1318      5F446F6E 
 1319              	.LASF56:
 1320 0025 55534246 		.ascii	"USBFS_1_EP8_DMA_Done_SR_Read\000"
 1320      535F315F 
 1320      4550385F 
 1320      444D415F 
 1320      446F6E65 
 1321              	.LASF7:
 1322 0042 6C6F6E67 		.ascii	"long long unsigned int\000"
 1322      206C6F6E 
 1322      6720756E 
 1322      7369676E 
 1322      65642069 
 1323              	.LASF20:
 1324 0059 61646472 		.ascii	"addr\000"
 1324      00
 1325              	.LASF30:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 51


 1326 005e 65704366 		.ascii	"epCfg\000"
 1326      6700
 1327              	.LASF52:
 1328 0064 55534246 		.ascii	"USBFS_1_EP\000"
 1328      535F315F 
 1328      455000
 1329              	.LASF6:
 1330 006f 6C6F6E67 		.ascii	"long long int\000"
 1330      206C6F6E 
 1330      6720696E 
 1330      7400
 1331              	.LASF0:
 1332 007d 7369676E 		.ascii	"signed char\000"
 1332      65642063 
 1332      68617200 
 1333              	.LASF54:
 1334 0089 55534246 		.ascii	"USBFS_1_inBufFull\000"
 1334      535F315F 
 1334      696E4275 
 1334      6646756C 
 1334      6C00
 1335              	.LASF4:
 1336 009b 6C6F6E67 		.ascii	"long int\000"
 1336      20696E74 
 1336      00
 1337              	.LASF9:
 1338 00a4 75696E74 		.ascii	"uint8\000"
 1338      3800
 1339              	.LASF19:
 1340 00aa 6570546F 		.ascii	"epToggle\000"
 1340      67676C65 
 1340      00
 1341              	.LASF34:
 1342 00b3 72775761 		.ascii	"rwWa\000"
 1342      00
 1343              	.LASF12:
 1344 00b8 646F7562 		.ascii	"double\000"
 1344      6C6500
 1345              	.LASF32:
 1346 00bf 65705372 		.ascii	"epSr\000"
 1346      00
 1347              	.LASF48:
 1348 00c4 55534246 		.ascii	"USBFS_1_EP_DMA_DONE_ISR\000"
 1348      535F315F 
 1348      45505F44 
 1348      4D415F44 
 1348      4F4E455F 
 1349              	.LASF21:
 1350 00dc 65704D6F 		.ascii	"epMode\000"
 1350      646500
 1351              	.LASF33:
 1352 00e3 72657365 		.ascii	"reserved\000"
 1352      72766564 
 1352      00
 1353              	.LASF53:
 1354 00ec 55534246 		.ascii	"USBFS_1_inLength\000"
 1354      535F315F 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 52


 1354      696E4C65 
 1354      6E677468 
 1354      00
 1355              	.LASF8:
 1356 00fd 756E7369 		.ascii	"unsigned int\000"
 1356      676E6564 
 1356      20696E74 
 1356      00
 1357              	.LASF39:
 1358 010a 55534246 		.ascii	"USBFS_1_arb_ep_struct\000"
 1358      535F315F 
 1358      6172625F 
 1358      65705F73 
 1358      74727563 
 1359              	.LASF5:
 1360 0120 6C6F6E67 		.ascii	"long unsigned int\000"
 1360      20756E73 
 1360      69676E65 
 1360      6420696E 
 1360      7400
 1361              	.LASF41:
 1362 0132 55534246 		.ascii	"USBFS_1_sie_eps_struct\000"
 1362      535F315F 
 1362      7369655F 
 1362      6570735F 
 1362      73747275 
 1363              	.LASF43:
 1364 0149 55534246 		.ascii	"USBFS_1_arb_eps_struct\000"
 1364      535F315F 
 1364      6172625F 
 1364      6570735F 
 1364      73747275 
 1365              	.LASF50:
 1366 0160 696E7431 		.ascii	"int17Status\000"
 1366      37537461 
 1366      74757300 
 1367              	.LASF3:
 1368 016c 73686F72 		.ascii	"short unsigned int\000"
 1368      7420756E 
 1368      7369676E 
 1368      65642069 
 1368      6E7400
 1369              	.LASF25:
 1370 017f 545F5553 		.ascii	"T_USBFS_1_EP_CTL_BLOCK\000"
 1370      4246535F 
 1370      315F4550 
 1370      5F43544C 
 1370      5F424C4F 
 1371              	.LASF44:
 1372 0196 55534246 		.ascii	"USBFS_1_BUS_RESET_ISR\000"
 1372      535F315F 
 1372      4255535F 
 1372      52455345 
 1372      545F4953 
 1373              	.LASF42:
 1374 01ac 61726245 		.ascii	"arbEp\000"
 1374      7000
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 53


 1375              	.LASF24:
 1376 01b2 696E7465 		.ascii	"interface\000"
 1376      72666163 
 1376      6500
 1377              	.LASF18:
 1378 01bc 68774570 		.ascii	"hwEpState\000"
 1378      53746174 
 1378      6500
 1379              	.LASF15:
 1380 01c6 73697A65 		.ascii	"sizetype\000"
 1380      74797065 
 1380      00
 1381              	.LASF40:
 1382 01cf 73696545 		.ascii	"sieEp\000"
 1382      7000
 1383              	.LASF46:
 1384 01d5 61726249 		.ascii	"arbIntrStatus\000"
 1384      6E747253 
 1384      74617475 
 1384      7300
 1385              	.LASF16:
 1386 01e3 61747472 		.ascii	"attrib\000"
 1386      696200
 1387              	.LASF37:
 1388 01ea 72775261 		.ascii	"rwRaMsb\000"
 1388      4D736200 
 1389              	.LASF26:
 1390 01f2 6570436E 		.ascii	"epCnt0\000"
 1390      743000
 1391              	.LASF27:
 1392 01f9 6570436E 		.ascii	"epCnt1\000"
 1392      743100
 1393              	.LASF29:
 1394 0200 55534246 		.ascii	"USBFS_1_sie_ep_struct\000"
 1394      535F315F 
 1394      7369655F 
 1394      65705F73 
 1394      74727563 
 1395              	.LASF28:
 1396 0216 65704372 		.ascii	"epCr0\000"
 1396      3000
 1397              	.LASF11:
 1398 021c 666C6F61 		.ascii	"float\000"
 1398      7400
 1399              	.LASF17:
 1400 0222 61706945 		.ascii	"apiEpState\000"
 1400      70537461 
 1400      746500
 1401              	.LASF49:
 1402 022d 696E7438 		.ascii	"int8Status\000"
 1402      53746174 
 1402      757300
 1403              	.LASF14:
 1404 0238 72656738 		.ascii	"reg8\000"
 1404      00
 1405              	.LASF1:
 1406 023d 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 54


 1406      676E6564 
 1406      20636861 
 1406      7200
 1407              	.LASF2:
 1408 024b 73686F72 		.ascii	"short int\000"
 1408      7420696E 
 1408      7400
 1409              	.LASF45:
 1410 0255 55534246 		.ascii	"USBFS_1_ARB_ISR\000"
 1410      535F315F 
 1410      4152425F 
 1410      49535200 
 1411              	.LASF36:
 1412 0265 72775261 		.ascii	"rwRa\000"
 1412      00
 1413              	.LASF35:
 1414 026a 72775761 		.ascii	"rwWaMsb\000"
 1414      4D736200 
 1415              	.LASF60:
 1416 0272 55534246 		.ascii	"USBFS_1_EP_2_ISR\000"
 1416      535F315F 
 1416      45505F32 
 1416      5F495352 
 1416      00
 1417              	.LASF13:
 1418 0283 63686172 		.ascii	"char\000"
 1418      00
 1419              	.LASF23:
 1420 0288 62756666 		.ascii	"bufferSize\000"
 1420      65725369 
 1420      7A6500
 1421              	.LASF47:
 1422 0293 65705374 		.ascii	"epStatus\000"
 1422      61747573 
 1422      00
 1423              	.LASF62:
 1424 029c 55534246 		.ascii	"USBFS_1_LoadNextInEP\000"
 1424      535F315F 
 1424      4C6F6164 
 1424      4E657874 
 1424      496E4550 
 1425              	.LASF59:
 1426 02b1 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\PSo"
 1426      73657273 
 1426      5C4C756B 
 1426      61732043 
 1426      72657574 
 1427 02df 43354C50 		.ascii	"C5LP-freeDSP-USB-Port\\PSoC_freeDSP_USB_Port\\Desig"
 1427      2D667265 
 1427      65445350 
 1427      2D555342 
 1427      2D506F72 
 1428 0310 6E30312E 		.ascii	"n01.cydsn\000"
 1428      63796473 
 1428      6E00
 1429              	.LASF22:
 1430 031a 62756666 		.ascii	"buffOffset\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cccWiuOE.s 			page 55


 1430      4F666673 
 1430      657400
 1431              	.LASF51:
 1432 0325 65705F73 		.ascii	"ep_status\000"
 1432      74617475 
 1432      7300
 1433              	.LASF58:
 1434 032f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS_1_episr.c\000"
 1434      6E657261 
 1434      7465645F 
 1434      536F7572 
 1434      63655C50 
 1435              	.LASF57:
 1436 0358 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1436      4320342E 
 1436      392E3320 
 1436      32303135 
 1436      30333033 
 1437 038b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1437      20726576 
 1437      6973696F 
 1437      6E203232 
 1437      31323230 
 1438 03be 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1438      66756E63 
 1438      74696F6E 
 1438      2D736563 
 1438      74696F6E 
 1439              	.LASF38:
 1440 03e6 72774472 		.ascii	"rwDr\000"
 1440      00
 1441              	.LASF31:
 1442 03eb 6570496E 		.ascii	"epIntEn\000"
 1442      74456E00 
 1443              	.LASF61:
 1444 03f3 55534246 		.ascii	"USBFS_1_ReInitComponent\000"
 1444      535F315F 
 1444      5265496E 
 1444      6974436F 
 1444      6D706F6E 
 1445              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

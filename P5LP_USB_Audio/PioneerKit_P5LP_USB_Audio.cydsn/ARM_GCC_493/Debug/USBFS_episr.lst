ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_EP_1_ISR, %function
  24              	USBFS_EP_1_ISR:
  25              	.LFB56:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS_episr.c"
   1:.\Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/USBFS_episr.c **** * File Name: USBFS_episr.c
   3:.\Generated_Source\PSoC5/USBFS_episr.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/USBFS_episr.c **** *
   5:.\Generated_Source\PSoC5/USBFS_episr.c **** * Description:
   6:.\Generated_Source\PSoC5/USBFS_episr.c **** *  Data endpoint Interrupt Service Routines
   7:.\Generated_Source\PSoC5/USBFS_episr.c **** *
   8:.\Generated_Source\PSoC5/USBFS_episr.c **** * Note:
   9:.\Generated_Source\PSoC5/USBFS_episr.c **** *
  10:.\Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  17:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS.h"
  18:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  19:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  20:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  21:.\Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  22:.\Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  23:.\Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  24:.\Generated_Source\PSoC5/USBFS_episr.c **** #include <Configuration.h>
  25:.\Generated_Source\PSoC5/USBFS_episr.c **** #include <Application.h>
  26:.\Generated_Source\PSoC5/USBFS_episr.c **** #include <AudioControl.h>
  27:.\Generated_Source\PSoC5/USBFS_episr.c **** #include <device.h>
  28:.\Generated_Source\PSoC5/USBFS_episr.c **** #include <USBInterface.h>
  29:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  30:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
  31:.\Generated_Source\PSoC5/USBFS_episr.c **** extern CYBIT inPlaying;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 2


  32:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif
  33:.\Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  34:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  35:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  36:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  37:.\Generated_Source\PSoC5/USBFS_episr.c **** * External function references
  38:.\Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  39:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  40:.\Generated_Source\PSoC5/USBFS_episr.c **** void USBFS_InitComponent(uint8 device, uint8 mode) ;
  41:.\Generated_Source\PSoC5/USBFS_episr.c **** void USBFS_ReInitComponent(void) ;
  42:.\Generated_Source\PSoC5/USBFS_episr.c **** #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u)
  43:.\Generated_Source\PSoC5/USBFS_episr.c ****     void USBFS_MIDI_OUT_EP_Service(void) ;
  44:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
  45:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  46:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  47:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  48:.\Generated_Source\PSoC5/USBFS_episr.c **** * External references
  49:.\Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  50:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  51:.\Generated_Source\PSoC5/USBFS_episr.c **** extern volatile T_USBFS_EP_CTL_BLOCK USBFS_EP[];
  52:.\Generated_Source\PSoC5/USBFS_episr.c **** extern volatile uint8 USBFS_device;
  53:.\Generated_Source\PSoC5/USBFS_episr.c **** #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u)
  54:.\Generated_Source\PSoC5/USBFS_episr.c ****     extern volatile uint8 USBFS_midi_out_ep;
  55:.\Generated_Source\PSoC5/USBFS_episr.c ****     extern volatile uint8 USBFS_midi_in_ep;
  56:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if USBFS_MIDI_IN_BUFF_SIZE >= 256
  57:.\Generated_Source\PSoC5/USBFS_episr.c ****         extern volatile uint16 USBFS_midiInPointer;     /* Input endpoint buffer pointer */
  58:.\Generated_Source\PSoC5/USBFS_episr.c ****     #else
  59:.\Generated_Source\PSoC5/USBFS_episr.c ****         extern volatile uint8 USBFS_midiInPointer;      /* Input endpoint buffer pointer */
  60:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* End USBFS_MIDI_IN_BUFF_SIZE >=256 */    
  61:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
  62:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  63:.\Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP1_ISR_REMOVE == 0u)
  64:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  65:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  66:.\Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
  67:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
  68:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************
  69:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  70:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
  71:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  72:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  73:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
  74:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
  75:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  76:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
  77:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
  78:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  79:.\Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  80:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  81:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  27              		.loc 1 81 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 3


  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  82:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
  83:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
  84:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
  85:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
  86:.\Generated_Source\PSoC5/USBFS_episr.c ****     
  87:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  88:.\Generated_Source\PSoC5/USBFS_episr.c **** 		#ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
  89:.\Generated_Source\PSoC5/USBFS_episr.c **** 		ProcessAudioOut();
  37              		.loc 1 89 0
  38 0004 FFF7FEFF 		bl	ProcessAudioOut
  90:.\Generated_Source\PSoC5/USBFS_episr.c **** 		#endif
  91:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  92:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  93:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
  94:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
  95:.\Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
  96:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
  97:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
  98:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  99:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP1_CR0_PTR); /* Must read the mode reg */
  39              		.loc 1 99 0
  40 0008 0E4B     		ldr	r3, .L3
  41 000a 1B78     		ldrb	r3, [r3]
 100:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 101:.\Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP1].attrib & USBFS_EP_TYPE_MASK) !=
  42              		.loc 1 101 0
  43 000c 0E4B     		ldr	r3, .L3+4
  44 000e 1B7B     		ldrb	r3, [r3, #12]
  45 0010 DBB2     		uxtb	r3, r3
  46 0012 03F00303 		and	r3, r3, #3
  47 0016 012B     		cmp	r3, #1
  48 0018 08D0     		beq	.L2
 102:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 103:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 104:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  49              		.loc 1 104 0
  50 001a 0B4B     		ldr	r3, .L3+4
  51 001c DB7B     		ldrb	r3, [r3, #15]
  52 001e DBB2     		uxtb	r3, r3
  53 0020 83F07F03 		eor	r3, r3, #127
  54 0024 DB43     		mvns	r3, r3
  55 0026 DAB2     		uxtb	r2, r3
  56 0028 074B     		ldr	r3, .L3+4
  57 002a DA73     		strb	r2, [r3, #15]
  58              	.L2:
 105:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  59              		.loc 1 106 0
  60 002c 064B     		ldr	r3, .L3+4
  61 002e 0122     		movs	r2, #1
  62 0030 5A73     		strb	r2, [r3, #13]
 107:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
  63              		.loc 1 107 0
  64 0032 064A     		ldr	r2, .L3+8
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 4


  65 0034 054B     		ldr	r3, .L3+8
  66 0036 1B78     		ldrb	r3, [r3]
  67 0038 DBB2     		uxtb	r3, r3
  68 003a 23F00103 		bic	r3, r3, #1
  69 003e DBB2     		uxtb	r3, r3
  70 0040 1370     		strb	r3, [r2]
 108:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                             & ~USBFS_SIE_EP_INT_EP1
 109:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 110:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 111:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) 
 112:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP1)
 113:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 114:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 115:.\Generated_Source\PSoC5/USBFS_episr.c ****             }   
 116:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
 117:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 118:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
 119:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 120:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 121:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 122:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 123:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 124:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 125:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 126:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
  71              		.loc 1 126 0
  72 0042 80BD     		pop	{r7, pc}
  73              	.L4:
  74              		.align	2
  75              	.L3:
  76 0044 0E600040 		.word	1073766414
  77 0048 00000000 		.word	USBFS_EP
  78 004c 0B600040 		.word	1073766411
  79              		.cfi_endproc
  80              	.LFE56:
  81              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  82              		.section	.text.USBFS_EP_2_ISR,"ax",%progbits
  83              		.align	2
  84              		.global	USBFS_EP_2_ISR
  85              		.thumb
  86              		.thumb_func
  87              		.type	USBFS_EP_2_ISR, %function
  88              	USBFS_EP_2_ISR:
  89              	.LFB57:
 127:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 128:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif   /* End USBFS_EP1_ISR_REMOVE */
 129:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 130:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 131:.\Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP2_ISR_REMOVE == 0u)
 132:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 133:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 134:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 135:.\Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 136:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 137:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 138:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine
 139:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 5


 140:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 141:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 142:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 143:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 144:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 145:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 146:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 147:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 148:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  90              		.loc 1 148 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0000 80B5     		push	{r7, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 149:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 150:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 151:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 152:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 153:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 154:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 155:.\Generated_Source\PSoC5/USBFS_episr.c ****         #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 156:.\Generated_Source\PSoC5/USBFS_episr.c **** 		ProcessAudioIn();
 100              		.loc 1 156 0
 101 0004 FFF7FEFF 		bl	ProcessAudioIn
 157:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif
 158:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 159:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 160:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 161:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 162:.\Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 163:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 164:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 165:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 166:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP2_CR0_PTR); /* Must read the mode reg */
 102              		.loc 1 166 0
 103 0008 0E4B     		ldr	r3, .L7
 104 000a 1B78     		ldrb	r3, [r3]
 167:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 168:.\Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP2].attrib & USBFS_EP_TYPE_MASK) !=
 105              		.loc 1 168 0
 106 000c 0E4B     		ldr	r3, .L7+4
 107 000e 1B7E     		ldrb	r3, [r3, #24]
 108 0010 DBB2     		uxtb	r3, r3
 109 0012 03F00303 		and	r3, r3, #3
 110 0016 012B     		cmp	r3, #1
 111 0018 08D0     		beq	.L6
 169:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 170:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 171:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 112              		.loc 1 171 0
 113 001a 0B4B     		ldr	r3, .L7+4
 114 001c DB7E     		ldrb	r3, [r3, #27]
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 6


 115 001e DBB2     		uxtb	r3, r3
 116 0020 83F07F03 		eor	r3, r3, #127
 117 0024 DB43     		mvns	r3, r3
 118 0026 DAB2     		uxtb	r2, r3
 119 0028 074B     		ldr	r3, .L7+4
 120 002a DA76     		strb	r2, [r3, #27]
 121              	.L6:
 172:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 173:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
 122              		.loc 1 173 0
 123 002c 064B     		ldr	r3, .L7+4
 124 002e 0122     		movs	r2, #1
 125 0030 5A76     		strb	r2, [r3, #25]
 174:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 126              		.loc 1 174 0
 127 0032 064A     		ldr	r2, .L7+8
 128 0034 054B     		ldr	r3, .L7+8
 129 0036 1B78     		ldrb	r3, [r3]
 130 0038 DBB2     		uxtb	r3, r3
 131 003a 23F00203 		bic	r3, r3, #2
 132 003e DBB2     		uxtb	r3, r3
 133 0040 1370     		strb	r3, [r2]
 175:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & ~USBFS_SIE_EP_INT_EP2_MAS
 176:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 177:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 178:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO)
 179:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP2)
 180:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 181:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 182:.\Generated_Source\PSoC5/USBFS_episr.c ****             }   
 183:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
 184:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 185:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 186:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 187:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 188:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 189:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 190:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 191:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 192:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 193:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 134              		.loc 1 193 0
 135 0042 80BD     		pop	{r7, pc}
 136              	.L8:
 137              		.align	2
 138              	.L7:
 139 0044 1E600040 		.word	1073766430
 140 0048 00000000 		.word	USBFS_EP
 141 004c 0B600040 		.word	1073766411
 142              		.cfi_endproc
 143              	.LFE57:
 144              		.size	USBFS_EP_2_ISR, .-USBFS_EP_2_ISR
 145              		.section	.text.USBFS_EP_4_ISR,"ax",%progbits
 146              		.align	2
 147              		.global	USBFS_EP_4_ISR
 148              		.thumb
 149              		.thumb_func
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 7


 150              		.type	USBFS_EP_4_ISR, %function
 151              	USBFS_EP_4_ISR:
 152              	.LFB58:
 194:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 195:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif   /* End USBFS_EP2_ISR_REMOVE */
 196:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 197:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 198:.\Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP3_ISR_REMOVE == 0u)
 199:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 200:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 201:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 202:.\Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 203:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 204:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 205:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine
 206:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 207:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 208:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 209:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 210:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 211:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 212:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 213:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 214:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 215:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 216:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 217:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 218:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 219:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 220:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 221:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 222:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 223:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 224:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 225:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 226:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 227:.\Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 228:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 229:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 230:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 231:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP3_CR0_PTR); /* Must read the mode reg */
 232:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 233:.\Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP3].attrib & USBFS_EP_TYPE_MASK) !=
 234:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 235:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 236:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 237:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 238:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 239:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 240:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & ~USBFS_SIE_EP_INT_EP3_MAS
 241:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 242:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 243:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) 
 244:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP3)
 245:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 246:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 247:.\Generated_Source\PSoC5/USBFS_episr.c ****             }   
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 8


 248:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
 249:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 250:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 251:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 252:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 253:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 254:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 255:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 256:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 257:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 258:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 259:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 260:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif   /* End USBFS_EP3_ISR_REMOVE */
 261:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 262:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 263:.\Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP4_ISR_REMOVE == 0u)
 264:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 265:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 266:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 267:.\Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 268:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 269:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 270:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine
 271:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 272:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 273:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 274:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 275:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 276:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 277:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 278:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 279:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 280:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 153              		.loc 1 280 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 00AF     		add	r7, sp, #0
 162              		.cfi_def_cfa_register 7
 281:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 282:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 283:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 284:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 285:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 286:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 287:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 288:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 289:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 290:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 291:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 292:.\Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 293:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 294:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 9


 295:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 296:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP4_CR0_PTR); /* Must read the mode reg */
 163              		.loc 1 296 0
 164 0004 124B     		ldr	r3, .L11
 165 0006 1B78     		ldrb	r3, [r3]
 297:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 298:.\Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP4].attrib & USBFS_EP_TYPE_MASK) !=
 166              		.loc 1 298 0
 167 0008 124B     		ldr	r3, .L11+4
 168 000a 93F83030 		ldrb	r3, [r3, #48]
 169 000e DBB2     		uxtb	r3, r3
 170 0010 03F00303 		and	r3, r3, #3
 171 0014 012B     		cmp	r3, #1
 172 0016 0AD0     		beq	.L10
 299:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 300:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 301:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 173              		.loc 1 301 0
 174 0018 0E4B     		ldr	r3, .L11+4
 175 001a 93F83330 		ldrb	r3, [r3, #51]
 176 001e DBB2     		uxtb	r3, r3
 177 0020 83F07F03 		eor	r3, r3, #127
 178 0024 DB43     		mvns	r3, r3
 179 0026 DAB2     		uxtb	r2, r3
 180 0028 0A4B     		ldr	r3, .L11+4
 181 002a 83F83320 		strb	r2, [r3, #51]
 182              	.L10:
 302:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 303:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 183              		.loc 1 303 0
 184 002e 094B     		ldr	r3, .L11+4
 185 0030 0122     		movs	r2, #1
 186 0032 83F83120 		strb	r2, [r3, #49]
 304:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 187              		.loc 1 304 0
 188 0036 084A     		ldr	r2, .L11+8
 189 0038 074B     		ldr	r3, .L11+8
 190 003a 1B78     		ldrb	r3, [r3]
 191 003c DBB2     		uxtb	r3, r3
 192 003e 23F00803 		bic	r3, r3, #8
 193 0042 DBB2     		uxtb	r3, r3
 194 0044 1370     		strb	r3, [r2]
 305:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & ~USBFS_SIE_EP_INT_EP4_MAS
 306:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 307:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 308:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) 
 309:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 310:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 311:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 312:.\Generated_Source\PSoC5/USBFS_episr.c ****             }   
 313:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
 314:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 315:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 316:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 317:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 318:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 319:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 10


 320:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 321:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 322:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 323:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 195              		.loc 1 323 0
 196 0046 BD46     		mov	sp, r7
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 0048 5DF8047B 		ldr	r7, [sp], #4
 200              		.cfi_restore 7
 201              		.cfi_def_cfa_offset 0
 202 004c 7047     		bx	lr
 203              	.L12:
 204 004e 00BF     		.align	2
 205              	.L11:
 206 0050 3E600040 		.word	1073766462
 207 0054 00000000 		.word	USBFS_EP
 208 0058 0B600040 		.word	1073766411
 209              		.cfi_endproc
 210              	.LFE58:
 211              		.size	USBFS_EP_4_ISR, .-USBFS_EP_4_ISR
 212              		.section	.text.USBFS_EP_6_ISR,"ax",%progbits
 213              		.align	2
 214              		.global	USBFS_EP_6_ISR
 215              		.thumb
 216              		.thumb_func
 217              		.type	USBFS_EP_6_ISR, %function
 218              	USBFS_EP_6_ISR:
 219              	.LFB59:
 324:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 325:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif   /* End USBFS_EP4_ISR_REMOVE */
 326:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 327:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 328:.\Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP5_ISR_REMOVE == 0u)
 329:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 330:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 331:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 332:.\Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 333:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 334:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 335:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 336:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 337:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 338:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 339:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 340:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 341:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 342:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 343:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 344:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 345:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 346:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 347:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 348:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 349:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 350:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 351:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 11


 352:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 353:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 354:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 355:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 356:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 357:.\Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 358:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 359:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 360:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 361:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP5_CR0_PTR); /* Must read the mode reg */
 362:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 363:.\Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP5].attrib & USBFS_EP_TYPE_MASK) !=
 364:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 365:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 366:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 367:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 368:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 369:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 370:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & ~USBFS_SIE_EP_INT_EP5_MAS
 371:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 372:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 373:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) 
 374:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP5)
 375:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 376:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 377:.\Generated_Source\PSoC5/USBFS_episr.c ****             }   
 378:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
 379:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 380:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 381:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 382:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 383:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 384:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 385:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 386:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 387:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 388:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 389:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif   /* End USBFS_EP5_ISR_REMOVE */
 390:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 391:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 392:.\Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP6_ISR_REMOVE == 0u)
 393:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 394:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 395:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 396:.\Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 397:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 398:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 399:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine
 400:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 401:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 402:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 403:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 404:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 405:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 406:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 407:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 408:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 12


 409:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 220              		.loc 1 409 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225 0000 80B4     		push	{r7}
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 7, -4
 228 0002 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
 410:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 411:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 412:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 413:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 414:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 415:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 416:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 417:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 418:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 419:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 420:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 421:.\Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 422:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 423:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 424:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 425:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP6_CR0_PTR); /* Must read the mode reg */
 230              		.loc 1 425 0
 231 0004 124B     		ldr	r3, .L15
 232 0006 1B78     		ldrb	r3, [r3]
 426:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 427:.\Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP6].attrib & USBFS_EP_TYPE_MASK) !=
 233              		.loc 1 427 0
 234 0008 124B     		ldr	r3, .L15+4
 235 000a 93F84830 		ldrb	r3, [r3, #72]
 236 000e DBB2     		uxtb	r3, r3
 237 0010 03F00303 		and	r3, r3, #3
 238 0014 012B     		cmp	r3, #1
 239 0016 0AD0     		beq	.L14
 428:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 429:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 430:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 240              		.loc 1 430 0
 241 0018 0E4B     		ldr	r3, .L15+4
 242 001a 93F84B30 		ldrb	r3, [r3, #75]
 243 001e DBB2     		uxtb	r3, r3
 244 0020 83F07F03 		eor	r3, r3, #127
 245 0024 DB43     		mvns	r3, r3
 246 0026 DAB2     		uxtb	r2, r3
 247 0028 0A4B     		ldr	r3, .L15+4
 248 002a 83F84B20 		strb	r2, [r3, #75]
 249              	.L14:
 431:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 250              		.loc 1 432 0
 251 002e 094B     		ldr	r3, .L15+4
 252 0030 0122     		movs	r2, #1
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 13


 253 0032 83F84920 		strb	r2, [r3, #73]
 433:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 254              		.loc 1 433 0
 255 0036 084A     		ldr	r2, .L15+8
 256 0038 074B     		ldr	r3, .L15+8
 257 003a 1B78     		ldrb	r3, [r3]
 258 003c DBB2     		uxtb	r3, r3
 259 003e 23F02003 		bic	r3, r3, #32
 260 0042 DBB2     		uxtb	r3, r3
 261 0044 1370     		strb	r3, [r2]
 434:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & ~USBFS_SIE_EP_INT_EP6_MAS
 435:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 436:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 437:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) 
 438:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP6)
 439:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 440:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 441:.\Generated_Source\PSoC5/USBFS_episr.c ****             }   
 442:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
 443:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 444:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 445:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 446:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 447:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 448:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 449:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 450:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 451:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 452:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 262              		.loc 1 452 0
 263 0046 BD46     		mov	sp, r7
 264              		.cfi_def_cfa_register 13
 265              		@ sp needed
 266 0048 5DF8047B 		ldr	r7, [sp], #4
 267              		.cfi_restore 7
 268              		.cfi_def_cfa_offset 0
 269 004c 7047     		bx	lr
 270              	.L16:
 271 004e 00BF     		.align	2
 272              	.L15:
 273 0050 5E600040 		.word	1073766494
 274 0054 00000000 		.word	USBFS_EP
 275 0058 0B600040 		.word	1073766411
 276              		.cfi_endproc
 277              	.LFE59:
 278              		.size	USBFS_EP_6_ISR, .-USBFS_EP_6_ISR
 279              		.section	.text.USBFS_SOF_ISR,"ax",%progbits
 280              		.align	2
 281              		.global	USBFS_SOF_ISR
 282              		.thumb
 283              		.thumb_func
 284              		.type	USBFS_SOF_ISR, %function
 285              	USBFS_SOF_ISR:
 286              	.LFB60:
 453:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 454:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif   /* End USBFS_EP6_ISR_REMOVE */
 455:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 14


 456:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 457:.\Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP7_ISR_REMOVE == 0u)
 458:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 459:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 460:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 461:.\Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 462:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 463:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 464:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine
 465:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 466:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 467:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 468:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 469:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 470:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 471:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 472:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 473:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 474:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 475:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 476:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 477:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 478:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 479:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 480:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 481:.\Generated_Source\PSoC5/USBFS_episr.c **** 		
 482:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 483:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 484:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 485:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 486:.\Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 487:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 488:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 489:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 490:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP7_CR0_PTR); /* Must read the mode reg */
 491:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 492:.\Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP7].attrib & USBFS_EP_TYPE_MASK) !=
 493:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 494:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 495:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 496:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 497:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 498:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 499:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & ~USBFS_SIE_EP_INT_EP7_MAS
 500:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 501:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 502:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) 
 503:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 504:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 505:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 506:.\Generated_Source\PSoC5/USBFS_episr.c ****             }   
 507:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
 508:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 509:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 510:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 511:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 512:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 15


 513:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 514:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 515:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 516:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 517:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 518:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 519:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif   /* End USBFS_EP7_ISR_REMOVE */
 520:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 521:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 522:.\Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP8_ISR_REMOVE == 0u)
 523:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 524:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 525:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 526:.\Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 527:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 528:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 529:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 530:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 531:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 532:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 533:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 534:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 535:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 536:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 537:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 538:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 539:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 540:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 541:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 542:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 543:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 544:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 545:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 546:.\Generated_Source\PSoC5/USBFS_episr.c ****         #ifdef MIDI_ENABLED
 547:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 548:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 549:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 550:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 551:.\Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 552:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 553:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 554:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 555:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP8_CR0_PTR); /* Must read the mode reg */
 556:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 557:.\Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP8].attrib & USBFS_EP_TYPE_MASK) !=
 558:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 559:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 560:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 561:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 562:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 563:.\Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 564:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & ~USBFS_SIE_EP_INT_EP8_MAS
 565:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 566:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 567:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) 
 568:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP8)
 569:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 16


 570:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 571:.\Generated_Source\PSoC5/USBFS_episr.c ****             }   
 572:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
 573:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 574:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 575:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif
 576:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 577:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 578:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u) && \
 579:.\Generated_Source\PSoC5/USBFS_episr.c ****             (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (CY_PSOC3)
 580:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 581:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & ENABLE_MIDI_STREAMING */
 582:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 583:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 584:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif   /* End USBFS_EP8_ISR_REMOVE */
 585:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 586:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 587:.\Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 588:.\Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_SOF_ISR
 589:.\Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
 590:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 591:.\Generated_Source\PSoC5/USBFS_episr.c **** * Summary:
 592:.\Generated_Source\PSoC5/USBFS_episr.c **** *  Start of Frame Interrupt Service Routine
 593:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 594:.\Generated_Source\PSoC5/USBFS_episr.c **** * Parameters:
 595:.\Generated_Source\PSoC5/USBFS_episr.c **** *  None.
 596:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 597:.\Generated_Source\PSoC5/USBFS_episr.c **** * Return:
 598:.\Generated_Source\PSoC5/USBFS_episr.c **** *  None.
 599:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 600:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 601:.\Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_SOF_ISR)
 602:.\Generated_Source\PSoC5/USBFS_episr.c **** {
 287              		.loc 1 602 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292 0000 80B4     		push	{r7}
 293              		.cfi_def_cfa_offset 4
 294              		.cfi_offset 7, -4
 295 0002 00AF     		add	r7, sp, #0
 296              		.cfi_def_cfa_register 7
 603:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START SOF_USER_CODE` Place your code here */
 604:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 605:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 606:.\Generated_Source\PSoC5/USBFS_episr.c **** }
 297              		.loc 1 606 0
 298 0004 BD46     		mov	sp, r7
 299              		.cfi_def_cfa_register 13
 300              		@ sp needed
 301 0006 5DF8047B 		ldr	r7, [sp], #4
 302              		.cfi_restore 7
 303              		.cfi_def_cfa_offset 0
 304 000a 7047     		bx	lr
 305              		.cfi_endproc
 306              	.LFE60:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 17


 307              		.size	USBFS_SOF_ISR, .-USBFS_SOF_ISR
 308              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 309              		.align	2
 310              		.global	USBFS_BUS_RESET_ISR
 311              		.thumb
 312              		.thumb_func
 313              		.type	USBFS_BUS_RESET_ISR, %function
 314              	USBFS_BUS_RESET_ISR:
 315              	.LFB61:
 607:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 608:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 609:.\Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 610:.\Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 611:.\Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
 612:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 613:.\Generated_Source\PSoC5/USBFS_episr.c **** * Summary:
 614:.\Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 615:.\Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 616:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 617:.\Generated_Source\PSoC5/USBFS_episr.c **** * Parameters:
 618:.\Generated_Source\PSoC5/USBFS_episr.c **** *  None.
 619:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 620:.\Generated_Source\PSoC5/USBFS_episr.c **** * Return:
 621:.\Generated_Source\PSoC5/USBFS_episr.c **** *  None.
 622:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 623:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 624:.\Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 625:.\Generated_Source\PSoC5/USBFS_episr.c **** {
 316              		.loc 1 625 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320 0000 80B5     		push	{r7, lr}
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 7, -8
 323              		.cfi_offset 14, -4
 324 0002 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 626:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 627:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 628:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 629:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 630:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 326              		.loc 1 630 0
 327 0004 FFF7FEFF 		bl	USBFS_ReInitComponent
 631:.\Generated_Source\PSoC5/USBFS_episr.c **** }
 328              		.loc 1 631 0
 329 0008 80BD     		pop	{r7, pc}
 330              		.cfi_endproc
 331              	.LFE61:
 332              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 333 000a 00BF     		.section	.text.USBFS_ARB_ISR,"ax",%progbits
 334              		.align	2
 335              		.global	USBFS_ARB_ISR
 336              		.thumb
 337              		.thumb_func
 338              		.type	USBFS_ARB_ISR, %function
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 18


 339              	USBFS_ARB_ISR:
 340              	.LFB62:
 632:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 633:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 634:.\Generated_Source\PSoC5/USBFS_episr.c **** #if((USBFS_EP_MM != USBFS__EP_MANUAL) && (USBFS_ARB_ISR_REMOVE == 0u))
 635:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 636:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 637:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 638:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_ARB_ISR
 639:.\Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 640:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 641:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 642:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Arbiter Interrupt Service Routine
 643:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 644:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 645:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 646:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 647:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 648:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 649:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 650:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Side effect:
 651:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Search for EP8 int_status will be much slower than search for EP1 int_status.
 652:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 653:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 654:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_ARB_ISR)
 655:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 341              		.loc 1 655 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 8
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0000 80B4     		push	{r7}
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 0002 83B0     		sub	sp, sp, #12
 350              		.cfi_def_cfa_offset 16
 351 0004 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
 656:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 int_status;
 657:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ep_status;
 658:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ep = USBFS_EP1;
 353              		.loc 1 658 0
 354 0006 0123     		movs	r3, #1
 355 0008 BB71     		strb	r3, [r7, #6]
 659:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ptr = 0u;
 356              		.loc 1 659 0
 357 000a 0023     		movs	r3, #0
 358 000c 7B71     		strb	r3, [r7, #5]
 660:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 661:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 662:.\Generated_Source\PSoC5/USBFS_episr.c **** 		int_status = USBFS_ARB_INT_SR_REG;                   /* read Arbiter Status Register */
 359              		.loc 1 662 0
 360 000e 2B4B     		ldr	r3, .L25
 361 0010 1B78     		ldrb	r3, [r3]
 362 0012 FB71     		strb	r3, [r7, #7]
 663:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_INT_SR_REG = int_status;                   /* Clear Serviced Interrupts */
 363              		.loc 1 663 0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 19


 364 0014 294A     		ldr	r2, .L25
 365 0016 FB79     		ldrb	r3, [r7, #7]
 366 0018 1370     		strb	r3, [r2]
 664:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 665:.\Generated_Source\PSoC5/USBFS_episr.c ****         while(int_status != 0u)
 367              		.loc 1 665 0
 368 001a 46E0     		b	.L20
 369              	.L23:
 666:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 667:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(int_status & 1u)  /* If EpX interrupt present */
 370              		.loc 1 667 0
 371 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 372 001e 03F00103 		and	r3, r3, #1
 373 0022 002B     		cmp	r3, #0
 374 0024 38D0     		beq	.L21
 668:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 669:.\Generated_Source\PSoC5/USBFS_episr.c ****                 ep_status  = USBFS_ARB_EP1_SR_PTR[ptr];       /* read Endpoint Status Register */
 375              		.loc 1 669 0
 376 0026 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 377 0028 254B     		ldr	r3, .L25+4
 378 002a 1344     		add	r3, r3, r2
 379 002c 1B78     		ldrb	r3, [r3]
 380 002e 3B71     		strb	r3, [r7, #4]
 670:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* If In Buffer Full */
 671:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if(ep_status & USBFS_ARB_EPX_SR_IN_BUF_FULL)
 381              		.loc 1 671 0
 382 0030 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 383 0032 03F00103 		and	r3, r3, #1
 384 0036 002B     		cmp	r3, #0
 385 0038 29D0     		beq	.L22
 672:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
 673:.\Generated_Source\PSoC5/USBFS_episr.c ****                    if(USBFS_EP[ep].addr & USBFS_DIR_IN)
 386              		.loc 1 673 0
 387 003a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 388 003c 2149     		ldr	r1, .L25+8
 389 003e 1346     		mov	r3, r2
 390 0040 5B00     		lsls	r3, r3, #1
 391 0042 1344     		add	r3, r3, r2
 392 0044 9B00     		lsls	r3, r3, #2
 393 0046 0B44     		add	r3, r3, r1
 394 0048 1B79     		ldrb	r3, [r3, #4]
 395 004a DBB2     		uxtb	r3, r3
 396 004c DBB2     		uxtb	r3, r3
 397 004e 5BB2     		sxtb	r3, r3
 398 0050 002B     		cmp	r3, #0
 399 0052 1CDA     		bge	.L22
 674:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 675:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Workaround for ARB interrupt failure issue at low CPU speeds like 3 MHz:
 676:.\Generated_Source\PSoC5/USBFS_episr.c **** 						 * When CPU clock is running slow (3MHz or so) It takes 8 times more time to execute the IN_D
 677:.\Generated_Source\PSoC5/USBFS_episr.c **** 						 * instruction inside the ARB isr code after arming the IN endpoint. In this time, if the USB
 678:.\Generated_Source\PSoC5/USBFS_episr.c **** 						 * IN token for the endpoint which was armed, it will process the IN token and complete the I
 679:.\Generated_Source\PSoC5/USBFS_episr.c **** 						 * IN_DATA_RDY flag is cleared by ARB ISR. Workaround for this issue is clear the flag first 
 680:.\Generated_Source\PSoC5/USBFS_episr.c **** 						{
 681:.\Generated_Source\PSoC5/USBFS_episr.c **** 							/* Clear Data ready status*/
 682:.\Generated_Source\PSoC5/USBFS_episr.c **** 	                        USBFS_ARB_EP1_CFG_PTR[ptr] &= ~USBFS_ARB_EPX_CFG_IN_DATA_RDY;
 400              		.loc 1 682 0
 401 0054 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 20


 402 0056 03F18043 		add	r3, r3, #1073741824
 403 005a 03F5C143 		add	r3, r3, #24704
 404 005e 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 405 0060 02F18042 		add	r2, r2, #1073741824
 406 0064 02F5C142 		add	r2, r2, #24704
 407 0068 1278     		ldrb	r2, [r2]
 408 006a D2B2     		uxtb	r2, r2
 409 006c 22F00102 		bic	r2, r2, #1
 410 0070 D2B2     		uxtb	r2, r2
 411 0072 1A70     		strb	r2, [r3]
 683:.\Generated_Source\PSoC5/USBFS_episr.c **** 							
 684:.\Generated_Source\PSoC5/USBFS_episr.c **** 							/* Write the Mode register */
 685:.\Generated_Source\PSoC5/USBFS_episr.c **** 	                        USBFS_SIE_EP1_CR0_PTR[ptr] = USBFS_EP[ep].epMode;	                        
 412              		.loc 1 685 0
 413 0074 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 414 0076 144A     		ldr	r2, .L25+12
 415 0078 1A44     		add	r2, r2, r3
 416 007a B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 417 007c 1148     		ldr	r0, .L25+8
 418 007e 0B46     		mov	r3, r1
 419 0080 5B00     		lsls	r3, r3, #1
 420 0082 0B44     		add	r3, r3, r1
 421 0084 9B00     		lsls	r3, r3, #2
 422 0086 0344     		add	r3, r3, r0
 423 0088 5B79     		ldrb	r3, [r3, #5]
 424 008a DBB2     		uxtb	r3, r3
 425 008c 1370     		strb	r3, [r2]
 426              	.L22:
 686:.\Generated_Source\PSoC5/USBFS_episr.c **** 						}
 687:.\Generated_Source\PSoC5/USBFS_episr.c ****                         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u)
 688:.\Generated_Source\PSoC5/USBFS_episr.c ****                             if(ep == USBFS_midi_in_ep)
 689:.\Generated_Source\PSoC5/USBFS_episr.c ****                             {   /* Clear MIDI input pointer*/
 690:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_midiInPointer = 0u;
 691:.\Generated_Source\PSoC5/USBFS_episr.c ****                             }
 692:.\Generated_Source\PSoC5/USBFS_episr.c ****                         #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
 693:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 694:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 695:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* (re)arm Out EP only for mode2 */
 696:.\Generated_Source\PSoC5/USBFS_episr.c ****                 #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
 697:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* If DMA Grant */
 698:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if(ep_status & USBFS_ARB_EPX_SR_DMA_GNT)
 699:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 700:.\Generated_Source\PSoC5/USBFS_episr.c ****                         if((USBFS_EP[ep].addr & USBFS_DIR_IN) == 0u)
 701:.\Generated_Source\PSoC5/USBFS_episr.c ****                         {
 702:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 703:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 /* Write the Mode register */
 704:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_SIE_EP1_CR0_PTR[ptr] = USBFS_EP[ep].epMode;
 705:.\Generated_Source\PSoC5/USBFS_episr.c ****                         }
 706:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 707:.\Generated_Source\PSoC5/USBFS_episr.c ****                 #endif /* End USBFS_EP_MM */
 708:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 709:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_EP1_SR_PTR[ptr] = ep_status;       /* Clear Serviced events */
 427              		.loc 1 709 0
 428 008e 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 429 0090 0B4B     		ldr	r3, .L25+4
 430 0092 1344     		add	r3, r3, r2
 431 0094 3A79     		ldrb	r2, [r7, #4]
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 21


 432 0096 1A70     		strb	r2, [r3]
 433              	.L21:
 710:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 711:.\Generated_Source\PSoC5/USBFS_episr.c ****             ptr += USBFS_EPX_CNTX_ADDR_OFFSET;               /* prepare pointer for next EP */
 434              		.loc 1 711 0
 435 0098 7B79     		ldrb	r3, [r7, #5]
 436 009a 1033     		adds	r3, r3, #16
 437 009c 7B71     		strb	r3, [r7, #5]
 712:.\Generated_Source\PSoC5/USBFS_episr.c ****             ep++;
 438              		.loc 1 712 0
 439 009e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 440 00a0 0133     		adds	r3, r3, #1
 441 00a2 BB71     		strb	r3, [r7, #6]
 713:.\Generated_Source\PSoC5/USBFS_episr.c ****             int_status >>= 1;
 442              		.loc 1 713 0
 443 00a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 444 00a6 5B08     		lsrs	r3, r3, #1
 445 00a8 FB71     		strb	r3, [r7, #7]
 446              	.L20:
 665:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 447              		.loc 1 665 0
 448 00aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 449 00ac 002B     		cmp	r3, #0
 450 00ae B5D1     		bne	.L23
 714:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 715:.\Generated_Source\PSoC5/USBFS_episr.c **** 		return;
 451              		.loc 1 715 0
 452 00b0 00BF     		nop
 716:.\Generated_Source\PSoC5/USBFS_episr.c **** 		#if 0
 717:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 718:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 719:.\Generated_Source\PSoC5/USBFS_episr.c ****         int_status = USBFS_ARB_INT_SR_REG;                   /* read Arbiter Status Register */
 720:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_INT_SR_REG = int_status;                   /* Clear Serviced Interrupts */
 721:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 722:.\Generated_Source\PSoC5/USBFS_episr.c ****         while(int_status != 0u)
 723:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 724:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(int_status & 1u)  /* If EpX interrupt present */
 725:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 726:.\Generated_Source\PSoC5/USBFS_episr.c ****                 ep_status  = USBFS_ARB_EP1_SR_PTR[ptr];       /* read Endpoint Status Register */
 727:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* If In Buffer Full */
 728:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if(ep_status & USBFS_ARB_EPX_SR_IN_BUF_FULL)
 729:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
 730:.\Generated_Source\PSoC5/USBFS_episr.c ****                    if(USBFS_EP[ep].addr & USBFS_DIR_IN)
 731:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 732:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Write the Mode register */
 733:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_SIE_EP1_CR0_PTR[ptr] = USBFS_EP[ep].epMode;
 734:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Clear Data ready status*/
 735:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_ARB_EP1_CFG_PTR[ptr] &= ~USBFS_ARB_EPX_CFG_IN_DATA_RDY;
 736:.\Generated_Source\PSoC5/USBFS_episr.c ****                         #if defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u)
 737:.\Generated_Source\PSoC5/USBFS_episr.c ****                             if(ep == USBFS_midi_in_ep)
 738:.\Generated_Source\PSoC5/USBFS_episr.c ****                             {   /* Clear MIDI input pointer*/
 739:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_midiInPointer = 0u;
 740:.\Generated_Source\PSoC5/USBFS_episr.c ****                             }
 741:.\Generated_Source\PSoC5/USBFS_episr.c ****                         #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
 742:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 743:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 744:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* (re)arm Out EP only for mode2 */
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 22


 745:.\Generated_Source\PSoC5/USBFS_episr.c ****                 #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
 746:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* If DMA Grant */
 747:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if(ep_status & USBFS_ARB_EPX_SR_DMA_GNT)
 748:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 749:.\Generated_Source\PSoC5/USBFS_episr.c ****                         if((USBFS_EP[ep].addr & USBFS_DIR_IN) == 0u)
 750:.\Generated_Source\PSoC5/USBFS_episr.c ****                         {
 751:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 752:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 /* Write the Mode register */
 753:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_SIE_EP1_CR0_PTR[ptr] = USBFS_EP[ep].epMode;
 754:.\Generated_Source\PSoC5/USBFS_episr.c ****                         }
 755:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 756:.\Generated_Source\PSoC5/USBFS_episr.c ****                 #endif /* End USBFS_EP_MM */
 757:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 758:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 759:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 760:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#END` */
 761:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 762:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_EP1_SR_PTR[ptr] = ep_status;       /* Clear Serviced events */
 763:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 764:.\Generated_Source\PSoC5/USBFS_episr.c ****             ptr += USBFS_EPX_CNTX_ADDR_OFFSET;               /* prepare pointer for next EP */
 765:.\Generated_Source\PSoC5/USBFS_episr.c ****             ep++;
 766:.\Generated_Source\PSoC5/USBFS_episr.c ****             int_status >>= 1;
 767:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 768:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 769:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 770:.\Generated_Source\PSoC5/USBFS_episr.c **** 		#endif 
 771:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 772:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 453              		.loc 1 772 0
 454 00b2 0C37     		adds	r7, r7, #12
 455              		.cfi_def_cfa_offset 4
 456 00b4 BD46     		mov	sp, r7
 457              		.cfi_def_cfa_register 13
 458              		@ sp needed
 459 00b6 5DF8047B 		ldr	r7, [sp], #4
 460              		.cfi_restore 7
 461              		.cfi_def_cfa_offset 0
 462 00ba 7047     		bx	lr
 463              	.L26:
 464              		.align	2
 465              	.L25:
 466 00bc 9F600040 		.word	1073766559
 467 00c0 82600040 		.word	1073766530
 468 00c4 00000000 		.word	USBFS_EP
 469 00c8 0E600040 		.word	1073766414
 470              		.cfi_endproc
 471              	.LFE62:
 472              		.size	USBFS_ARB_ISR, .-USBFS_ARB_ISR
 473              		.text
 474              	.Letext0:
 475              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 476              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 477              		.file 4 ".\\Generated_Source\\PSoC5\\cytypes.h"
 478              		.file 5 ".\\Generated_Source\\PSoC5\\USBFS.h"
 479              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 480              		.section	.debug_info,"",%progbits
 481              	.Ldebug_info0:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 23


 482 0000 2C020000 		.4byte	0x22c
 483 0004 0400     		.2byte	0x4
 484 0006 00000000 		.4byte	.Ldebug_abbrev0
 485 000a 04       		.byte	0x4
 486 000b 01       		.uleb128 0x1
 487 000c 6D000000 		.4byte	.LASF38
 488 0010 01       		.byte	0x1
 489 0011 68020000 		.4byte	.LASF39
 490 0015 00000000 		.4byte	.LASF40
 491 0019 00000000 		.4byte	.Ldebug_ranges0+0
 492 001d 00000000 		.4byte	0
 493 0021 00000000 		.4byte	.Ldebug_line0
 494 0025 02       		.uleb128 0x2
 495 0026 01       		.byte	0x1
 496 0027 06       		.byte	0x6
 497 0028 C0020000 		.4byte	.LASF0
 498 002c 02       		.uleb128 0x2
 499 002d 01       		.byte	0x1
 500 002e 08       		.byte	0x8
 501 002f A5010000 		.4byte	.LASF1
 502 0033 02       		.uleb128 0x2
 503 0034 02       		.byte	0x2
 504 0035 05       		.byte	0x5
 505 0036 5E020000 		.4byte	.LASF2
 506 003a 02       		.uleb128 0x2
 507 003b 02       		.byte	0x2
 508 003c 07       		.byte	0x7
 509 003d CC020000 		.4byte	.LASF3
 510 0041 03       		.uleb128 0x3
 511 0042 63000000 		.4byte	.LASF9
 512 0046 02       		.byte	0x2
 513 0047 3F       		.byte	0x3f
 514 0048 4C000000 		.4byte	0x4c
 515 004c 02       		.uleb128 0x2
 516 004d 04       		.byte	0x4
 517 004e 05       		.byte	0x5
 518 004f A8020000 		.4byte	.LASF4
 519 0053 02       		.uleb128 0x2
 520 0054 04       		.byte	0x4
 521 0055 07       		.byte	0x7
 522 0056 5B010000 		.4byte	.LASF5
 523 005a 02       		.uleb128 0x2
 524 005b 08       		.byte	0x8
 525 005c 05       		.byte	0x5
 526 005d 32020000 		.4byte	.LASF6
 527 0061 02       		.uleb128 0x2
 528 0062 08       		.byte	0x8
 529 0063 07       		.byte	0x7
 530 0064 EB010000 		.4byte	.LASF7
 531 0068 04       		.uleb128 0x4
 532 0069 04       		.byte	0x4
 533 006a 05       		.byte	0x5
 534 006b 696E7400 		.ascii	"int\000"
 535 006f 02       		.uleb128 0x2
 536 0070 04       		.byte	0x4
 537 0071 07       		.byte	0x7
 538 0072 DE010000 		.4byte	.LASF8
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 24


 539 0076 03       		.uleb128 0x3
 540 0077 21020000 		.4byte	.LASF10
 541 007b 03       		.byte	0x3
 542 007c 2C       		.byte	0x2c
 543 007d 41000000 		.4byte	0x41
 544 0081 03       		.uleb128 0x3
 545 0082 1B020000 		.4byte	.LASF11
 546 0086 04       		.byte	0x4
 547 0087 5B       		.byte	0x5b
 548 0088 2C000000 		.4byte	0x2c
 549 008c 03       		.uleb128 0x3
 550 008d CC010000 		.4byte	.LASF12
 551 0091 04       		.byte	0x4
 552 0092 5C       		.byte	0x5c
 553 0093 3A000000 		.4byte	0x3a
 554 0097 02       		.uleb128 0x2
 555 0098 04       		.byte	0x4
 556 0099 04       		.byte	0x4
 557 009a 40010000 		.4byte	.LASF13
 558 009e 02       		.uleb128 0x2
 559 009f 08       		.byte	0x8
 560 00a0 04       		.byte	0x4
 561 00a1 B3010000 		.4byte	.LASF14
 562 00a5 02       		.uleb128 0x2
 563 00a6 01       		.byte	0x1
 564 00a7 08       		.byte	0x8
 565 00a8 40020000 		.4byte	.LASF15
 566 00ac 03       		.uleb128 0x3
 567 00ad 56010000 		.4byte	.LASF16
 568 00b1 04       		.byte	0x4
 569 00b2 F0       		.byte	0xf0
 570 00b3 B7000000 		.4byte	0xb7
 571 00b7 05       		.uleb128 0x5
 572 00b8 81000000 		.4byte	0x81
 573 00bc 02       		.uleb128 0x2
 574 00bd 04       		.byte	0x4
 575 00be 07       		.byte	0x7
 576 00bf 29020000 		.4byte	.LASF17
 577 00c3 06       		.uleb128 0x6
 578 00c4 05010000 		.4byte	.LASF41
 579 00c8 0C       		.byte	0xc
 580 00c9 05       		.byte	0x5
 581 00ca 79       		.byte	0x79
 582 00cb 3C010000 		.4byte	0x13c
 583 00cf 07       		.uleb128 0x7
 584 00d0 BA010000 		.4byte	.LASF18
 585 00d4 05       		.byte	0x5
 586 00d5 7B       		.byte	0x7b
 587 00d6 81000000 		.4byte	0x81
 588 00da 00       		.byte	0
 589 00db 07       		.uleb128 0x7
 590 00dc D3010000 		.4byte	.LASF19
 591 00e0 05       		.byte	0x5
 592 00e1 7C       		.byte	0x7c
 593 00e2 81000000 		.4byte	0x81
 594 00e6 01       		.byte	0x1
 595 00e7 07       		.uleb128 0x7
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 25


 596 00e8 02020000 		.4byte	.LASF20
 597 00ec 05       		.byte	0x5
 598 00ed 7D       		.byte	0x7d
 599 00ee 81000000 		.4byte	0x81
 600 00f2 02       		.byte	0x2
 601 00f3 07       		.uleb128 0x7
 602 00f4 46010000 		.4byte	.LASF21
 603 00f8 05       		.byte	0x5
 604 00f9 7E       		.byte	0x7e
 605 00fa 81000000 		.4byte	0x81
 606 00fe 03       		.byte	0x3
 607 00ff 07       		.uleb128 0x7
 608 0100 6D010000 		.4byte	.LASF22
 609 0104 05       		.byte	0x5
 610 0105 7F       		.byte	0x7f
 611 0106 81000000 		.4byte	0x81
 612 010a 04       		.byte	0x4
 613 010b 07       		.uleb128 0x7
 614 010c 4F010000 		.4byte	.LASF23
 615 0110 05       		.byte	0x5
 616 0111 80       		.byte	0x80
 617 0112 81000000 		.4byte	0x81
 618 0116 05       		.byte	0x5
 619 0117 07       		.uleb128 0x7
 620 0118 C1010000 		.4byte	.LASF24
 621 011c 05       		.byte	0x5
 622 011d 81       		.byte	0x81
 623 011e 8C000000 		.4byte	0x8c
 624 0122 06       		.byte	0x6
 625 0123 07       		.uleb128 0x7
 626 0124 45020000 		.4byte	.LASF25
 627 0128 05       		.byte	0x5
 628 0129 82       		.byte	0x82
 629 012a 8C000000 		.4byte	0x8c
 630 012e 08       		.byte	0x8
 631 012f 07       		.uleb128 0x7
 632 0130 8F020000 		.4byte	.LASF26
 633 0134 05       		.byte	0x5
 634 0135 83       		.byte	0x83
 635 0136 81000000 		.4byte	0x81
 636 013a 0A       		.byte	0xa
 637 013b 00       		.byte	0
 638 013c 03       		.uleb128 0x3
 639 013d 17010000 		.4byte	.LASF27
 640 0141 05       		.byte	0x5
 641 0142 84       		.byte	0x84
 642 0143 C3000000 		.4byte	0xc3
 643 0147 08       		.uleb128 0x8
 644 0148 0C020000 		.4byte	.LASF28
 645 014c 01       		.byte	0x1
 646 014d 50       		.byte	0x50
 647 014e 00000000 		.4byte	.LFB56
 648 0152 50000000 		.4byte	.LFE56-.LFB56
 649 0156 01       		.uleb128 0x1
 650 0157 9C       		.byte	0x9c
 651 0158 08       		.uleb128 0x8
 652 0159 B1020000 		.4byte	.LASF29
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 26


 653 015d 01       		.byte	0x1
 654 015e 93       		.byte	0x93
 655 015f 00000000 		.4byte	.LFB57
 656 0163 50000000 		.4byte	.LFE57-.LFB57
 657 0167 01       		.uleb128 0x1
 658 0168 9C       		.byte	0x9c
 659 0169 09       		.uleb128 0x9
 660 016a 72010000 		.4byte	.LASF30
 661 016e 01       		.byte	0x1
 662 016f 1701     		.2byte	0x117
 663 0171 00000000 		.4byte	.LFB58
 664 0175 5C000000 		.4byte	.LFE58-.LFB58
 665 0179 01       		.uleb128 0x1
 666 017a 9C       		.byte	0x9c
 667 017b 09       		.uleb128 0x9
 668 017c 99020000 		.4byte	.LASF31
 669 0180 01       		.byte	0x1
 670 0181 9801     		.2byte	0x198
 671 0183 00000000 		.4byte	.LFB59
 672 0187 5C000000 		.4byte	.LFE59-.LFB59
 673 018b 01       		.uleb128 0x1
 674 018c 9C       		.byte	0x9c
 675 018d 09       		.uleb128 0x9
 676 018e 81010000 		.4byte	.LASF32
 677 0192 01       		.byte	0x1
 678 0193 5902     		.2byte	0x259
 679 0195 00000000 		.4byte	.LFB60
 680 0199 0C000000 		.4byte	.LFE60-.LFB60
 681 019d 01       		.uleb128 0x1
 682 019e 9C       		.byte	0x9c
 683 019f 0A       		.uleb128 0xa
 684 01a0 2C010000 		.4byte	.LASF33
 685 01a4 01       		.byte	0x1
 686 01a5 7002     		.2byte	0x270
 687 01a7 00000000 		.4byte	.LFB61
 688 01ab 0A000000 		.4byte	.LFE61-.LFB61
 689 01af 01       		.uleb128 0x1
 690 01b0 9C       		.byte	0x9c
 691 01b1 0B       		.uleb128 0xb
 692 01b2 50020000 		.4byte	.LASF42
 693 01b6 01       		.byte	0x1
 694 01b7 8E02     		.2byte	0x28e
 695 01b9 00000000 		.4byte	.LFB62
 696 01bd CC000000 		.4byte	.LFE62-.LFB62
 697 01c1 01       		.uleb128 0x1
 698 01c2 9C       		.byte	0x9c
 699 01c3 03020000 		.4byte	0x203
 700 01c7 0C       		.uleb128 0xc
 701 01c8 58000000 		.4byte	.LASF34
 702 01cc 01       		.byte	0x1
 703 01cd 9002     		.2byte	0x290
 704 01cf 81000000 		.4byte	0x81
 705 01d3 02       		.uleb128 0x2
 706 01d4 91       		.byte	0x91
 707 01d5 77       		.sleb128 -9
 708 01d6 0C       		.uleb128 0xc
 709 01d7 FB000000 		.4byte	.LASF35
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 27


 710 01db 01       		.byte	0x1
 711 01dc 9102     		.2byte	0x291
 712 01de 81000000 		.4byte	0x81
 713 01e2 02       		.uleb128 0x2
 714 01e3 91       		.byte	0x91
 715 01e4 74       		.sleb128 -12
 716 01e5 0D       		.uleb128 0xd
 717 01e6 657000   		.ascii	"ep\000"
 718 01e9 01       		.byte	0x1
 719 01ea 9202     		.2byte	0x292
 720 01ec 81000000 		.4byte	0x81
 721 01f0 02       		.uleb128 0x2
 722 01f1 91       		.byte	0x91
 723 01f2 76       		.sleb128 -10
 724 01f3 0D       		.uleb128 0xd
 725 01f4 70747200 		.ascii	"ptr\000"
 726 01f8 01       		.byte	0x1
 727 01f9 9302     		.2byte	0x293
 728 01fb 81000000 		.4byte	0x81
 729 01ff 02       		.uleb128 0x2
 730 0200 91       		.byte	0x91
 731 0201 75       		.sleb128 -11
 732 0202 00       		.byte	0
 733 0203 0E       		.uleb128 0xe
 734 0204 8F010000 		.4byte	.LASF36
 735 0208 06       		.byte	0x6
 736 0209 1606     		.2byte	0x616
 737 020b 0F020000 		.4byte	0x20f
 738 020f 05       		.uleb128 0x5
 739 0210 76000000 		.4byte	0x76
 740 0214 0F       		.uleb128 0xf
 741 0215 3C010000 		.4byte	0x13c
 742 0219 1F020000 		.4byte	0x21f
 743 021d 10       		.uleb128 0x10
 744 021e 00       		.byte	0
 745 021f 11       		.uleb128 0x11
 746 0220 9C010000 		.4byte	.LASF37
 747 0224 01       		.byte	0x1
 748 0225 33       		.byte	0x33
 749 0226 2A020000 		.4byte	0x22a
 750 022a 05       		.uleb128 0x5
 751 022b 14020000 		.4byte	0x214
 752 022f 00       		.byte	0
 753              		.section	.debug_abbrev,"",%progbits
 754              	.Ldebug_abbrev0:
 755 0000 01       		.uleb128 0x1
 756 0001 11       		.uleb128 0x11
 757 0002 01       		.byte	0x1
 758 0003 25       		.uleb128 0x25
 759 0004 0E       		.uleb128 0xe
 760 0005 13       		.uleb128 0x13
 761 0006 0B       		.uleb128 0xb
 762 0007 03       		.uleb128 0x3
 763 0008 0E       		.uleb128 0xe
 764 0009 1B       		.uleb128 0x1b
 765 000a 0E       		.uleb128 0xe
 766 000b 55       		.uleb128 0x55
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 28


 767 000c 17       		.uleb128 0x17
 768 000d 11       		.uleb128 0x11
 769 000e 01       		.uleb128 0x1
 770 000f 10       		.uleb128 0x10
 771 0010 17       		.uleb128 0x17
 772 0011 00       		.byte	0
 773 0012 00       		.byte	0
 774 0013 02       		.uleb128 0x2
 775 0014 24       		.uleb128 0x24
 776 0015 00       		.byte	0
 777 0016 0B       		.uleb128 0xb
 778 0017 0B       		.uleb128 0xb
 779 0018 3E       		.uleb128 0x3e
 780 0019 0B       		.uleb128 0xb
 781 001a 03       		.uleb128 0x3
 782 001b 0E       		.uleb128 0xe
 783 001c 00       		.byte	0
 784 001d 00       		.byte	0
 785 001e 03       		.uleb128 0x3
 786 001f 16       		.uleb128 0x16
 787 0020 00       		.byte	0
 788 0021 03       		.uleb128 0x3
 789 0022 0E       		.uleb128 0xe
 790 0023 3A       		.uleb128 0x3a
 791 0024 0B       		.uleb128 0xb
 792 0025 3B       		.uleb128 0x3b
 793 0026 0B       		.uleb128 0xb
 794 0027 49       		.uleb128 0x49
 795 0028 13       		.uleb128 0x13
 796 0029 00       		.byte	0
 797 002a 00       		.byte	0
 798 002b 04       		.uleb128 0x4
 799 002c 24       		.uleb128 0x24
 800 002d 00       		.byte	0
 801 002e 0B       		.uleb128 0xb
 802 002f 0B       		.uleb128 0xb
 803 0030 3E       		.uleb128 0x3e
 804 0031 0B       		.uleb128 0xb
 805 0032 03       		.uleb128 0x3
 806 0033 08       		.uleb128 0x8
 807 0034 00       		.byte	0
 808 0035 00       		.byte	0
 809 0036 05       		.uleb128 0x5
 810 0037 35       		.uleb128 0x35
 811 0038 00       		.byte	0
 812 0039 49       		.uleb128 0x49
 813 003a 13       		.uleb128 0x13
 814 003b 00       		.byte	0
 815 003c 00       		.byte	0
 816 003d 06       		.uleb128 0x6
 817 003e 13       		.uleb128 0x13
 818 003f 01       		.byte	0x1
 819 0040 03       		.uleb128 0x3
 820 0041 0E       		.uleb128 0xe
 821 0042 0B       		.uleb128 0xb
 822 0043 0B       		.uleb128 0xb
 823 0044 3A       		.uleb128 0x3a
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 29


 824 0045 0B       		.uleb128 0xb
 825 0046 3B       		.uleb128 0x3b
 826 0047 0B       		.uleb128 0xb
 827 0048 01       		.uleb128 0x1
 828 0049 13       		.uleb128 0x13
 829 004a 00       		.byte	0
 830 004b 00       		.byte	0
 831 004c 07       		.uleb128 0x7
 832 004d 0D       		.uleb128 0xd
 833 004e 00       		.byte	0
 834 004f 03       		.uleb128 0x3
 835 0050 0E       		.uleb128 0xe
 836 0051 3A       		.uleb128 0x3a
 837 0052 0B       		.uleb128 0xb
 838 0053 3B       		.uleb128 0x3b
 839 0054 0B       		.uleb128 0xb
 840 0055 49       		.uleb128 0x49
 841 0056 13       		.uleb128 0x13
 842 0057 38       		.uleb128 0x38
 843 0058 0B       		.uleb128 0xb
 844 0059 00       		.byte	0
 845 005a 00       		.byte	0
 846 005b 08       		.uleb128 0x8
 847 005c 2E       		.uleb128 0x2e
 848 005d 00       		.byte	0
 849 005e 3F       		.uleb128 0x3f
 850 005f 19       		.uleb128 0x19
 851 0060 03       		.uleb128 0x3
 852 0061 0E       		.uleb128 0xe
 853 0062 3A       		.uleb128 0x3a
 854 0063 0B       		.uleb128 0xb
 855 0064 3B       		.uleb128 0x3b
 856 0065 0B       		.uleb128 0xb
 857 0066 27       		.uleb128 0x27
 858 0067 19       		.uleb128 0x19
 859 0068 11       		.uleb128 0x11
 860 0069 01       		.uleb128 0x1
 861 006a 12       		.uleb128 0x12
 862 006b 06       		.uleb128 0x6
 863 006c 40       		.uleb128 0x40
 864 006d 18       		.uleb128 0x18
 865 006e 9642     		.uleb128 0x2116
 866 0070 19       		.uleb128 0x19
 867 0071 00       		.byte	0
 868 0072 00       		.byte	0
 869 0073 09       		.uleb128 0x9
 870 0074 2E       		.uleb128 0x2e
 871 0075 00       		.byte	0
 872 0076 3F       		.uleb128 0x3f
 873 0077 19       		.uleb128 0x19
 874 0078 03       		.uleb128 0x3
 875 0079 0E       		.uleb128 0xe
 876 007a 3A       		.uleb128 0x3a
 877 007b 0B       		.uleb128 0xb
 878 007c 3B       		.uleb128 0x3b
 879 007d 05       		.uleb128 0x5
 880 007e 27       		.uleb128 0x27
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 30


 881 007f 19       		.uleb128 0x19
 882 0080 11       		.uleb128 0x11
 883 0081 01       		.uleb128 0x1
 884 0082 12       		.uleb128 0x12
 885 0083 06       		.uleb128 0x6
 886 0084 40       		.uleb128 0x40
 887 0085 18       		.uleb128 0x18
 888 0086 9742     		.uleb128 0x2117
 889 0088 19       		.uleb128 0x19
 890 0089 00       		.byte	0
 891 008a 00       		.byte	0
 892 008b 0A       		.uleb128 0xa
 893 008c 2E       		.uleb128 0x2e
 894 008d 00       		.byte	0
 895 008e 3F       		.uleb128 0x3f
 896 008f 19       		.uleb128 0x19
 897 0090 03       		.uleb128 0x3
 898 0091 0E       		.uleb128 0xe
 899 0092 3A       		.uleb128 0x3a
 900 0093 0B       		.uleb128 0xb
 901 0094 3B       		.uleb128 0x3b
 902 0095 05       		.uleb128 0x5
 903 0096 27       		.uleb128 0x27
 904 0097 19       		.uleb128 0x19
 905 0098 11       		.uleb128 0x11
 906 0099 01       		.uleb128 0x1
 907 009a 12       		.uleb128 0x12
 908 009b 06       		.uleb128 0x6
 909 009c 40       		.uleb128 0x40
 910 009d 18       		.uleb128 0x18
 911 009e 9642     		.uleb128 0x2116
 912 00a0 19       		.uleb128 0x19
 913 00a1 00       		.byte	0
 914 00a2 00       		.byte	0
 915 00a3 0B       		.uleb128 0xb
 916 00a4 2E       		.uleb128 0x2e
 917 00a5 01       		.byte	0x1
 918 00a6 3F       		.uleb128 0x3f
 919 00a7 19       		.uleb128 0x19
 920 00a8 03       		.uleb128 0x3
 921 00a9 0E       		.uleb128 0xe
 922 00aa 3A       		.uleb128 0x3a
 923 00ab 0B       		.uleb128 0xb
 924 00ac 3B       		.uleb128 0x3b
 925 00ad 05       		.uleb128 0x5
 926 00ae 27       		.uleb128 0x27
 927 00af 19       		.uleb128 0x19
 928 00b0 11       		.uleb128 0x11
 929 00b1 01       		.uleb128 0x1
 930 00b2 12       		.uleb128 0x12
 931 00b3 06       		.uleb128 0x6
 932 00b4 40       		.uleb128 0x40
 933 00b5 18       		.uleb128 0x18
 934 00b6 9742     		.uleb128 0x2117
 935 00b8 19       		.uleb128 0x19
 936 00b9 01       		.uleb128 0x1
 937 00ba 13       		.uleb128 0x13
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 31


 938 00bb 00       		.byte	0
 939 00bc 00       		.byte	0
 940 00bd 0C       		.uleb128 0xc
 941 00be 34       		.uleb128 0x34
 942 00bf 00       		.byte	0
 943 00c0 03       		.uleb128 0x3
 944 00c1 0E       		.uleb128 0xe
 945 00c2 3A       		.uleb128 0x3a
 946 00c3 0B       		.uleb128 0xb
 947 00c4 3B       		.uleb128 0x3b
 948 00c5 05       		.uleb128 0x5
 949 00c6 49       		.uleb128 0x49
 950 00c7 13       		.uleb128 0x13
 951 00c8 02       		.uleb128 0x2
 952 00c9 18       		.uleb128 0x18
 953 00ca 00       		.byte	0
 954 00cb 00       		.byte	0
 955 00cc 0D       		.uleb128 0xd
 956 00cd 34       		.uleb128 0x34
 957 00ce 00       		.byte	0
 958 00cf 03       		.uleb128 0x3
 959 00d0 08       		.uleb128 0x8
 960 00d1 3A       		.uleb128 0x3a
 961 00d2 0B       		.uleb128 0xb
 962 00d3 3B       		.uleb128 0x3b
 963 00d4 05       		.uleb128 0x5
 964 00d5 49       		.uleb128 0x49
 965 00d6 13       		.uleb128 0x13
 966 00d7 02       		.uleb128 0x2
 967 00d8 18       		.uleb128 0x18
 968 00d9 00       		.byte	0
 969 00da 00       		.byte	0
 970 00db 0E       		.uleb128 0xe
 971 00dc 34       		.uleb128 0x34
 972 00dd 00       		.byte	0
 973 00de 03       		.uleb128 0x3
 974 00df 0E       		.uleb128 0xe
 975 00e0 3A       		.uleb128 0x3a
 976 00e1 0B       		.uleb128 0xb
 977 00e2 3B       		.uleb128 0x3b
 978 00e3 05       		.uleb128 0x5
 979 00e4 49       		.uleb128 0x49
 980 00e5 13       		.uleb128 0x13
 981 00e6 3F       		.uleb128 0x3f
 982 00e7 19       		.uleb128 0x19
 983 00e8 3C       		.uleb128 0x3c
 984 00e9 19       		.uleb128 0x19
 985 00ea 00       		.byte	0
 986 00eb 00       		.byte	0
 987 00ec 0F       		.uleb128 0xf
 988 00ed 01       		.uleb128 0x1
 989 00ee 01       		.byte	0x1
 990 00ef 49       		.uleb128 0x49
 991 00f0 13       		.uleb128 0x13
 992 00f1 01       		.uleb128 0x1
 993 00f2 13       		.uleb128 0x13
 994 00f3 00       		.byte	0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 32


 995 00f4 00       		.byte	0
 996 00f5 10       		.uleb128 0x10
 997 00f6 21       		.uleb128 0x21
 998 00f7 00       		.byte	0
 999 00f8 00       		.byte	0
 1000 00f9 00       		.byte	0
 1001 00fa 11       		.uleb128 0x11
 1002 00fb 34       		.uleb128 0x34
 1003 00fc 00       		.byte	0
 1004 00fd 03       		.uleb128 0x3
 1005 00fe 0E       		.uleb128 0xe
 1006 00ff 3A       		.uleb128 0x3a
 1007 0100 0B       		.uleb128 0xb
 1008 0101 3B       		.uleb128 0x3b
 1009 0102 0B       		.uleb128 0xb
 1010 0103 49       		.uleb128 0x49
 1011 0104 13       		.uleb128 0x13
 1012 0105 3F       		.uleb128 0x3f
 1013 0106 19       		.uleb128 0x19
 1014 0107 3C       		.uleb128 0x3c
 1015 0108 19       		.uleb128 0x19
 1016 0109 00       		.byte	0
 1017 010a 00       		.byte	0
 1018 010b 00       		.byte	0
 1019              		.section	.debug_aranges,"",%progbits
 1020 0000 4C000000 		.4byte	0x4c
 1021 0004 0200     		.2byte	0x2
 1022 0006 00000000 		.4byte	.Ldebug_info0
 1023 000a 04       		.byte	0x4
 1024 000b 00       		.byte	0
 1025 000c 0000     		.2byte	0
 1026 000e 0000     		.2byte	0
 1027 0010 00000000 		.4byte	.LFB56
 1028 0014 50000000 		.4byte	.LFE56-.LFB56
 1029 0018 00000000 		.4byte	.LFB57
 1030 001c 50000000 		.4byte	.LFE57-.LFB57
 1031 0020 00000000 		.4byte	.LFB58
 1032 0024 5C000000 		.4byte	.LFE58-.LFB58
 1033 0028 00000000 		.4byte	.LFB59
 1034 002c 5C000000 		.4byte	.LFE59-.LFB59
 1035 0030 00000000 		.4byte	.LFB60
 1036 0034 0C000000 		.4byte	.LFE60-.LFB60
 1037 0038 00000000 		.4byte	.LFB61
 1038 003c 0A000000 		.4byte	.LFE61-.LFB61
 1039 0040 00000000 		.4byte	.LFB62
 1040 0044 CC000000 		.4byte	.LFE62-.LFB62
 1041 0048 00000000 		.4byte	0
 1042 004c 00000000 		.4byte	0
 1043              		.section	.debug_ranges,"",%progbits
 1044              	.Ldebug_ranges0:
 1045 0000 00000000 		.4byte	.LFB56
 1046 0004 50000000 		.4byte	.LFE56
 1047 0008 00000000 		.4byte	.LFB57
 1048 000c 50000000 		.4byte	.LFE57
 1049 0010 00000000 		.4byte	.LFB58
 1050 0014 5C000000 		.4byte	.LFE58
 1051 0018 00000000 		.4byte	.LFB59
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 33


 1052 001c 5C000000 		.4byte	.LFE59
 1053 0020 00000000 		.4byte	.LFB60
 1054 0024 0C000000 		.4byte	.LFE60
 1055 0028 00000000 		.4byte	.LFB61
 1056 002c 0A000000 		.4byte	.LFE61
 1057 0030 00000000 		.4byte	.LFB62
 1058 0034 CC000000 		.4byte	.LFE62
 1059 0038 00000000 		.4byte	0
 1060 003c 00000000 		.4byte	0
 1061              		.section	.debug_line,"",%progbits
 1062              	.Ldebug_line0:
 1063 0000 31020000 		.section	.debug_str,"MS",%progbits,1
 1063      02007201 
 1063      00000201 
 1063      FB0E0D00 
 1063      01010101 
 1064              	.LASF40:
 1065 0000 433A5C55 		.ascii	"C:\\Users\\lukas\\Desktop\\PioneerKit_P5LP_USB_Audi"
 1065      73657273 
 1065      5C6C756B 
 1065      61735C44 
 1065      65736B74 
 1066 002f 6F2D6D61 		.ascii	"o-master\\PioneerKit_P5LP_USB_Audio.cydsn\000"
 1066      73746572 
 1066      5C50696F 
 1066      6E656572 
 1066      4B69745F 
 1067              	.LASF34:
 1068 0058 696E745F 		.ascii	"int_status\000"
 1068      73746174 
 1068      757300
 1069              	.LASF9:
 1070 0063 5F5F696E 		.ascii	"__int32_t\000"
 1070      7433325F 
 1070      7400
 1071              	.LASF38:
 1072 006d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1072      4320342E 
 1072      392E3320 
 1072      32303135 
 1072      30333033 
 1073 00a0 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1073      20726576 
 1073      6973696F 
 1073      6E203232 
 1073      31323230 
 1074 00d3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1074      66756E63 
 1074      74696F6E 
 1074      2D736563 
 1074      74696F6E 
 1075              	.LASF35:
 1076 00fb 65705F73 		.ascii	"ep_status\000"
 1076      74617475 
 1076      7300
 1077              	.LASF41:
 1078 0105 5F555342 		.ascii	"_USBFS_EpCtlBlock\000"
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 34


 1078      46535F45 
 1078      7043746C 
 1078      426C6F63 
 1078      6B00
 1079              	.LASF27:
 1080 0117 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 1080      4246535F 
 1080      45505F43 
 1080      544C5F42 
 1080      4C4F434B 
 1081              	.LASF33:
 1082 012c 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 1082      535F4255 
 1082      535F5245 
 1082      5345545F 
 1082      49535200 
 1083              	.LASF13:
 1084 0140 666C6F61 		.ascii	"float\000"
 1084      7400
 1085              	.LASF21:
 1086 0146 6570546F 		.ascii	"epToggle\000"
 1086      67676C65 
 1086      00
 1087              	.LASF23:
 1088 014f 65704D6F 		.ascii	"epMode\000"
 1088      646500
 1089              	.LASF16:
 1090 0156 72656738 		.ascii	"reg8\000"
 1090      00
 1091              	.LASF5:
 1092 015b 6C6F6E67 		.ascii	"long unsigned int\000"
 1092      20756E73 
 1092      69676E65 
 1092      6420696E 
 1092      7400
 1093              	.LASF22:
 1094 016d 61646472 		.ascii	"addr\000"
 1094      00
 1095              	.LASF30:
 1096 0172 55534246 		.ascii	"USBFS_EP_4_ISR\000"
 1096      535F4550 
 1096      5F345F49 
 1096      535200
 1097              	.LASF32:
 1098 0181 55534246 		.ascii	"USBFS_SOF_ISR\000"
 1098      535F534F 
 1098      465F4953 
 1098      5200
 1099              	.LASF36:
 1100 018f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1100      52784275 
 1100      66666572 
 1100      00
 1101              	.LASF37:
 1102 019c 55534246 		.ascii	"USBFS_EP\000"
 1102      535F4550 
 1102      00
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 35


 1103              	.LASF1:
 1104 01a5 756E7369 		.ascii	"unsigned char\000"
 1104      676E6564 
 1104      20636861 
 1104      7200
 1105              	.LASF14:
 1106 01b3 646F7562 		.ascii	"double\000"
 1106      6C6500
 1107              	.LASF18:
 1108 01ba 61747472 		.ascii	"attrib\000"
 1108      696200
 1109              	.LASF24:
 1110 01c1 62756666 		.ascii	"buffOffset\000"
 1110      4F666673 
 1110      657400
 1111              	.LASF12:
 1112 01cc 75696E74 		.ascii	"uint16\000"
 1112      313600
 1113              	.LASF19:
 1114 01d3 61706945 		.ascii	"apiEpState\000"
 1114      70537461 
 1114      746500
 1115              	.LASF8:
 1116 01de 756E7369 		.ascii	"unsigned int\000"
 1116      676E6564 
 1116      20696E74 
 1116      00
 1117              	.LASF7:
 1118 01eb 6C6F6E67 		.ascii	"long long unsigned int\000"
 1118      206C6F6E 
 1118      6720756E 
 1118      7369676E 
 1118      65642069 
 1119              	.LASF20:
 1120 0202 68774570 		.ascii	"hwEpState\000"
 1120      53746174 
 1120      6500
 1121              	.LASF28:
 1122 020c 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 1122      535F4550 
 1122      5F315F49 
 1122      535200
 1123              	.LASF11:
 1124 021b 75696E74 		.ascii	"uint8\000"
 1124      3800
 1125              	.LASF10:
 1126 0221 696E7433 		.ascii	"int32_t\000"
 1126      325F7400 
 1127              	.LASF17:
 1128 0229 73697A65 		.ascii	"sizetype\000"
 1128      74797065 
 1128      00
 1129              	.LASF6:
 1130 0232 6C6F6E67 		.ascii	"long long int\000"
 1130      206C6F6E 
 1130      6720696E 
 1130      7400
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccfjovFM.s 			page 36


 1131              	.LASF15:
 1132 0240 63686172 		.ascii	"char\000"
 1132      00
 1133              	.LASF25:
 1134 0245 62756666 		.ascii	"bufferSize\000"
 1134      65725369 
 1134      7A6500
 1135              	.LASF42:
 1136 0250 55534246 		.ascii	"USBFS_ARB_ISR\000"
 1136      535F4152 
 1136      425F4953 
 1136      5200
 1137              	.LASF2:
 1138 025e 73686F72 		.ascii	"short int\000"
 1138      7420696E 
 1138      7400
 1139              	.LASF39:
 1140 0268 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS_episr.c\000"
 1140      6E657261 
 1140      7465645F 
 1140      536F7572 
 1140      63655C50 
 1141              	.LASF26:
 1142 028f 696E7465 		.ascii	"interface\000"
 1142      72666163 
 1142      6500
 1143              	.LASF31:
 1144 0299 55534246 		.ascii	"USBFS_EP_6_ISR\000"
 1144      535F4550 
 1144      5F365F49 
 1144      535200
 1145              	.LASF4:
 1146 02a8 6C6F6E67 		.ascii	"long int\000"
 1146      20696E74 
 1146      00
 1147              	.LASF29:
 1148 02b1 55534246 		.ascii	"USBFS_EP_2_ISR\000"
 1148      535F4550 
 1148      5F325F49 
 1148      535200
 1149              	.LASF0:
 1150 02c0 7369676E 		.ascii	"signed char\000"
 1150      65642063 
 1150      68617200 
 1151              	.LASF3:
 1152 02cc 73686F72 		.ascii	"short unsigned int\000"
 1152      7420756E 
 1152      7369676E 
 1152      65642069 
 1152      6E7400
 1153              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"AudioControl.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.data
  19              		.align	2
  20              		.type	Droop_Filter_Custom_backup, %object
  21              		.size	Droop_Filter_Custom_backup, 4
  22              	Droop_Filter_Custom_backup:
  23 0000 00       		.byte	0
  24 0001 01       		.byte	1
  25 0002 0000     		.space	2
  26              		.comm	USBOutDmaChan,1,1
  27              		.comm	txDmaChan,1,1
  28              		.comm	I2STxDMAChan,1,1
  29              		.comm	USBInDmaChan,1,1
  30              		.comm	rxDmaChan,1,1
  31              		.comm	txTd,8,4
  32              		.comm	rxTd,8,4
  33              		.comm	I2STxTd,1,1
  34              		.comm	I2SRxTd,1,1
  35              		.comm	USBOutTd,2,4
  36              		.comm	USBInTd,2,4
  37              		.global	resetTx
  38              		.bss
  39              		.type	resetTx, %object
  40              		.size	resetTx, 1
  41              	resetTx:
  42 0000 00       		.space	1
  43              		.global	outPlaying
  44              		.type	outPlaying, %object
  45              		.size	outPlaying, 1
  46              	outPlaying:
  47 0001 00       		.space	1
  48              		.global	outLevel
  49              		.align	1
  50              		.type	outLevel, %object
  51              		.size	outLevel, 2
  52              	outLevel:
  53 0002 0000     		.space	2
  54              		.global	outUsbCount
  55              		.align	1
  56              		.type	outUsbCount, %object
  57              		.size	outUsbCount, 2
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 2


  58              	outUsbCount:
  59 0004 0000     		.space	2
  60              		.global	outUsbShadow
  61              		.align	1
  62              		.type	outUsbShadow, %object
  63              		.size	outUsbShadow, 2
  64              	outUsbShadow:
  65 0006 0000     		.space	2
  66              		.comm	outBuffer,1152,4
  67              		.global	outBufIndex
  68              		.align	1
  69              		.type	outBufIndex, %object
  70              		.size	outBufIndex, 2
  71              	outBufIndex:
  72 0008 0000     		.space	2
  73              		.global	resetRx
  74              		.type	resetRx, %object
  75              		.size	resetRx, 1
  76              	resetRx:
  77 000a 00       		.space	1
  78              		.global	inPlaying
  79              		.type	inPlaying, %object
  80              		.size	inPlaying, 1
  81              	inPlaying:
  82 000b 00       		.space	1
  83              		.global	inLevel
  84              		.data
  85              		.align	1
  86              		.type	inLevel, %object
  87              		.size	inLevel, 2
  88              	inLevel:
  89 0004 0003     		.short	768
  90              		.global	inUsbCount
  91              		.bss
  92              		.align	1
  93              		.type	inUsbCount, %object
  94              		.size	inUsbCount, 2
  95              	inUsbCount:
  96 000c 0000     		.space	2
  97              		.global	inUsbShadow
  98              		.align	1
  99              		.type	inUsbShadow, %object
 100              		.size	inUsbShadow, 2
 101              	inUsbShadow:
 102 000e 0000     		.space	2
 103              		.global	clearInBuffer
 104              		.type	clearInBuffer, %object
 105              		.size	clearInBuffer, 1
 106              	clearInBuffer:
 107 0010 00       		.space	1
 108              		.comm	inBuffer,768,4
 109              		.global	inBufIndex
 110 0011 00       		.align	1
 111              		.type	inBufIndex, %object
 112              		.size	inBufIndex, 2
 113              	inBufIndex:
 114 0012 0000     		.space	2
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 3


 115              		.global	lowPowerIdle
 116              		.data
 117              		.type	lowPowerIdle, %object
 118              		.size	lowPowerIdle, 1
 119              	lowPowerIdle:
 120 0006 01       		.byte	1
 121              		.global	setRate
 122              		.type	setRate, %object
 123              		.size	setRate, 1
 124              	setRate:
 125 0007 FF       		.byte	-1
 126              		.global	rateChangedWhileInactive
 127              		.bss
 128              		.type	rateChangedWhileInactive, %object
 129              		.size	rateChangedWhileInactive, 1
 130              	rateChangedWhileInactive:
 131 0014 00       		.space	1
 132              		.global	clockSwitchTimer
 133              		.type	clockSwitchTimer, %object
 134              		.size	clockSwitchTimer, 1
 135              	clockSwitchTimer:
 136 0015 00       		.space	1
 137              		.global	audioClkConfigured
 138              		.type	audioClkConfigured, %object
 139              		.size	audioClkConfigured, 1
 140              	audioClkConfigured:
 141 0016 00       		.space	1
 142              		.comm	rate,1,1
 143              		.section	.text.ConfigureAudioPath,"ax",%progbits
 144              		.align	2
 145              		.global	ConfigureAudioPath
 146              		.thumb
 147              		.thumb_func
 148              		.type	ConfigureAudioPath, %function
 149              	ConfigureAudioPath:
 150              	.LFB56:
 151              		.file 1 ".\\AudioControl.c"
   1:.\AudioControl.c **** /*******************************************************************************
   2:.\AudioControl.c **** * File Name: AudioControl.c
   3:.\AudioControl.c **** *
   4:.\AudioControl.c **** * Version 1.0
   5:.\AudioControl.c **** *
   6:.\AudioControl.c **** *  Description: This file contains the Audio signal path configuration and 
   7:.\AudioControl.c **** *               processing code
   8:.\AudioControl.c **** *
   9:.\AudioControl.c **** ********************************************************************************
  10:.\AudioControl.c **** * Copyright (2008-2013), Cypress Semiconductor Corporation.
  11:.\AudioControl.c **** ********************************************************************************
  12:.\AudioControl.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  13:.\AudioControl.c **** * protected by and subject to worldwide patent protection (United States and
  14:.\AudioControl.c **** * foreign), United States copyright laws and international treaty provisions.
  15:.\AudioControl.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  16:.\AudioControl.c **** * license to copy, use, modify, create derivative works of, and compile the
  17:.\AudioControl.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  18:.\AudioControl.c **** * custom software in support of licensee product to be used only in conjunction
  19:.\AudioControl.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  20:.\AudioControl.c **** * Any reproduction, modification, translation, compilation, or representation of
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 4


  21:.\AudioControl.c **** * this software except as specified above is prohibited without the express
  22:.\AudioControl.c **** * written permission of Cypress.
  23:.\AudioControl.c **** *
  24:.\AudioControl.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  25:.\AudioControl.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  26:.\AudioControl.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  27:.\AudioControl.c **** * Cypress reserves the right to make changes without further notice to the
  28:.\AudioControl.c **** * materials described herein. Cypress does not assume any liability arising out
  29:.\AudioControl.c **** * of the application or use of any product or circuit described herein. Cypress
  30:.\AudioControl.c **** * does not authorize its products for use as critical components in life-support
  31:.\AudioControl.c **** * systems where a malfunction or failure may reasonably be expected to result in
  32:.\AudioControl.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  33:.\AudioControl.c **** * support systems application implies that the manufacturer assumes all risk of
  34:.\AudioControl.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  35:.\AudioControl.c **** * limited by and subject to the applicable Cypress software license agreement.
  36:.\AudioControl.c **** *******************************************************************************/
  37:.\AudioControl.c **** #include <Application.h>
  38:.\AudioControl.c **** #include <AudioControl.h>
  39:.\AudioControl.c **** #include <Codec.h>
  40:.\AudioControl.c **** #include <Configuration.h>
  41:.\AudioControl.c **** #include <Device.h>
  42:.\AudioControl.c **** #include <Interrupts.h>
  43:.\AudioControl.c **** #include <project.h>
  44:.\AudioControl.c **** #include <USBInterface.h>
  45:.\AudioControl.c **** #include <VolumeControl.h>
  46:.\AudioControl.c **** 
  47:.\AudioControl.c **** extern volatile uint8 USBFS_frequencyChanged;   /* USB audio class sampling frequency change flag *
  48:.\AudioControl.c **** extern volatile uint8 USBFS_currentSampleFrequency[][USBFS_SAMPLE_FREQ_LEN]; /* audio SR received f
  49:.\AudioControl.c **** extern volatile uint8 USBFS_interfaceSetting[]; /* current USB active interface settings */
  50:.\AudioControl.c **** extern volatile uint8 USBFS_transferState;      /* USB component state machine value */
  51:.\AudioControl.c **** extern volatile uint8 USBFS_device;             /* currently active USB device descriptor */
  52:.\AudioControl.c **** 
  53:.\AudioControl.c **** extern CYBIT audioClkConfigured;                 /* AudioClkGen configuration flag */
  54:.\AudioControl.c **** extern CYDATA CodecRegister CodecWrite;    		 /* codec register read/write structure */
  55:.\AudioControl.c **** 
  56:.\AudioControl.c **** #if(USBFS_EP_MM == USBFS__EP_DMAAUTO) 
  57:.\AudioControl.c ****   #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
  58:.\AudioControl.c ****   extern uint8 outRam[OUT_AUDIOMAXPKT];          /* USB Auto DMA mode audio OUT EP buffer */
  59:.\AudioControl.c ****   #endif
  60:.\AudioControl.c ****   #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
  61:.\AudioControl.c ****   extern uint8 inRam[IN_AUDIOMAXPKT];            /* USB Auto DMA mode audio IN EP buffer */
  62:.\AudioControl.c ****   extern uint16 inCnt;                           /* USB audio IN EP actual count (varies based on a
  63:.\AudioControl.c ****   #endif
  64:.\AudioControl.c **** #endif
  65:.\AudioControl.c **** 
  66:.\AudioControl.c **** /* structure definition for Droop_Filter state retention fix */
  67:.\AudioControl.c **** static Droop_Filter_Custom_BACKUP_STRUCT  Droop_Filter_Custom_backup = 
  68:.\AudioControl.c **** {
  69:.\AudioControl.c ****     Droop_Filter_CUSTOM_DISABLED,
  70:.\AudioControl.c ****     Droop_Filter_CUSTOM_RUN_MASK,
  71:.\AudioControl.c **** };
  72:.\AudioControl.c **** 
  73:.\AudioControl.c **** uint8 USBOutDmaChan;            /* DMA Channel: USB EP memory to OUT circular SRAM  */
  74:.\AudioControl.c **** CYPDATA uint8 txDmaChan;        /* DMA Channel: OUT circular buffer to ByteSwap Tx DMA */
  75:.\AudioControl.c **** CYPDATA uint8 I2STxDMAChan;     /* DMA Channel: ByteSwap Tx to I2S Tx DMA */
  76:.\AudioControl.c **** uint8 USBInDmaChan;             /* USB IN circular SRAM memory to IN EP DMA */
  77:.\AudioControl.c **** CYPDATA uint8 rxDmaChan;        /* DFB  -> IN Circular buffer DMA */
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 5


  78:.\AudioControl.c **** 
  79:.\AudioControl.c **** CYPDATA uint8 txTd[NUM_TDS];    /* OUT circular buffer to ByteSwap Tx TDs */
  80:.\AudioControl.c **** CYPDATA uint8 rxTd[NUM_TDS];    /* ByteSwap Rx to circular IN buffer TDs */
  81:.\AudioControl.c **** uint8 I2STxTd;                  /* ByteSwap Tx to I2S Tx TD */
  82:.\AudioControl.c **** uint8 I2SRxTd;                  /* I2S Rx to ByteSwap Rx TD */
  83:.\AudioControl.c **** uint8 USBOutTd[2];              /* USB EP memory to OUT circular SRAM TDs */
  84:.\AudioControl.c **** uint8 USBInTd[2];               /* USB IN circular SRAM memory to IN EP TDs */
  85:.\AudioControl.c **** 
  86:.\AudioControl.c **** CYBIT  resetTx = 0;             /* audio OUT stream reset flag */
  87:.\AudioControl.c **** CYBIT  outPlaying = 0;          /* audio OUT stream (playback) active flag */
  88:.\AudioControl.c **** uint16 outLevel = 0;            /* audio OUT buffer level pointer */
  89:.\AudioControl.c **** uint16 outUsbCount = 0;         /* audio OUT USB interface count */
  90:.\AudioControl.c **** uint16 outUsbShadow = 0;        /* audio OUT temp count */
  91:.\AudioControl.c **** uint8  outBuffer[OUT_BUFSIZE];  /* audio OUT circular buffer */
  92:.\AudioControl.c **** uint16 outBufIndex = 0;         /* audio OUT USB DMA index */
  93:.\AudioControl.c **** 
  94:.\AudioControl.c **** #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
  95:.\AudioControl.c **** CYBIT  resetRx = 0;             /* audio IN stream reset flag */
  96:.\AudioControl.c **** CYBIT  inPlaying = 0;           /* audio IN stream (recording) active flag */
  97:.\AudioControl.c **** uint16 inLevel = IN_BUFSIZE;    /* audio IN buffer level pointer */
  98:.\AudioControl.c **** uint16 inUsbCount = 0;          /* audio IN USB interface count */
  99:.\AudioControl.c **** uint16 inUsbShadow = 0;         /* audio IN temp count */
 100:.\AudioControl.c **** CYBIT  clearInBuffer = 0;       /* audio IN buffer reset flag */
 101:.\AudioControl.c **** uint8 inBuffer[IN_BUFSIZE];     /* audio IN circular buffer */
 102:.\AudioControl.c **** uint16 inBufIndex = 0;          /* audio IN USB DMA index */
 103:.\AudioControl.c **** #endif
 104:.\AudioControl.c **** 
 105:.\AudioControl.c **** 
 106:.\AudioControl.c **** CYBIT lowPowerIdle = TRUE;          /* audio low power mode flag (low power = PLL etc. shut down) *
 107:.\AudioControl.c **** 
 108:.\AudioControl.c **** CYPDATA uint8 setRate = FREQUENCY_NOT_SET; /* Audio sample rate configured or not in AudioClkGen co
 109:.\AudioControl.c **** CYBIT rateChangedWhileInactive = FALSE;    /* Sample rate changed while the system was in low power
 110:.\AudioControl.c **** CYPDATA uint8 clockSwitchTimer = 0;        /* Timer for audio clock shutdown when the streaming int
 111:.\AudioControl.c **** CYBIT audioClkConfigured = FALSE;          /* AudioClkGen is configured with one or the other sampl
 112:.\AudioControl.c **** 
 113:.\AudioControl.c **** CYPDATA uint8 rate;             /* macro which holds the sample rate issues by the USB host */
 114:.\AudioControl.c **** 
 115:.\AudioControl.c **** #ifdef DISABLE_DFB
 116:.\AudioControl.c **** uint8 leftCICOutput[CIC_OUT_BUFSIZE];
 117:.\AudioControl.c **** uint8 rightCICOutput[CIC_OUT_BUFSIZE];
 118:.\AudioControl.c **** #endif
 119:.\AudioControl.c **** 
 120:.\AudioControl.c **** /*******************************************************************************
 121:.\AudioControl.c **** * Function Name: ConfigureAudioPath
 122:.\AudioControl.c **** ********************************************************************************
 123:.\AudioControl.c **** * Summary:
 124:.\AudioControl.c **** *       This function sets up the DMA and starts USB, I2S and interrupts
 125:.\AudioControl.c **** *       to get the PSoC 5 device configured for audio streaming mode
 126:.\AudioControl.c **** *
 127:.\AudioControl.c **** * Parameters:
 128:.\AudioControl.c **** *  void
 129:.\AudioControl.c **** *
 130:.\AudioControl.c **** * Return:
 131:.\AudioControl.c **** *  void
 132:.\AudioControl.c **** *
 133:.\AudioControl.c **** *******************************************************************************/
 134:.\AudioControl.c **** void ConfigureAudioPath(void)
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 6


 135:.\AudioControl.c **** {
 152              		.loc 1 135 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 90B5     		push	{r4, r7, lr}
 157              		.cfi_def_cfa_offset 12
 158              		.cfi_offset 4, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 83B0     		sub	sp, sp, #12
 162              		.cfi_def_cfa_offset 24
 163 0004 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 136:.\AudioControl.c ****     uint8 index;
 137:.\AudioControl.c ****     
 138:.\AudioControl.c **** //	CyPins_SetPin(PSOC_CODEC_PWR_0); /* Enable this code only if PSOC_CODEC_PWR pin is enabled in th
 139:.\AudioControl.c **** 	
 140:.\AudioControl.c **** 	#ifdef CODEC_I2C_SUPPORTED
 141:.\AudioControl.c **** 	I2C_Master_Start();  		/* Start I2C for codec configuration */
 142:.\AudioControl.c ****     #endif
 143:.\AudioControl.c **** 	
 144:.\AudioControl.c **** 	CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO); /* Set the system clock to IMO */
 165              		.loc 1 144 0
 166 0006 0020     		movs	r0, #0
 167 0008 FFF7FEFF 		bl	CyMasterClk_SetSource
 145:.\AudioControl.c **** 	CyDelayFreq(DELAY_FREQ_PARAM_VALUE_IMO);
 168              		.loc 1 145 0
 169 000c 9448     		ldr	r0, .L8
 170 000e FFF7FEFF 		bl	CyDelayFreq
 146:.\AudioControl.c ****     CyDelayUs(100);    
 171              		.loc 1 146 0
 172 0012 6420     		movs	r0, #100
 173 0014 FFF7FEFF 		bl	CyDelayUs
 147:.\AudioControl.c ****     CyPLL_OUT_Stop();
 174              		.loc 1 147 0
 175 0018 FFF7FEFF 		bl	CyPLL_OUT_Stop
 148:.\AudioControl.c ****         
 149:.\AudioControl.c ****     CY_SET_REG8((void CYXDATA *)(CYDEV_FASTCLK_PLL_CFG1), 0); /* Change the settings for the PLL fi
 176              		.loc 1 149 0
 177 001c 914B     		ldr	r3, .L8+4
 178 001e 0022     		movs	r2, #0
 179 0020 1A70     		strb	r2, [r3]
 150:.\AudioControl.c **** 
 151:.\AudioControl.c ****     AudioClkGen_Start();
 180              		.loc 1 151 0
 181 0022 FFF7FEFF 		bl	AudioClkGen_Start
 152:.\AudioControl.c ****     rate = RATE_44KHZ;
 182              		.loc 1 152 0
 183 0026 904B     		ldr	r3, .L8+8
 184 0028 0122     		movs	r2, #1
 185 002a 1A70     		strb	r2, [r3]
 153:.\AudioControl.c ****     CyPLL_OUT_SetSource(CY_PLL_SOURCE_DSI);
 186              		.loc 1 153 0
 187 002c 0220     		movs	r0, #2
 188 002e FFF7FEFF 		bl	CyPLL_OUT_SetSource
 154:.\AudioControl.c ****     
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 7


 155:.\AudioControl.c **** 	/* Starting the MCLK always as required by some codecs */
 156:.\AudioControl.c **** 	#ifdef MCLK_ALWAYS_ENABLED
 157:.\AudioControl.c **** 	CyPLL_OUT_Start(0);
 189              		.loc 1 157 0
 190 0032 0020     		movs	r0, #0
 191 0034 FFF7FEFF 		bl	CyPLL_OUT_Start
 158:.\AudioControl.c **** 	AudioClkGen_SetAudioRate(RATE_48KHZ);
 192              		.loc 1 158 0
 193 0038 0020     		movs	r0, #0
 194 003a FFF7FEFF 		bl	AudioClkGen_SetAudioRate
 159:.\AudioControl.c **** 	#ifdef I2S_PIN_DRIVE_MODE_CHANGE_IN_IDLE_MODE
 160:.\AudioControl.c **** 	    PSOC_I2S_MCLK_SetDriveMode(PSOC_I2S_MCLK_DM_STRONG);		
 195              		.loc 1 160 0
 196 003e 0C20     		movs	r0, #12
 197 0040 FFF7FEFF 		bl	PSOC_I2S_MCLK_SetDriveMode
 161:.\AudioControl.c ****     #endif
 162:.\AudioControl.c **** 	#endif 
 163:.\AudioControl.c **** 
 164:.\AudioControl.c ****     /* Audio sample SRAM to ByteSwap and vice versa DMA configuration*/
 165:.\AudioControl.c ****     /*______________________SRAM to ByteSwap (Out path) & DFB to SRAM (In path) DMA Config Start___
 166:.\AudioControl.c ****     
 167:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 168:.\AudioControl.c ****     /* Set up the TX DMA, 1 byte bursts, each burst requires a request, upper addr of 0 */
 169:.\AudioControl.c ****     txDmaChan = TxDMA_DmaInitialize(DMA_BURSTCOUNT, RQST_PER_BURST, HI16(CYREG_SRAM_DATA_MBASE), HI
 198              		.loc 1 169 0
 199 0044 0120     		movs	r0, #1
 200 0046 0121     		movs	r1, #1
 201 0048 4FF40052 		mov	r2, #8192
 202 004c 4FF48043 		mov	r3, #16384
 203 0050 FFF7FEFF 		bl	TxDMA_DmaInitialize
 204 0054 0346     		mov	r3, r0
 205 0056 1A46     		mov	r2, r3
 206 0058 844B     		ldr	r3, .L8+12
 207 005a 1A70     		strb	r2, [r3]
 170:.\AudioControl.c ****     #endif
 171:.\AudioControl.c ****     
 172:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 173:.\AudioControl.c ****     /* Rx DMA Config, 1 byte bursts, each burst requires a request, upper addr of 0 */
 174:.\AudioControl.c ****     rxDmaChan = RxDMA_DmaInitialize(IN_DMA_BURSTCOUNT, RQST_PER_BURST, HI16(CYDEV_PERIPH_BASE), HI1
 208              		.loc 1 174 0
 209 005c 0220     		movs	r0, #2
 210 005e 0121     		movs	r1, #1
 211 0060 4FF48042 		mov	r2, #16384
 212 0064 4FF40053 		mov	r3, #8192
 213 0068 FFF7FEFF 		bl	RxDMA_DmaInitialize
 214 006c 0346     		mov	r3, r0
 215 006e 1A46     		mov	r2, r3
 216 0070 7F4B     		ldr	r3, .L8+16
 217 0072 1A70     		strb	r2, [r3]
 175:.\AudioControl.c ****     #endif
 176:.\AudioControl.c ****     
 177:.\AudioControl.c ****     for (index=0; index < NUM_TDS; index++)
 218              		.loc 1 177 0
 219 0074 0023     		movs	r3, #0
 220 0076 FB71     		strb	r3, [r7, #7]
 221 0078 10E0     		b	.L2
 222              	.L3:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 8


 178:.\AudioControl.c ****     {
 179:.\AudioControl.c ****         /* Request for a set of TDs from the pool */
 180:.\AudioControl.c ****         #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 181:.\AudioControl.c ****         txTd[index] = CyDmaTdAllocate();
 223              		.loc 1 181 0 discriminator 3
 224 007a FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 225 007c FFF7FEFF 		bl	CyDmaTdAllocate
 226 0080 0346     		mov	r3, r0
 227 0082 1A46     		mov	r2, r3
 228 0084 7B4B     		ldr	r3, .L8+20
 229 0086 1A55     		strb	r2, [r3, r4]
 182:.\AudioControl.c ****         #endif
 183:.\AudioControl.c ****         
 184:.\AudioControl.c ****         #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 185:.\AudioControl.c ****         rxTd[index] = CyDmaTdAllocate();
 230              		.loc 1 185 0 discriminator 3
 231 0088 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 232 008a FFF7FEFF 		bl	CyDmaTdAllocate
 233 008e 0346     		mov	r3, r0
 234 0090 1A46     		mov	r2, r3
 235 0092 794B     		ldr	r3, .L8+24
 236 0094 1A55     		strb	r2, [r3, r4]
 177:.\AudioControl.c ****     {
 237              		.loc 1 177 0 discriminator 3
 238 0096 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 239 0098 0133     		adds	r3, r3, #1
 240 009a FB71     		strb	r3, [r7, #7]
 241              	.L2:
 177:.\AudioControl.c ****     {
 242              		.loc 1 177 0 is_stmt 0 discriminator 1
 243 009c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 244 009e 072B     		cmp	r3, #7
 245 00a0 EBD9     		bls	.L3
 186:.\AudioControl.c ****         #endif
 187:.\AudioControl.c ****     }    
 188:.\AudioControl.c ****         
 189:.\AudioControl.c ****     for (index=0; index < NUM_TDS; index++)
 246              		.loc 1 189 0 is_stmt 1
 247 00a2 0023     		movs	r3, #0
 248 00a4 FB71     		strb	r3, [r7, #7]
 249 00a6 56E0     		b	.L4
 250              	.L7:
 190:.\AudioControl.c ****     {
 191:.\AudioControl.c ****         #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 192:.\AudioControl.c ****         /* Configure this Td chain as follows:
 193:.\AudioControl.c ****          * Loop through all of the TDs , Increment the source address, but not the destination addr
 194:.\AudioControl.c ****         CyDmaTdSetConfiguration(txTd[index], OUT_TRANS_SIZE, txTd[(index+1)%NUM_TDS], TD_INC_SRC_AD
 251              		.loc 1 194 0 discriminator 3
 252 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 253 00aa 724A     		ldr	r2, .L8+20
 254 00ac D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 255 00ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 256 00b0 5A1C     		adds	r2, r3, #1
 257 00b2 724B     		ldr	r3, .L8+28
 258 00b4 1340     		ands	r3, r3, r2
 259 00b6 002B     		cmp	r3, #0
 260 00b8 03DA     		bge	.L5
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 9


 261 00ba 013B     		subs	r3, r3, #1
 262 00bc 63F00703 		orn	r3, r3, #7
 263 00c0 0133     		adds	r3, r3, #1
 264              	.L5:
 265 00c2 1A46     		mov	r2, r3
 266 00c4 6B4B     		ldr	r3, .L8+20
 267 00c6 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 268 00c8 0846     		mov	r0, r1
 269 00ca 9021     		movs	r1, #144
 270 00cc 1A46     		mov	r2, r3
 271 00ce 0523     		movs	r3, #5
 272 00d0 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 195:.\AudioControl.c ****         #endif
 196:.\AudioControl.c ****         
 197:.\AudioControl.c ****         #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 198:.\AudioControl.c ****         /* Configure this Td chain as follows:
 199:.\AudioControl.c ****          *  Loop through all of the TDs, Increment the destination address, but not the source addr
 200:.\AudioControl.c ****         CyDmaTdSetConfiguration(rxTd[index], IN_TRANS_SIZE, rxTd[(index+1)%NUM_TDS], TD_INC_DST_ADR
 273              		.loc 1 200 0 discriminator 3
 274 00d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 275 00d6 684A     		ldr	r2, .L8+24
 276 00d8 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 277 00da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 278 00dc 5A1C     		adds	r2, r3, #1
 279 00de 674B     		ldr	r3, .L8+28
 280 00e0 1340     		ands	r3, r3, r2
 281 00e2 002B     		cmp	r3, #0
 282 00e4 03DA     		bge	.L6
 283 00e6 013B     		subs	r3, r3, #1
 284 00e8 63F00703 		orn	r3, r3, #7
 285 00ec 0133     		adds	r3, r3, #1
 286              	.L6:
 287 00ee 1A46     		mov	r2, r3
 288 00f0 614B     		ldr	r3, .L8+24
 289 00f2 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 290 00f4 0846     		mov	r0, r1
 291 00f6 6021     		movs	r1, #96
 292 00f8 1A46     		mov	r2, r3
 293 00fa 0623     		movs	r3, #6
 294 00fc FFF7FEFF 		bl	CyDmaTdSetConfiguration
 201:.\AudioControl.c ****         #endif
 202:.\AudioControl.c ****         
 203:.\AudioControl.c ****         #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 204:.\AudioControl.c ****         /* From the Audio Out SRAM buffer to ByteSwap component input FIFO */
 205:.\AudioControl.c ****         CyDmaTdSetAddress(txTd[index], LO16((uint32)outBuffer+(OUT_TRANS_SIZE*index)), LO16((uint32
 295              		.loc 1 205 0 discriminator 3
 296 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 297 0102 5C4A     		ldr	r2, .L8+20
 298 0104 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 299 0106 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 300 0108 9BB2     		uxth	r3, r3
 301 010a 1A46     		mov	r2, r3	@ movhi
 302 010c D200     		lsls	r2, r2, #3
 303 010e 1344     		add	r3, r3, r2
 304 0110 1B01     		lsls	r3, r3, #4
 305 0112 9AB2     		uxth	r2, r3
 306 0114 5A4B     		ldr	r3, .L8+32
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 10


 307 0116 9BB2     		uxth	r3, r3
 308 0118 1344     		add	r3, r3, r2
 309 011a 9BB2     		uxth	r3, r3
 310 011c 0846     		mov	r0, r1
 311 011e 1946     		mov	r1, r3
 312 0120 46F24042 		movw	r2, #25664
 313 0124 FFF7FEFF 		bl	CyDmaTdSetAddress
 206:.\AudioControl.c ****         #endif
 207:.\AudioControl.c ****         
 208:.\AudioControl.c ****         #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 209:.\AudioControl.c ****         /* From the Droop Filter DFB component output holding register to Audio In SRAM buffer */
 210:.\AudioControl.c ****         CyDmaTdSetAddress(rxTd[index], LO16((uint32)FILTER_SOURCE_REG_POINTER), LO16((uint32)inBuff
 314              		.loc 1 210 0 discriminator 3
 315 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 316 012a 534A     		ldr	r2, .L8+24
 317 012c D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 318 012e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 319 0130 9BB2     		uxth	r3, r3
 320 0132 1A46     		mov	r2, r3	@ movhi
 321 0134 5200     		lsls	r2, r2, #1
 322 0136 1344     		add	r3, r3, r2
 323 0138 5B01     		lsls	r3, r3, #5
 324 013a 9AB2     		uxth	r2, r3
 325 013c 514B     		ldr	r3, .L8+36
 326 013e 9BB2     		uxth	r3, r3
 327 0140 1344     		add	r3, r3, r2
 328 0142 9BB2     		uxth	r3, r3
 329 0144 0846     		mov	r0, r1
 330 0146 4CF2A871 		movw	r1, #51112
 331 014a 1A46     		mov	r2, r3
 332 014c FFF7FEFF 		bl	CyDmaTdSetAddress
 189:.\AudioControl.c ****     {
 333              		.loc 1 189 0 discriminator 3
 334 0150 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 335 0152 0133     		adds	r3, r3, #1
 336 0154 FB71     		strb	r3, [r7, #7]
 337              	.L4:
 189:.\AudioControl.c ****     {
 338              		.loc 1 189 0 is_stmt 0 discriminator 1
 339 0156 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 340 0158 072B     		cmp	r3, #7
 341 015a A5D9     		bls	.L7
 211:.\AudioControl.c ****         #endif
 212:.\AudioControl.c ****     }
 213:.\AudioControl.c ****     /* __________________________________SRAM to ByteSwap DMA Config End___________________________
 214:.\AudioControl.c ****     
 215:.\AudioControl.c ****     
 216:.\AudioControl.c ****     
 217:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 218:.\AudioControl.c ****     /* __________________________________ByteSwap to I2S DMA Config Start__________________________
 219:.\AudioControl.c ****     I2STxDMAChan = I2S_Tx_DMA_DmaInitialize(DMA_BURSTCOUNT, RQST_PER_BURST, HI16(CYDEV_PERIPH_BASE)
 342              		.loc 1 219 0 is_stmt 1
 343 015c 0120     		movs	r0, #1
 344 015e 0121     		movs	r1, #1
 345 0160 4FF48042 		mov	r2, #16384
 346 0164 4FF48043 		mov	r3, #16384
 347 0168 FFF7FEFF 		bl	I2S_Tx_DMA_DmaInitialize
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 11


 348 016c 0346     		mov	r3, r0
 349 016e 1A46     		mov	r2, r3
 350 0170 454B     		ldr	r3, .L8+40
 351 0172 1A70     		strb	r2, [r3]
 220:.\AudioControl.c ****     I2STxTd = CyDmaTdAllocate();
 352              		.loc 1 220 0
 353 0174 FFF7FEFF 		bl	CyDmaTdAllocate
 354 0178 0346     		mov	r3, r0
 355 017a 1A46     		mov	r2, r3
 356 017c 434B     		ldr	r3, .L8+44
 357 017e 1A70     		strb	r2, [r3]
 221:.\AudioControl.c ****     CyDmaTdSetConfiguration(I2STxTd, I2SDMA_TRANS_SIZE, I2STxTd, I2SDMA_CONFIG);
 358              		.loc 1 221 0
 359 0180 424B     		ldr	r3, .L8+44
 360 0182 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 361 0184 414B     		ldr	r3, .L8+44
 362 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 0188 1046     		mov	r0, r2
 364 018a 0121     		movs	r1, #1
 365 018c 1A46     		mov	r2, r3
 366 018e 0023     		movs	r3, #0
 367 0190 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 222:.\AudioControl.c ****     CyDmaTdSetAddress(I2STxTd, LO16((uint32)ByteSwap_Tx_dp_ByteSwap_u0__F1_REG), LO16((uint32)I2S_T
 368              		.loc 1 222 0
 369 0194 3D4B     		ldr	r3, .L8+44
 370 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 371 0198 1846     		mov	r0, r3
 372 019a 46F25041 		movw	r1, #25680
 373 019e 46F24142 		movw	r2, #25665
 374 01a2 FFF7FEFF 		bl	CyDmaTdSetAddress
 223:.\AudioControl.c ****     CyDmaChSetInitialTd(I2STxDMAChan, I2STxTd);
 375              		.loc 1 223 0
 376 01a6 384B     		ldr	r3, .L8+40
 377 01a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 378 01aa 384B     		ldr	r3, .L8+44
 379 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 380 01ae 1046     		mov	r0, r2
 381 01b0 1946     		mov	r1, r3
 382 01b2 FFF7FEFF 		bl	CyDmaChSetInitialTd
 224:.\AudioControl.c ****     /* __________________________________ByteSwap to I2S DMA Config End____________________________
 225:.\AudioControl.c ****     #endif
 226:.\AudioControl.c ****     
 227:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 228:.\AudioControl.c ****     /* USB Out DMA Config:  Entire chain is sent based on a single request from the CPU. Td's are c
 229:.\AudioControl.c ****     USBOutDmaChan = USBOutDMA_DmaInitialize(DMA_BURSTCOUNT, USBDMA_RQST_PER_BURST, HI16(CYREG_SRAM_
 383              		.loc 1 229 0
 384 01b6 0120     		movs	r0, #1
 385 01b8 0021     		movs	r1, #0
 386 01ba 4FF40052 		mov	r2, #8192
 387 01be 4FF40053 		mov	r3, #8192
 388 01c2 FFF7FEFF 		bl	USBOutDMA_DmaInitialize
 389 01c6 0346     		mov	r3, r0
 390 01c8 1A46     		mov	r2, r3
 391 01ca 314B     		ldr	r3, .L8+48
 392 01cc 1A70     		strb	r2, [r3]
 230:.\AudioControl.c ****     USBOutTd[0] = CyDmaTdAllocate();
 393              		.loc 1 230 0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 12


 394 01ce FFF7FEFF 		bl	CyDmaTdAllocate
 395 01d2 0346     		mov	r3, r0
 396 01d4 1A46     		mov	r2, r3
 397 01d6 2F4B     		ldr	r3, .L8+52
 398 01d8 1A70     		strb	r2, [r3]
 231:.\AudioControl.c ****     USBOutTd[1] = CyDmaTdAllocate();
 399              		.loc 1 231 0
 400 01da FFF7FEFF 		bl	CyDmaTdAllocate
 401 01de 0346     		mov	r3, r0
 402 01e0 1A46     		mov	r2, r3
 403 01e2 2C4B     		ldr	r3, .L8+52
 404 01e4 5A70     		strb	r2, [r3, #1]
 232:.\AudioControl.c ****     #endif
 233:.\AudioControl.c ****     
 234:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 235:.\AudioControl.c ****     /* USB In DMA Config: Entire chain is sent based on a single request from the CPU. Td's are con
 236:.\AudioControl.c ****     USBInDmaChan = USBInDMA_DmaInitialize(DMA_BURSTCOUNT, USBDMA_RQST_PER_BURST, HI16(CYREG_SRAM_DA
 405              		.loc 1 236 0
 406 01e6 0120     		movs	r0, #1
 407 01e8 0021     		movs	r1, #0
 408 01ea 4FF40052 		mov	r2, #8192
 409 01ee 4FF40053 		mov	r3, #8192
 410 01f2 FFF7FEFF 		bl	USBInDMA_DmaInitialize
 411 01f6 0346     		mov	r3, r0
 412 01f8 1A46     		mov	r2, r3
 413 01fa 274B     		ldr	r3, .L8+56
 414 01fc 1A70     		strb	r2, [r3]
 237:.\AudioControl.c ****     USBInTd[0] = CyDmaTdAllocate();
 415              		.loc 1 237 0
 416 01fe FFF7FEFF 		bl	CyDmaTdAllocate
 417 0202 0346     		mov	r3, r0
 418 0204 1A46     		mov	r2, r3
 419 0206 254B     		ldr	r3, .L8+60
 420 0208 1A70     		strb	r2, [r3]
 238:.\AudioControl.c ****     USBInTd[1] = CyDmaTdAllocate();
 421              		.loc 1 238 0
 422 020a FFF7FEFF 		bl	CyDmaTdAllocate
 423 020e 0346     		mov	r3, r0
 424 0210 1A46     		mov	r2, r3
 425 0212 224B     		ldr	r3, .L8+60
 426 0214 5A70     		strb	r2, [r3, #1]
 239:.\AudioControl.c ****     #endif
 240:.\AudioControl.c ****     
 241:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 242:.\AudioControl.c ****     isr_TxDMADone_StartEx(TxDMADone_Interrupt);
 427              		.loc 1 242 0
 428 0216 2248     		ldr	r0, .L8+64
 429 0218 FFF7FEFF 		bl	isr_TxDMADone_StartEx
 243:.\AudioControl.c ****     #endif
 244:.\AudioControl.c ****     
 245:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 246:.\AudioControl.c ****     isr_RxDMADone_StartEx(RxDMADone_Interrupt);
 430              		.loc 1 246 0
 431 021c 2148     		ldr	r0, .L8+68
 432 021e FFF7FEFF 		bl	isr_RxDMADone_StartEx
 247:.\AudioControl.c ****     isr_InDMADone_StartEx(InDMADone_Interrupt);
 433              		.loc 1 247 0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 13


 434 0222 2148     		ldr	r0, .L8+72
 435 0224 FFF7FEFF 		bl	isr_InDMADone_StartEx
 248:.\AudioControl.c ****     #endif
 249:.\AudioControl.c ****     
 250:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 251:.\AudioControl.c ****     /* set TX FIFO trigger to 2 bytes (half-empty) to increase timing margin */
 252:.\AudioControl.c ****     I2S_TX_AUX_CONTROL_REG = I2S_TX_AUX_CONTROL_REG | FIFO_HALF_EMPTY_MASK;
 436              		.loc 1 252 0
 437 0228 204A     		ldr	r2, .L8+76
 438 022a 204B     		ldr	r3, .L8+76
 439 022c 1B78     		ldrb	r3, [r3]
 440 022e DBB2     		uxtb	r3, r3
 441 0230 43F00C03 		orr	r3, r3, #12
 442 0234 DBB2     		uxtb	r3, r3
 443 0236 1370     		strb	r3, [r2]
 253:.\AudioControl.c ****     #endif
 254:.\AudioControl.c ****     
 255:.\AudioControl.c ****     #ifdef ENABLE_VOLUME_CONTROL
 256:.\AudioControl.c ****     InitUSBVolumeLevel();
 257:.\AudioControl.c ****     #endif
 258:.\AudioControl.c ****     
 259:.\AudioControl.c ****     #ifdef ENABLE_PDM 
 260:.\AudioControl.c ****         Clock_CIC_Stop();
 444              		.loc 1 260 0
 445 0238 FFF7FEFF 		bl	Clock_CIC_Stop
 261:.\AudioControl.c ****         PDM_CIC_Start();
 446              		.loc 1 261 0
 447 023c FFF7FEFF 		bl	PDM_CIC_Start
 262:.\AudioControl.c ****         CICOutDMA_ConfigAndStart();
 448              		.loc 1 262 0
 449 0240 FFF7FEFF 		bl	CICOutDMA_ConfigAndStart
 263:.\AudioControl.c ****         isr_CICOverflow_StartEx(cicOverflow_Interrupt);
 450              		.loc 1 263 0
 451 0244 1A48     		ldr	r0, .L8+80
 452 0246 FFF7FEFF 		bl	isr_CICOverflow_StartEx
 264:.\AudioControl.c **** 		
 265:.\AudioControl.c ****         Droop_Filter_DALIGN_REG = 0x0C;  /* Align Data A & B holding register */
 453              		.loc 1 265 0
 454 024a 1A4B     		ldr	r3, .L8+84
 455 024c 0C22     		movs	r2, #12
 456 024e 1A70     		strb	r2, [r3]
 266:.\AudioControl.c ****         Droop_Filter_COHER_REG  = 0x55;  /* holding MID & staging MID for both A and B registers */
 457              		.loc 1 266 0
 458 0250 194B     		ldr	r3, .L8+88
 459 0252 5522     		movs	r2, #85
 460 0254 1A70     		strb	r2, [r3]
 267:.\AudioControl.c ****         Droop_Filter_Start();
 461              		.loc 1 267 0
 462 0256 FFF7FEFF 		bl	Droop_Filter_Start
 268:.\AudioControl.c ****     #endif
 269:.\AudioControl.c **** 
 270:.\AudioControl.c ****    
 271:.\AudioControl.c ****     /* USER_CODE: [Audio Initialization] Placeholder for user code to initialize additional audio p
 272:.\AudioControl.c ****      * external audio peripheral configuration */
 273:.\AudioControl.c **** }
 463              		.loc 1 273 0
 464 025a 0C37     		adds	r7, r7, #12
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 14


 465              		.cfi_def_cfa_offset 12
 466 025c BD46     		mov	sp, r7
 467              		.cfi_def_cfa_register 13
 468              		@ sp needed
 469 025e 90BD     		pop	{r4, r7, pc}
 470              	.L9:
 471              		.align	2
 472              	.L8:
 473 0260 00366E01 		.word	24000000
 474 0264 21420040 		.word	1073758753
 475 0268 00000000 		.word	rate
 476 026c 00000000 		.word	txDmaChan
 477 0270 00000000 		.word	rxDmaChan
 478 0274 00000000 		.word	txTd
 479 0278 00000000 		.word	rxTd
 480 027c 07000080 		.word	-2147483641
 481 0280 00000000 		.word	outBuffer
 482 0284 00000000 		.word	inBuffer
 483 0288 00000000 		.word	I2STxDMAChan
 484 028c 00000000 		.word	I2STxTd
 485 0290 00000000 		.word	USBOutDmaChan
 486 0294 00000000 		.word	USBOutTd
 487 0298 00000000 		.word	USBInDmaChan
 488 029c 00000000 		.word	USBInTd
 489 02a0 00000000 		.word	TxDMADone_Interrupt
 490 02a4 00000000 		.word	RxDMADone_Interrupt
 491 02a8 00000000 		.word	InDMADone_Interrupt
 492 02ac 91640040 		.word	1073767569
 493 02b0 00000000 		.word	cicOverflow_Interrupt
 494 02b4 B4C70040 		.word	1073792948
 495 02b8 B0C70040 		.word	1073792944
 496              		.cfi_endproc
 497              	.LFE56:
 498              		.size	ConfigureAudioPath, .-ConfigureAudioPath
 499              		.section	.text.ProcessAudioOut,"ax",%progbits
 500              		.align	2
 501              		.global	ProcessAudioOut
 502              		.thumb
 503              		.thumb_func
 504              		.type	ProcessAudioOut, %function
 505              	ProcessAudioOut:
 506              	.LFB57:
 274:.\AudioControl.c **** 
 275:.\AudioControl.c **** /*******************************************************************************
 276:.\AudioControl.c **** * Function Name: ProcessAudioOut
 277:.\AudioControl.c **** ********************************************************************************
 278:.\AudioControl.c **** * Summary:
 279:.\AudioControl.c **** *        Handle audio out data, setup USB DMA and trigger the DMA to transfer 
 280:.\AudioControl.c **** *        audio samples from SRAM USB endpoint memory to SRAM audio circular 
 281:.\AudioControl.c **** *        buffer. The API also starts the I2S transmit when USB audio out streaming 
 282:.\AudioControl.c **** *        is active
 283:.\AudioControl.c **** *
 284:.\AudioControl.c **** * Parameters:
 285:.\AudioControl.c **** *  void
 286:.\AudioControl.c **** *
 287:.\AudioControl.c **** * Return:
 288:.\AudioControl.c **** *  void
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 15


 289:.\AudioControl.c **** *
 290:.\AudioControl.c **** *******************************************************************************/
 291:.\AudioControl.c **** #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 292:.\AudioControl.c **** void ProcessAudioOut(void) 
 293:.\AudioControl.c **** {
 507              		.loc 1 293 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 8
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 0000 80B5     		push	{r7, lr}
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 0002 82B0     		sub	sp, sp, #8
 516              		.cfi_def_cfa_offset 16
 517 0004 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 294:.\AudioControl.c **** 	uint16 count;
 295:.\AudioControl.c ****     uint16 remain;
 296:.\AudioControl.c ****     
 297:.\AudioControl.c ****     if( TRUE == audioClkConfigured
 519              		.loc 1 297 0
 520 0006 7D4B     		ldr	r3, .L17
 521 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 522 000a 012B     		cmp	r3, #1
 523 000c 40F0F380 		bne	.L10
 298:.\AudioControl.c ****         
 299:.\AudioControl.c ****       )
 300:.\AudioControl.c ****     {
 301:.\AudioControl.c ****         if (resetTx)         /* Check TX buffer reset condition and clear pointers if required */
 524              		.loc 1 301 0
 525 0010 7B4B     		ldr	r3, .L17+4
 526 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 0014 002B     		cmp	r3, #0
 528 0016 08D0     		beq	.L12
 302:.\AudioControl.c ****         {
 303:.\AudioControl.c ****             outBufIndex = 0;
 529              		.loc 1 303 0
 530 0018 7A4B     		ldr	r3, .L17+8
 531 001a 0022     		movs	r2, #0
 532 001c 1A80     		strh	r2, [r3]	@ movhi
 304:.\AudioControl.c ****             outUsbCount = 0;
 533              		.loc 1 304 0
 534 001e 7A4B     		ldr	r3, .L17+12
 535 0020 0022     		movs	r2, #0
 536 0022 1A80     		strh	r2, [r3]	@ movhi
 305:.\AudioControl.c ****             resetTx = 0;
 537              		.loc 1 305 0
 538 0024 764B     		ldr	r3, .L17+4
 539 0026 0022     		movs	r2, #0
 540 0028 1A70     		strb	r2, [r3]
 541              	.L12:
 306:.\AudioControl.c ****         }
 307:.\AudioControl.c ****         
 308:.\AudioControl.c ****         CyDmaChDisable(USBOutDmaChan);    /* Disable the USBOut DMA channel */
 542              		.loc 1 308 0
 543 002a 784B     		ldr	r3, .L17+16
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 16


 544 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 545 002e 1846     		mov	r0, r3
 546 0030 FFF7FEFF 		bl	CyDmaChDisable
 309:.\AudioControl.c ****         
 310:.\AudioControl.c ****         count = USBFS_GetEPCount(AUDIO_OUT_ENDPOINT);
 547              		.loc 1 310 0
 548 0034 0120     		movs	r0, #1
 549 0036 FFF7FEFF 		bl	USBFS_GetEPCount
 550 003a 0346     		mov	r3, r0
 551 003c FB80     		strh	r3, [r7, #6]	@ movhi
 311:.\AudioControl.c ****     
 312:.\AudioControl.c ****         /* Update of usbCount needs to be atomic */
 313:.\AudioControl.c ****         isr_TxDMADone_Disable();
 552              		.loc 1 313 0
 553 003e FFF7FEFF 		bl	isr_TxDMADone_Disable
 314:.\AudioControl.c ****         outUsbCount += count;
 554              		.loc 1 314 0
 555 0042 714B     		ldr	r3, .L17+12
 556 0044 1A88     		ldrh	r2, [r3]
 557 0046 FB88     		ldrh	r3, [r7, #6]	@ movhi
 558 0048 1344     		add	r3, r3, r2
 559 004a 9AB2     		uxth	r2, r3
 560 004c 6E4B     		ldr	r3, .L17+12
 561 004e 1A80     		strh	r2, [r3]	@ movhi
 315:.\AudioControl.c ****         isr_TxDMADone_Enable();
 562              		.loc 1 315 0
 563 0050 FFF7FEFF 		bl	isr_TxDMADone_Enable
 316:.\AudioControl.c ****         
 317:.\AudioControl.c ****         if((outBufIndex + count) > sizeof(outBuffer))
 564              		.loc 1 317 0
 565 0054 6B4B     		ldr	r3, .L17+8
 566 0056 1B88     		ldrh	r3, [r3]
 567 0058 1A46     		mov	r2, r3
 568 005a FB88     		ldrh	r3, [r7, #6]
 569 005c 1344     		add	r3, r3, r2
 570 005e B3F5906F 		cmp	r3, #1152
 571 0062 45D9     		bls	.L13
 318:.\AudioControl.c ****         {
 319:.\AudioControl.c ****             remain = sizeof(outBuffer) - outBufIndex;  /* Set up TD to wrap around circular buffer 
 572              		.loc 1 319 0
 573 0064 674B     		ldr	r3, .L17+8
 574 0066 1B88     		ldrh	r3, [r3]
 575 0068 C3F59063 		rsb	r3, r3, #1152
 576 006c BB80     		strh	r3, [r7, #4]	@ movhi
 320:.\AudioControl.c ****             
 321:.\AudioControl.c ****             CyDmaTdSetConfiguration(USBOutTd[0], remain, USBOutTd[1], TD_INC_SRC_ADR | TD_INC_DST_A
 577              		.loc 1 321 0
 578 006e 684B     		ldr	r3, .L17+20
 579 0070 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 580 0072 674B     		ldr	r3, .L17+20
 581 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 582 0076 BA88     		ldrh	r2, [r7, #4]
 583 0078 0846     		mov	r0, r1
 584 007a 1146     		mov	r1, r2
 585 007c 1A46     		mov	r2, r3
 586 007e 2323     		movs	r3, #35
 587 0080 FFF7FEFF 		bl	CyDmaTdSetConfiguration
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 17


 322:.\AudioControl.c ****             CyDmaTdSetConfiguration(USBOutTd[1], count-remain, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR | 
 588              		.loc 1 322 0
 589 0084 624B     		ldr	r3, .L17+20
 590 0086 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 591 0088 FA88     		ldrh	r2, [r7, #6]	@ movhi
 592 008a BB88     		ldrh	r3, [r7, #4]	@ movhi
 593 008c D31A     		subs	r3, r2, r3
 594 008e 9BB2     		uxth	r3, r3
 595 0090 0846     		mov	r0, r1
 596 0092 1946     		mov	r1, r3
 597 0094 FE22     		movs	r2, #254
 598 0096 0323     		movs	r3, #3
 599 0098 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 323:.\AudioControl.c ****             CyDmaTdSetAddress(USBOutTd[0], LO16( (uint32) outRam), LO16((uint32)outBuffer+outBufInd
 600              		.loc 1 323 0
 601 009c 5C4B     		ldr	r3, .L17+20
 602 009e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 603 00a0 5C4B     		ldr	r3, .L17+24
 604 00a2 99B2     		uxth	r1, r3
 605 00a4 574B     		ldr	r3, .L17+8
 606 00a6 1A88     		ldrh	r2, [r3]
 607 00a8 5B4B     		ldr	r3, .L17+28
 608 00aa 9BB2     		uxth	r3, r3
 609 00ac 1344     		add	r3, r3, r2
 610 00ae 9BB2     		uxth	r3, r3
 611 00b0 1A46     		mov	r2, r3
 612 00b2 FFF7FEFF 		bl	CyDmaTdSetAddress
 324:.\AudioControl.c ****             CyDmaTdSetAddress(USBOutTd[1], LO16( (uint32)outRam + remain), LO16((uint32)outBuffer))
 613              		.loc 1 324 0
 614 00b6 564B     		ldr	r3, .L17+20
 615 00b8 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 616 00ba 564B     		ldr	r3, .L17+24
 617 00bc 9AB2     		uxth	r2, r3
 618 00be BB88     		ldrh	r3, [r7, #4]	@ movhi
 619 00c0 1344     		add	r3, r3, r2
 620 00c2 9AB2     		uxth	r2, r3
 621 00c4 544B     		ldr	r3, .L17+28
 622 00c6 9BB2     		uxth	r3, r3
 623 00c8 0846     		mov	r0, r1
 624 00ca 1146     		mov	r1, r2
 625 00cc 1A46     		mov	r2, r3
 626 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
 325:.\AudioControl.c **** 
 326:.\AudioControl.c ****             CyDmaChSetInitialTd(USBOutDmaChan, USBOutTd[0]);
 627              		.loc 1 326 0
 628 00d2 4E4B     		ldr	r3, .L17+16
 629 00d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 630 00d6 4E4B     		ldr	r3, .L17+20
 631 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 632 00da 1046     		mov	r0, r2
 633 00dc 1946     		mov	r1, r3
 634 00de FFF7FEFF 		bl	CyDmaChSetInitialTd
 327:.\AudioControl.c ****             outBufIndex = count-remain;
 635              		.loc 1 327 0
 636 00e2 FA88     		ldrh	r2, [r7, #6]	@ movhi
 637 00e4 BB88     		ldrh	r3, [r7, #4]	@ movhi
 638 00e6 D31A     		subs	r3, r2, r3
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 18


 639 00e8 9AB2     		uxth	r2, r3
 640 00ea 464B     		ldr	r3, .L17+8
 641 00ec 1A80     		strh	r2, [r3]	@ movhi
 642 00ee 2CE0     		b	.L14
 643              	.L13:
 328:.\AudioControl.c ****         }
 329:.\AudioControl.c ****         else 
 330:.\AudioControl.c ****         {
 331:.\AudioControl.c ****             /* Single contiguous TD */
 332:.\AudioControl.c ****             CyDmaTdSetConfiguration(USBOutTd[0], count, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR | TD_INC_
 644              		.loc 1 332 0
 645 00f0 474B     		ldr	r3, .L17+20
 646 00f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 647 00f4 FB88     		ldrh	r3, [r7, #6]
 648 00f6 1046     		mov	r0, r2
 649 00f8 1946     		mov	r1, r3
 650 00fa FE22     		movs	r2, #254
 651 00fc 0323     		movs	r3, #3
 652 00fe FFF7FEFF 		bl	CyDmaTdSetConfiguration
 333:.\AudioControl.c ****             CyDmaTdSetAddress(USBOutTd[0], LO16( (uint32)outRam), LO16((uint32)outBuffer+outBufInde
 653              		.loc 1 333 0
 654 0102 434B     		ldr	r3, .L17+20
 655 0104 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 656 0106 434B     		ldr	r3, .L17+24
 657 0108 99B2     		uxth	r1, r3
 658 010a 3E4B     		ldr	r3, .L17+8
 659 010c 1A88     		ldrh	r2, [r3]
 660 010e 424B     		ldr	r3, .L17+28
 661 0110 9BB2     		uxth	r3, r3
 662 0112 1344     		add	r3, r3, r2
 663 0114 9BB2     		uxth	r3, r3
 664 0116 1A46     		mov	r2, r3
 665 0118 FFF7FEFF 		bl	CyDmaTdSetAddress
 334:.\AudioControl.c ****             CyDmaChSetInitialTd(USBOutDmaChan, USBOutTd[0]);
 666              		.loc 1 334 0
 667 011c 3B4B     		ldr	r3, .L17+16
 668 011e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 669 0120 3B4B     		ldr	r3, .L17+20
 670 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 671 0124 1046     		mov	r0, r2
 672 0126 1946     		mov	r1, r3
 673 0128 FFF7FEFF 		bl	CyDmaChSetInitialTd
 335:.\AudioControl.c ****             outBufIndex += count;
 674              		.loc 1 335 0
 675 012c 354B     		ldr	r3, .L17+8
 676 012e 1A88     		ldrh	r2, [r3]
 677 0130 FB88     		ldrh	r3, [r7, #6]	@ movhi
 678 0132 1344     		add	r3, r3, r2
 679 0134 9AB2     		uxth	r2, r3
 680 0136 334B     		ldr	r3, .L17+8
 681 0138 1A80     		strh	r2, [r3]	@ movhi
 336:.\AudioControl.c ****             if (outBufIndex == sizeof(outBuffer)) outBufIndex = 0;
 682              		.loc 1 336 0
 683 013a 324B     		ldr	r3, .L17+8
 684 013c 1B88     		ldrh	r3, [r3]
 685 013e B3F5906F 		cmp	r3, #1152
 686 0142 02D1     		bne	.L14
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 19


 687              		.loc 1 336 0 is_stmt 0 discriminator 1
 688 0144 2F4B     		ldr	r3, .L17+8
 689 0146 0022     		movs	r2, #0
 690 0148 1A80     		strh	r2, [r3]	@ movhi
 691              	.L14:
 337:.\AudioControl.c ****         }
 338:.\AudioControl.c ****         
 339:.\AudioControl.c ****         CyDmaChEnable(USBOutDmaChan, 1);           /* Enable the USB Out DMA, don't update the Td a
 692              		.loc 1 339 0 is_stmt 1
 693 014a 304B     		ldr	r3, .L17+16
 694 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 695 014e 1846     		mov	r0, r3
 696 0150 0121     		movs	r1, #1
 697 0152 FFF7FEFF 		bl	CyDmaChEnable
 340:.\AudioControl.c ****         
 341:.\AudioControl.c ****         CyDmaChSetRequest(USBOutDmaChan, CPU_REQ); /* Start the DMA */
 698              		.loc 1 341 0
 699 0156 2D4B     		ldr	r3, .L17+16
 700 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 701 015a 1846     		mov	r0, r3
 702 015c 0121     		movs	r1, #1
 703 015e FFF7FEFF 		bl	CyDmaChSetRequest
 342:.\AudioControl.c ****     
 343:.\AudioControl.c ****         /* Start playing audio only when transmit buffer is more than half full */
 344:.\AudioControl.c ****         if(!outPlaying && outUsbCount >= OUT_HALF)
 704              		.loc 1 344 0
 705 0162 2E4B     		ldr	r3, .L17+32
 706 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 707 0166 002B     		cmp	r3, #0
 708 0168 45D1     		bne	.L10
 709              		.loc 1 344 0 is_stmt 0 discriminator 1
 710 016a 274B     		ldr	r3, .L17+12
 711 016c 1B88     		ldrh	r3, [r3]
 712 016e B3F5107F 		cmp	r3, #576
 713 0172 40D3     		bcc	.L10
 345:.\AudioControl.c ****         {
 346:.\AudioControl.c ****             outPlaying = TRUE;
 714              		.loc 1 346 0 is_stmt 1
 715 0174 294B     		ldr	r3, .L17+32
 716 0176 0122     		movs	r2, #1
 717 0178 1A70     		strb	r2, [r3]
 347:.\AudioControl.c ****             
 348:.\AudioControl.c ****             I2S_ClearTxFIFO(); /* Clear the I2S internal FIFO */
 718              		.loc 1 348 0
 719 017a FFF7FEFF 		bl	I2S_ClearTxFIFO
 349:.\AudioControl.c ****             
 350:.\AudioControl.c ****             /* clear any potential DMA requests and re-reset TD pointer */
 351:.\AudioControl.c ****             while((DMAC_CH[txDmaChan].basic_status[0] & 2));
 720              		.loc 1 351 0
 721 017e 00BF     		nop
 722              	.L15:
 723              		.loc 1 351 0 is_stmt 0 discriminator 1
 724 0180 274B     		ldr	r3, .L17+36
 725 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 726 0184 1A01     		lsls	r2, r3, #4
 727 0186 274B     		ldr	r3, .L17+40
 728 0188 1344     		add	r3, r3, r2
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 20


 729 018a 1B7A     		ldrb	r3, [r3, #8]
 730 018c DBB2     		uxtb	r3, r3
 731 018e 03F00203 		and	r3, r3, #2
 732 0192 002B     		cmp	r3, #0
 733 0194 F4D1     		bne	.L15
 352:.\AudioControl.c ****     
 353:.\AudioControl.c ****             CyDmaChSetRequest(txDmaChan, CPU_TERM_CHAIN);
 734              		.loc 1 353 0 is_stmt 1
 735 0196 224B     		ldr	r3, .L17+36
 736 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 737 019a 1846     		mov	r0, r3
 738 019c 0421     		movs	r1, #4
 739 019e FFF7FEFF 		bl	CyDmaChSetRequest
 354:.\AudioControl.c ****             CyDmaChEnable(txDmaChan, 1);
 740              		.loc 1 354 0
 741 01a2 1F4B     		ldr	r3, .L17+36
 742 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 743 01a6 1846     		mov	r0, r3
 744 01a8 0121     		movs	r1, #1
 745 01aa FFF7FEFF 		bl	CyDmaChEnable
 355:.\AudioControl.c ****     
 356:.\AudioControl.c ****             while((DMAC_CH[txDmaChan].basic_cfg[0] & 1));
 746              		.loc 1 356 0
 747 01ae 00BF     		nop
 748              	.L16:
 749              		.loc 1 356 0 is_stmt 0 discriminator 1
 750 01b0 1B4B     		ldr	r3, .L17+36
 751 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 752 01b4 1A01     		lsls	r2, r3, #4
 753 01b6 1B4B     		ldr	r3, .L17+40
 754 01b8 1344     		add	r3, r3, r2
 755 01ba 1B78     		ldrb	r3, [r3]
 756 01bc DBB2     		uxtb	r3, r3
 757 01be 03F00103 		and	r3, r3, #1
 758 01c2 002B     		cmp	r3, #0
 759 01c4 F4D1     		bne	.L16
 357:.\AudioControl.c **** 
 358:.\AudioControl.c ****             /* Enable the Tx DMA, initialized to start of buffer */
 359:.\AudioControl.c ****             CyDmaChSetInitialTd(txDmaChan, txTd[0]);
 760              		.loc 1 359 0 is_stmt 1
 761 01c6 164B     		ldr	r3, .L17+36
 762 01c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 763 01ca 174B     		ldr	r3, .L17+44
 764 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 765 01ce 1046     		mov	r0, r2
 766 01d0 1946     		mov	r1, r3
 767 01d2 FFF7FEFF 		bl	CyDmaChSetInitialTd
 360:.\AudioControl.c ****             CyDmaChEnable(txDmaChan, 1);
 768              		.loc 1 360 0
 769 01d6 124B     		ldr	r3, .L17+36
 770 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 771 01da 1846     		mov	r0, r3
 772 01dc 0121     		movs	r1, #1
 773 01de FFF7FEFF 		bl	CyDmaChEnable
 361:.\AudioControl.c ****             
 362:.\AudioControl.c ****             ByteSwap_Tx_Start();
 774              		.loc 1 362 0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 21


 775 01e2 FFF7FEFF 		bl	ByteSwap_Tx_Start
 363:.\AudioControl.c ****                       
 364:.\AudioControl.c ****             CyDmaChEnable(I2STxDMAChan, 1);   /* enable byte swap to I2S DMA channel */
 776              		.loc 1 364 0
 777 01e6 114B     		ldr	r3, .L17+48
 778 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 779 01ea 1846     		mov	r0, r3
 780 01ec 0121     		movs	r1, #1
 781 01ee FFF7FEFF 		bl	CyDmaChEnable
 365:.\AudioControl.c **** 
 366:.\AudioControl.c ****             I2S_EnableTx();                   /* Unmute the Tx output */
 782              		.loc 1 366 0
 783 01f2 FFF7FEFF 		bl	I2S_EnableTx
 784              	.L10:
 367:.\AudioControl.c ****             
 368:.\AudioControl.c ****             
 369:.\AudioControl.c ****         }
 370:.\AudioControl.c ****         
 371:.\AudioControl.c ****         /* USER_CODE: [USB audio OUT endpoint ISR] Placeholder for user code to know when an USB au
 372:.\AudioControl.c ****          * received from the USB host. This routine is called from an ISR, do not add time consumin
 373:.\AudioControl.c ****          * this routine so that other interrupts in the system can be serviced in a timely manner *
 374:.\AudioControl.c ****     }
 375:.\AudioControl.c **** }
 785              		.loc 1 375 0
 786 01f6 0837     		adds	r7, r7, #8
 787              		.cfi_def_cfa_offset 8
 788 01f8 BD46     		mov	sp, r7
 789              		.cfi_def_cfa_register 13
 790              		@ sp needed
 791 01fa 80BD     		pop	{r7, pc}
 792              	.L18:
 793              		.align	2
 794              	.L17:
 795 01fc 00000000 		.word	audioClkConfigured
 796 0200 00000000 		.word	resetTx
 797 0204 00000000 		.word	outBufIndex
 798 0208 00000000 		.word	outUsbCount
 799 020c 00000000 		.word	USBOutDmaChan
 800 0210 00000000 		.word	USBOutTd
 801 0214 00000000 		.word	outRam
 802 0218 00000000 		.word	outBuffer
 803 021c 00000000 		.word	outPlaying
 804 0220 00000000 		.word	txDmaChan
 805 0224 10700040 		.word	1073770512
 806 0228 00000000 		.word	txTd
 807 022c 00000000 		.word	I2STxDMAChan
 808              		.cfi_endproc
 809              	.LFE57:
 810              		.size	ProcessAudioOut, .-ProcessAudioOut
 811              		.section	.text.ProcessAudioIn,"ax",%progbits
 812              		.align	2
 813              		.global	ProcessAudioIn
 814              		.thumb
 815              		.thumb_func
 816              		.type	ProcessAudioIn, %function
 817              	ProcessAudioIn:
 818              	.LFB58:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 22


 376:.\AudioControl.c **** #endif
 377:.\AudioControl.c **** 
 378:.\AudioControl.c **** /*******************************************************************************
 379:.\AudioControl.c **** * Function Name: ProcessAudioIn
 380:.\AudioControl.c **** ********************************************************************************
 381:.\AudioControl.c **** * Summary:
 382:.\AudioControl.c **** *        Handle USB audio in data, setup USB DMA and trigger to transfer samples 
 383:.\AudioControl.c **** *        from SRAM audio circular buffer to SRAM USB endpoint memory.  Start PDM 
 384:.\AudioControl.c **** *		 receive when USB is active.
 385:.\AudioControl.c **** *
 386:.\AudioControl.c **** * Parameters:
 387:.\AudioControl.c **** *  void
 388:.\AudioControl.c **** *
 389:.\AudioControl.c **** * Return:
 390:.\AudioControl.c **** *  void
 391:.\AudioControl.c **** *
 392:.\AudioControl.c **** *******************************************************************************/
 393:.\AudioControl.c **** #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 394:.\AudioControl.c **** void ProcessAudioIn(void)
 395:.\AudioControl.c **** {   
 819              		.loc 1 395 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 8
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 82B0     		sub	sp, sp, #8
 828              		.cfi_def_cfa_offset 16
 829 0004 00AF     		add	r7, sp, #0
 830              		.cfi_def_cfa_register 7
 396:.\AudioControl.c **** 	uint16 remain;
 397:.\AudioControl.c ****     uint16 count = IN_AUDIOMAXPKT;
 831              		.loc 1 397 0
 832 0006 C023     		movs	r3, #192
 833 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 398:.\AudioControl.c ****     static uint8 rate44_count = 0;
 399:.\AudioControl.c ****     
 400:.\AudioControl.c ****     if( audioClkConfigured ==  TRUE )
 834              		.loc 1 400 0
 835 000a 7F4B     		ldr	r3, .L31
 836 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 837 000e 012B     		cmp	r3, #1
 838 0010 40F0F680 		bne	.L19
 401:.\AudioControl.c ****     {
 402:.\AudioControl.c ****         if (resetRx)
 839              		.loc 1 402 0
 840 0014 7D4B     		ldr	r3, .L31+4
 841 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 842 0018 002B     		cmp	r3, #0
 843 001a 0BD0     		beq	.L21
 403:.\AudioControl.c ****         {
 404:.\AudioControl.c ****             inBufIndex = 0;
 844              		.loc 1 404 0
 845 001c 7C4B     		ldr	r3, .L31+8
 846 001e 0022     		movs	r2, #0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 23


 847 0020 1A80     		strh	r2, [r3]	@ movhi
 405:.\AudioControl.c ****             inUsbCount = 0;
 848              		.loc 1 405 0
 849 0022 7C4B     		ldr	r3, .L31+12
 850 0024 0022     		movs	r2, #0
 851 0026 1A80     		strh	r2, [r3]	@ movhi
 406:.\AudioControl.c ****             resetRx = 0;
 852              		.loc 1 406 0
 853 0028 784B     		ldr	r3, .L31+4
 854 002a 0022     		movs	r2, #0
 855 002c 1A70     		strb	r2, [r3]
 407:.\AudioControl.c ****             rate44_count = 0;    
 856              		.loc 1 407 0
 857 002e 7A4B     		ldr	r3, .L31+16
 858 0030 0022     		movs	r2, #0
 859 0032 1A70     		strb	r2, [r3]
 860              	.L21:
 408:.\AudioControl.c ****         }
 409:.\AudioControl.c ****         
 410:.\AudioControl.c ****         CyDmaChDisable(USBInDmaChan);
 861              		.loc 1 410 0
 862 0034 794B     		ldr	r3, .L31+20
 863 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 0038 1846     		mov	r0, r3
 865 003a FFF7FEFF 		bl	CyDmaChDisable
 411:.\AudioControl.c ****         
 412:.\AudioControl.c ****         switch(rate)
 866              		.loc 1 412 0
 867 003e 784B     		ldr	r3, .L31+24
 868 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 869 0042 012B     		cmp	r3, #1
 870 0044 07D0     		beq	.L23
 871 0046 022B     		cmp	r3, #2
 872 0048 18D0     		beq	.L24
 873 004a 002B     		cmp	r3, #0
 874 004c 00D0     		beq	.L25
 413:.\AudioControl.c ****         {
 414:.\AudioControl.c ****             case RATE_48KHZ:                    
 415:.\AudioControl.c ****                     count = IN_AUDIOMAXPKT;        /* Count is number of bytes consumed from the bu
 416:.\AudioControl.c ****                 break;
 417:.\AudioControl.c ****             case RATE_44KHZ:
 418:.\AudioControl.c ****                     if(9 == rate44_count) 
 419:.\AudioControl.c ****                     {                            
 420:.\AudioControl.c ****                         count = IN_AUDIOMAXPKT - (IN_AUDIOMAXPKT/16);  /* adjust the count to cater
 421:.\AudioControl.c ****                         rate44_count = 0;
 422:.\AudioControl.c ****                     }
 423:.\AudioControl.c ****                     else 
 424:.\AudioControl.c ****                     {                            
 425:.\AudioControl.c ****                         count = IN_AUDIOMAXPKT - (IN_AUDIOMAXPKT/12); /* adjust the count to cater 
 426:.\AudioControl.c ****                         rate44_count++;
 427:.\AudioControl.c ****                     }
 428:.\AudioControl.c ****                 break;
 429:.\AudioControl.c ****             case RATE_32KHZ:                
 430:.\AudioControl.c ****                     count = IN_AUDIOMAXPKT - (IN_AUDIOMAXPKT/3);        
 431:.\AudioControl.c ****                 break;
 432:.\AudioControl.c ****             default:
 433:.\AudioControl.c ****                 break;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 24


 875              		.loc 1 433 0
 876 004e 18E0     		b	.L26
 877              	.L25:
 415:.\AudioControl.c ****                 break;
 878              		.loc 1 415 0
 879 0050 C023     		movs	r3, #192
 880 0052 FB80     		strh	r3, [r7, #6]	@ movhi
 416:.\AudioControl.c ****             case RATE_44KHZ:
 881              		.loc 1 416 0
 882 0054 15E0     		b	.L26
 883              	.L23:
 418:.\AudioControl.c ****                     {                            
 884              		.loc 1 418 0
 885 0056 704B     		ldr	r3, .L31+16
 886 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 887 005a 092B     		cmp	r3, #9
 888 005c 05D1     		bne	.L27
 420:.\AudioControl.c ****                         rate44_count = 0;
 889              		.loc 1 420 0
 890 005e B423     		movs	r3, #180
 891 0060 FB80     		strh	r3, [r7, #6]	@ movhi
 421:.\AudioControl.c ****                     }
 892              		.loc 1 421 0
 893 0062 6D4B     		ldr	r3, .L31+16
 894 0064 0022     		movs	r2, #0
 895 0066 1A70     		strb	r2, [r3]
 428:.\AudioControl.c ****             case RATE_32KHZ:                
 896              		.loc 1 428 0
 897 0068 0BE0     		b	.L26
 898              	.L27:
 425:.\AudioControl.c ****                         rate44_count++;
 899              		.loc 1 425 0
 900 006a B023     		movs	r3, #176
 901 006c FB80     		strh	r3, [r7, #6]	@ movhi
 426:.\AudioControl.c ****                     }
 902              		.loc 1 426 0
 903 006e 6A4B     		ldr	r3, .L31+16
 904 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 0072 0133     		adds	r3, r3, #1
 906 0074 DAB2     		uxtb	r2, r3
 907 0076 684B     		ldr	r3, .L31+16
 908 0078 1A70     		strb	r2, [r3]
 428:.\AudioControl.c ****             case RATE_32KHZ:                
 909              		.loc 1 428 0
 910 007a 02E0     		b	.L26
 911              	.L24:
 430:.\AudioControl.c ****                 break;
 912              		.loc 1 430 0
 913 007c 8023     		movs	r3, #128
 914 007e FB80     		strh	r3, [r7, #6]	@ movhi
 431:.\AudioControl.c ****             default:
 915              		.loc 1 431 0
 916 0080 00BF     		nop
 917              	.L26:
 434:.\AudioControl.c ****         }
 435:.\AudioControl.c ****         
 436:.\AudioControl.c ****         inCnt = count;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 25


 918              		.loc 1 436 0
 919 0082 684A     		ldr	r2, .L31+28
 920 0084 FB88     		ldrh	r3, [r7, #6]	@ movhi
 921 0086 1380     		strh	r3, [r2]	@ movhi
 437:.\AudioControl.c ****          
 438:.\AudioControl.c ****         /* Update of inUsbCount needs to be atomic */
 439:.\AudioControl.c ****         isr_RxDMADone_Disable();
 922              		.loc 1 439 0
 923 0088 FFF7FEFF 		bl	isr_RxDMADone_Disable
 440:.\AudioControl.c ****         inUsbCount += count;
 924              		.loc 1 440 0
 925 008c 614B     		ldr	r3, .L31+12
 926 008e 1A88     		ldrh	r2, [r3]
 927 0090 FB88     		ldrh	r3, [r7, #6]	@ movhi
 928 0092 1344     		add	r3, r3, r2
 929 0094 9AB2     		uxth	r2, r3
 930 0096 5F4B     		ldr	r3, .L31+12
 931 0098 1A80     		strh	r2, [r3]	@ movhi
 441:.\AudioControl.c ****         isr_RxDMADone_Enable();
 932              		.loc 1 441 0
 933 009a FFF7FEFF 		bl	isr_RxDMADone_Enable
 442:.\AudioControl.c ****                 
 443:.\AudioControl.c ****         if ((inBufIndex + count) > sizeof(inBuffer)) 
 934              		.loc 1 443 0
 935 009e 5C4B     		ldr	r3, .L31+8
 936 00a0 1B88     		ldrh	r3, [r3]
 937 00a2 1A46     		mov	r2, r3
 938 00a4 FB88     		ldrh	r3, [r7, #6]
 939 00a6 1344     		add	r3, r3, r2
 940 00a8 B3F5407F 		cmp	r3, #768
 941 00ac 45D9     		bls	.L29
 444:.\AudioControl.c ****         {
 445:.\AudioControl.c ****             /* Set up TD to wrap around circular buffer */
 446:.\AudioControl.c ****             remain = sizeof(inBuffer) - inBufIndex;
 942              		.loc 1 446 0
 943 00ae 584B     		ldr	r3, .L31+8
 944 00b0 1B88     		ldrh	r3, [r3]
 945 00b2 C3F54073 		rsb	r3, r3, #768
 946 00b6 BB80     		strh	r3, [r7, #4]	@ movhi
 447:.\AudioControl.c **** 
 448:.\AudioControl.c ****             CyDmaTdSetConfiguration(USBInTd[0], remain, USBInTd[1], TD_INC_SRC_ADR | TD_INC_DST_ADR
 947              		.loc 1 448 0
 948 00b8 5B4B     		ldr	r3, .L31+32
 949 00ba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 950 00bc 5A4B     		ldr	r3, .L31+32
 951 00be 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 952 00c0 BA88     		ldrh	r2, [r7, #4]
 953 00c2 0846     		mov	r0, r1
 954 00c4 1146     		mov	r1, r2
 955 00c6 1A46     		mov	r2, r3
 956 00c8 2323     		movs	r3, #35
 957 00ca FFF7FEFF 		bl	CyDmaTdSetConfiguration
 449:.\AudioControl.c ****             CyDmaTdSetConfiguration(USBInTd[1], count-remain, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR | T
 958              		.loc 1 449 0
 959 00ce 564B     		ldr	r3, .L31+32
 960 00d0 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 961 00d2 FA88     		ldrh	r2, [r7, #6]	@ movhi
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 26


 962 00d4 BB88     		ldrh	r3, [r7, #4]	@ movhi
 963 00d6 D31A     		subs	r3, r2, r3
 964 00d8 9BB2     		uxth	r3, r3
 965 00da 0846     		mov	r0, r1
 966 00dc 1946     		mov	r1, r3
 967 00de FE22     		movs	r2, #254
 968 00e0 0723     		movs	r3, #7
 969 00e2 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 450:.\AudioControl.c ****             CyDmaTdSetAddress(USBInTd[0], LO16((uint32)inBuffer+inBufIndex), LO16((uint32) inRam));
 970              		.loc 1 450 0
 971 00e6 504B     		ldr	r3, .L31+32
 972 00e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 973 00ea 494B     		ldr	r3, .L31+8
 974 00ec 1A88     		ldrh	r2, [r3]
 975 00ee 4F4B     		ldr	r3, .L31+36
 976 00f0 9BB2     		uxth	r3, r3
 977 00f2 1344     		add	r3, r3, r2
 978 00f4 9AB2     		uxth	r2, r3
 979 00f6 4E4B     		ldr	r3, .L31+40
 980 00f8 9BB2     		uxth	r3, r3
 981 00fa 0846     		mov	r0, r1
 982 00fc 1146     		mov	r1, r2
 983 00fe 1A46     		mov	r2, r3
 984 0100 FFF7FEFF 		bl	CyDmaTdSetAddress
 451:.\AudioControl.c ****             CyDmaTdSetAddress(USBInTd[1], LO16((uint32)inBuffer), LO16((uint32) inRam + remain));
 985              		.loc 1 451 0
 986 0104 484B     		ldr	r3, .L31+32
 987 0106 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 988 0108 484B     		ldr	r3, .L31+36
 989 010a 99B2     		uxth	r1, r3
 990 010c 484B     		ldr	r3, .L31+40
 991 010e 9AB2     		uxth	r2, r3
 992 0110 BB88     		ldrh	r3, [r7, #4]	@ movhi
 993 0112 1344     		add	r3, r3, r2
 994 0114 9BB2     		uxth	r3, r3
 995 0116 1A46     		mov	r2, r3
 996 0118 FFF7FEFF 		bl	CyDmaTdSetAddress
 452:.\AudioControl.c ****              
 453:.\AudioControl.c ****             CyDmaChSetInitialTd(USBInDmaChan, USBInTd[0]);
 997              		.loc 1 453 0
 998 011c 3F4B     		ldr	r3, .L31+20
 999 011e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1000 0120 414B     		ldr	r3, .L31+32
 1001 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1002 0124 1046     		mov	r0, r2
 1003 0126 1946     		mov	r1, r3
 1004 0128 FFF7FEFF 		bl	CyDmaChSetInitialTd
 454:.\AudioControl.c ****             inBufIndex = count-remain;
 1005              		.loc 1 454 0
 1006 012c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1007 012e BB88     		ldrh	r3, [r7, #4]	@ movhi
 1008 0130 D31A     		subs	r3, r2, r3
 1009 0132 9AB2     		uxth	r2, r3
 1010 0134 364B     		ldr	r3, .L31+8
 1011 0136 1A80     		strh	r2, [r3]	@ movhi
 1012 0138 2EE0     		b	.L30
 1013              	.L29:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 27


 455:.\AudioControl.c ****         }
 456:.\AudioControl.c ****         else 
 457:.\AudioControl.c ****         {
 458:.\AudioControl.c ****             /* Single contiguous TD */
 459:.\AudioControl.c ****             CyDmaTdSetConfiguration(USBInTd[0], count, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR | TD_INC_D
 1014              		.loc 1 459 0
 1015 013a 3B4B     		ldr	r3, .L31+32
 1016 013c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1017 013e FB88     		ldrh	r3, [r7, #6]
 1018 0140 1046     		mov	r0, r2
 1019 0142 1946     		mov	r1, r3
 1020 0144 FE22     		movs	r2, #254
 1021 0146 0723     		movs	r3, #7
 1022 0148 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 460:.\AudioControl.c ****             CyDmaTdSetAddress(USBInTd[0], LO16((uint32)inBuffer+inBufIndex), LO16((uint32) inRam));
 1023              		.loc 1 460 0
 1024 014c 364B     		ldr	r3, .L31+32
 1025 014e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1026 0150 2F4B     		ldr	r3, .L31+8
 1027 0152 1A88     		ldrh	r2, [r3]
 1028 0154 354B     		ldr	r3, .L31+36
 1029 0156 9BB2     		uxth	r3, r3
 1030 0158 1344     		add	r3, r3, r2
 1031 015a 9AB2     		uxth	r2, r3
 1032 015c 344B     		ldr	r3, .L31+40
 1033 015e 9BB2     		uxth	r3, r3
 1034 0160 0846     		mov	r0, r1
 1035 0162 1146     		mov	r1, r2
 1036 0164 1A46     		mov	r2, r3
 1037 0166 FFF7FEFF 		bl	CyDmaTdSetAddress
 461:.\AudioControl.c ****             
 462:.\AudioControl.c ****             CyDmaChSetInitialTd(USBInDmaChan, USBInTd[0]);
 1038              		.loc 1 462 0
 1039 016a 2C4B     		ldr	r3, .L31+20
 1040 016c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1041 016e 2E4B     		ldr	r3, .L31+32
 1042 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1043 0172 1046     		mov	r0, r2
 1044 0174 1946     		mov	r1, r3
 1045 0176 FFF7FEFF 		bl	CyDmaChSetInitialTd
 463:.\AudioControl.c ****             inBufIndex += count;
 1046              		.loc 1 463 0
 1047 017a 254B     		ldr	r3, .L31+8
 1048 017c 1A88     		ldrh	r2, [r3]
 1049 017e FB88     		ldrh	r3, [r7, #6]	@ movhi
 1050 0180 1344     		add	r3, r3, r2
 1051 0182 9AB2     		uxth	r2, r3
 1052 0184 224B     		ldr	r3, .L31+8
 1053 0186 1A80     		strh	r2, [r3]	@ movhi
 464:.\AudioControl.c ****             if (inBufIndex == sizeof(inBuffer)) 
 1054              		.loc 1 464 0
 1055 0188 214B     		ldr	r3, .L31+8
 1056 018a 1B88     		ldrh	r3, [r3]
 1057 018c B3F5407F 		cmp	r3, #768
 1058 0190 02D1     		bne	.L30
 465:.\AudioControl.c **** 			{
 466:.\AudioControl.c **** 				inBufIndex = 0;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 28


 1059              		.loc 1 466 0
 1060 0192 1F4B     		ldr	r3, .L31+8
 1061 0194 0022     		movs	r2, #0
 1062 0196 1A80     		strh	r2, [r3]	@ movhi
 1063              	.L30:
 467:.\AudioControl.c **** 			}	
 468:.\AudioControl.c ****         }
 469:.\AudioControl.c ****     
 470:.\AudioControl.c ****         /* Enable the USB In DMA, don't update the Td as it progresses */
 471:.\AudioControl.c ****         CyDmaChEnable(USBInDmaChan, 1);
 1064              		.loc 1 471 0
 1065 0198 204B     		ldr	r3, .L31+20
 1066 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1067 019c 1846     		mov	r0, r3
 1068 019e 0121     		movs	r1, #1
 1069 01a0 FFF7FEFF 		bl	CyDmaChEnable
 472:.\AudioControl.c ****         CyDmaChSetRequest(USBInDmaChan, CPU_REQ); /* Start the DMA now */
 1070              		.loc 1 472 0
 1071 01a4 1D4B     		ldr	r3, .L31+20
 1072 01a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1073 01a8 1846     		mov	r0, r3
 1074 01aa 0121     		movs	r1, #1
 1075 01ac FFF7FEFF 		bl	CyDmaChSetRequest
 473:.\AudioControl.c **** 
 474:.\AudioControl.c ****         /* Sending of the data on the USB interface is enabled when the interrupt indicates that th
 475:.\AudioControl.c ****          * has been filled. */
 476:.\AudioControl.c ****         if (!inPlaying && inUsbCount >= IN_HALF) 
 1076              		.loc 1 476 0
 1077 01b0 204B     		ldr	r3, .L31+44
 1078 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1079 01b4 002B     		cmp	r3, #0
 1080 01b6 23D1     		bne	.L19
 1081              		.loc 1 476 0 is_stmt 0 discriminator 1
 1082 01b8 164B     		ldr	r3, .L31+12
 1083 01ba 1B88     		ldrh	r3, [r3]
 1084 01bc B3F5C07F 		cmp	r3, #384
 1085 01c0 1ED3     		bcc	.L19
 477:.\AudioControl.c ****         {    
 478:.\AudioControl.c ****             inPlaying = 1;
 1086              		.loc 1 478 0 is_stmt 1
 1087 01c2 1C4B     		ldr	r3, .L31+44
 1088 01c4 0122     		movs	r2, #1
 1089 01c6 1A70     		strb	r2, [r3]
 479:.\AudioControl.c ****                        
 480:.\AudioControl.c ****             /*Clear Any potential pending DMA requests before starting the DMA channel to transfer 
 481:.\AudioControl.c ****             CyDmaChSetRequest(rxDmaChan, CPU_TERM_CHAIN);
 1090              		.loc 1 481 0
 1091 01c8 1B4B     		ldr	r3, .L31+48
 1092 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1093 01cc 1846     		mov	r0, r3
 1094 01ce 0421     		movs	r1, #4
 1095 01d0 FFF7FEFF 		bl	CyDmaChSetRequest
 482:.\AudioControl.c ****             CyDmaChEnable(rxDmaChan, 1);
 1096              		.loc 1 482 0
 1097 01d4 184B     		ldr	r3, .L31+48
 1098 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1099 01d8 1846     		mov	r0, r3
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 29


 1100 01da 0121     		movs	r1, #1
 1101 01dc FFF7FEFF 		bl	CyDmaChEnable
 483:.\AudioControl.c ****             
 484:.\AudioControl.c ****             /* Enable the Rx DMA, initialized back to the first TD */
 485:.\AudioControl.c ****             CyDmaChSetInitialTd(rxDmaChan, rxTd[0]);
 1102              		.loc 1 485 0
 1103 01e0 154B     		ldr	r3, .L31+48
 1104 01e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1105 01e4 154B     		ldr	r3, .L31+52
 1106 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1107 01e8 1046     		mov	r0, r2
 1108 01ea 1946     		mov	r1, r3
 1109 01ec FFF7FEFF 		bl	CyDmaChSetInitialTd
 486:.\AudioControl.c ****             CyDmaChEnable(rxDmaChan, 1);
 1110              		.loc 1 486 0
 1111 01f0 114B     		ldr	r3, .L31+48
 1112 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1113 01f4 1846     		mov	r0, r3
 1114 01f6 0121     		movs	r1, #1
 1115 01f8 FFF7FEFF 		bl	CyDmaChEnable
 487:.\AudioControl.c ****             
 488:.\AudioControl.c ****             #ifdef ENABLE_PDM
 489:.\AudioControl.c ****             Clock_CIC_Start(); /* This starts the CIC engine */
 1116              		.loc 1 489 0
 1117 01fc FFF7FEFF 		bl	Clock_CIC_Start
 1118              	.L19:
 490:.\AudioControl.c **** 			#endif
 491:.\AudioControl.c ****         }
 492:.\AudioControl.c ****         
 493:.\AudioControl.c ****         /* USER_CODE: [USB audio IN endpoint ISR] Placeholder for user code to know when an USB aud
 494:.\AudioControl.c ****          * sent to the USB host. This routine is called from an ISR, do not add time consuming task
 495:.\AudioControl.c ****          * routine so that other interrupts in the system can be serviced in a timely manner */
 496:.\AudioControl.c ****     }
 497:.\AudioControl.c **** }
 1119              		.loc 1 497 0
 1120 0200 0837     		adds	r7, r7, #8
 1121              		.cfi_def_cfa_offset 8
 1122 0202 BD46     		mov	sp, r7
 1123              		.cfi_def_cfa_register 13
 1124              		@ sp needed
 1125 0204 80BD     		pop	{r7, pc}
 1126              	.L32:
 1127 0206 00BF     		.align	2
 1128              	.L31:
 1129 0208 00000000 		.word	audioClkConfigured
 1130 020c 00000000 		.word	resetRx
 1131 0210 00000000 		.word	inBufIndex
 1132 0214 00000000 		.word	inUsbCount
 1133 0218 17000000 		.word	rate44_count.6272
 1134 021c 00000000 		.word	USBInDmaChan
 1135 0220 00000000 		.word	rate
 1136 0224 00000000 		.word	inCnt
 1137 0228 00000000 		.word	USBInTd
 1138 022c 00000000 		.word	inBuffer
 1139 0230 00000000 		.word	inRam
 1140 0234 00000000 		.word	inPlaying
 1141 0238 00000000 		.word	rxDmaChan
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 30


 1142 023c 00000000 		.word	rxTd
 1143              		.cfi_endproc
 1144              	.LFE58:
 1145              		.size	ProcessAudioIn, .-ProcessAudioIn
 1146              		.section	.text.Stop_I2S_Tx,"ax",%progbits
 1147              		.align	2
 1148              		.global	Stop_I2S_Tx
 1149              		.thumb
 1150              		.thumb_func
 1151              		.type	Stop_I2S_Tx, %function
 1152              	Stop_I2S_Tx:
 1153              	.LFB59:
 498:.\AudioControl.c **** #endif
 499:.\AudioControl.c **** 
 500:.\AudioControl.c **** /*******************************************************************************
 501:.\AudioControl.c **** * Function Name: Stop_I2S_Tx
 502:.\AudioControl.c **** ********************************************************************************
 503:.\AudioControl.c **** * Summary:
 504:.\AudioControl.c **** *        This function stops the I2S data transmission by disabling the I2S and 
 505:.\AudioControl.c **** *        transmit DMA.
 506:.\AudioControl.c **** *
 507:.\AudioControl.c **** * Parameters:
 508:.\AudioControl.c **** *  void
 509:.\AudioControl.c **** *
 510:.\AudioControl.c **** * Return:
 511:.\AudioControl.c **** *  void
 512:.\AudioControl.c **** *
 513:.\AudioControl.c **** *******************************************************************************/
 514:.\AudioControl.c **** void Stop_I2S_Tx(void) CYREENTRANT
 515:.\AudioControl.c **** {
 1154              		.loc 1 515 0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 1, uses_anonymous_args = 0
 1158 0000 80B5     		push	{r7, lr}
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 7, -8
 1161              		.cfi_offset 14, -4
 1162 0002 00AF     		add	r7, sp, #0
 1163              		.cfi_def_cfa_register 7
 516:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 517:.\AudioControl.c ****     if(outPlaying)
 1164              		.loc 1 517 0
 1165 0004 104B     		ldr	r3, .L35
 1166 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1167 0008 002B     		cmp	r3, #0
 1168 000a 1CD0     		beq	.L33
 518:.\AudioControl.c ****     {       
 519:.\AudioControl.c ****         I2S_DisableTx(); /* Stop I2S Transmit (Mute), I2S output clocks still active */
 1169              		.loc 1 519 0
 1170 000c FFF7FEFF 		bl	I2S_DisableTx
 520:.\AudioControl.c ****         
 521:.\AudioControl.c ****         CyDelayUs(20); /* Provide enough time for DMA to transfer the last audio samples completely
 1171              		.loc 1 521 0
 1172 0010 1420     		movs	r0, #20
 1173 0012 FFF7FEFF 		bl	CyDelayUs
 522:.\AudioControl.c ****         
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 31


 523:.\AudioControl.c ****         ByteSwap_Tx_Stop(); /* Terminate ByteSwap logic and hence DMA request line to TxDMA (SRAM t
 1174              		.loc 1 523 0
 1175 0016 FFF7FEFF 		bl	ByteSwap_Tx_Stop
 524:.\AudioControl.c **** 
 525:.\AudioControl.c ****        
 526:.\AudioControl.c ****         CyDmaChDisable(txDmaChan); /* Stop/Disable DMA - Needed to reset to start of chain */
 1176              		.loc 1 526 0
 1177 001a 0C4B     		ldr	r3, .L35+4
 1178 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1179 001e 1846     		mov	r0, r3
 1180 0020 FFF7FEFF 		bl	CyDmaChDisable
 527:.\AudioControl.c ****         CyDmaChDisable(I2STxDMAChan); /* Disable ByteSwap to I2S data transfer DMA channel */
 1181              		.loc 1 527 0
 1182 0024 0A4B     		ldr	r3, .L35+8
 1183 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 0028 1846     		mov	r0, r3
 1185 002a FFF7FEFF 		bl	CyDmaChDisable
 528:.\AudioControl.c ****         
 529:.\AudioControl.c ****                 
 530:.\AudioControl.c ****         resetTx = 1;
 1186              		.loc 1 530 0
 1187 002e 094B     		ldr	r3, .L35+12
 1188 0030 0122     		movs	r2, #1
 1189 0032 1A70     		strb	r2, [r3]
 531:.\AudioControl.c ****         outLevel = 0;
 1190              		.loc 1 531 0
 1191 0034 084B     		ldr	r3, .L35+16
 1192 0036 0022     		movs	r2, #0
 1193 0038 1A80     		strh	r2, [r3]	@ movhi
 532:.\AudioControl.c ****         outUsbShadow = 0;
 1194              		.loc 1 532 0
 1195 003a 084B     		ldr	r3, .L35+20
 1196 003c 0022     		movs	r2, #0
 1197 003e 1A80     		strh	r2, [r3]	@ movhi
 533:.\AudioControl.c ****         outPlaying = 0;
 1198              		.loc 1 533 0
 1199 0040 014B     		ldr	r3, .L35
 1200 0042 0022     		movs	r2, #0
 1201 0044 1A70     		strb	r2, [r3]
 1202              	.L33:
 534:.\AudioControl.c ****         
 535:.\AudioControl.c ****         /* USER_CODE: [USB audio playback stops] Placeholder for user code to shutdown any of the a
 536:.\AudioControl.c ****          * components. This routine is called when USB audio OUT endpoint stops streaming audio */
 537:.\AudioControl.c ****     }
 538:.\AudioControl.c ****     #endif
 539:.\AudioControl.c **** }
 1203              		.loc 1 539 0
 1204 0046 80BD     		pop	{r7, pc}
 1205              	.L36:
 1206              		.align	2
 1207              	.L35:
 1208 0048 00000000 		.word	outPlaying
 1209 004c 00000000 		.word	txDmaChan
 1210 0050 00000000 		.word	I2STxDMAChan
 1211 0054 00000000 		.word	resetTx
 1212 0058 00000000 		.word	outLevel
 1213 005c 00000000 		.word	outUsbShadow
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 32


 1214              		.cfi_endproc
 1215              	.LFE59:
 1216              		.size	Stop_I2S_Tx, .-Stop_I2S_Tx
 1217              		.section	.text.Stop_PDM_InPath,"ax",%progbits
 1218              		.align	2
 1219              		.global	Stop_PDM_InPath
 1220              		.thumb
 1221              		.thumb_func
 1222              		.type	Stop_PDM_InPath, %function
 1223              	Stop_PDM_InPath:
 1224              	.LFB60:
 540:.\AudioControl.c **** 
 541:.\AudioControl.c **** /*******************************************************************************
 542:.\AudioControl.c **** * Function Name: Stop_PDM_InPath
 543:.\AudioControl.c **** ********************************************************************************
 544:.\AudioControl.c **** * Summary:
 545:.\AudioControl.c **** *        This function stops the PDM data reception by disabling the clock to the CIC and 
 546:.\AudioControl.c **** *        disabling the DMA TDs.
 547:.\AudioControl.c **** *
 548:.\AudioControl.c **** * Parameters:
 549:.\AudioControl.c **** *  void
 550:.\AudioControl.c **** *
 551:.\AudioControl.c **** * Return:
 552:.\AudioControl.c **** *  void
 553:.\AudioControl.c **** *
 554:.\AudioControl.c **** *******************************************************************************/
 555:.\AudioControl.c **** #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 556:.\AudioControl.c **** void Stop_PDM_InPath(void) CYREENTRANT
 557:.\AudioControl.c **** {
 1225              		.loc 1 557 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 1, uses_anonymous_args = 0
 1229 0000 80B5     		push	{r7, lr}
 1230              		.cfi_def_cfa_offset 8
 1231              		.cfi_offset 7, -8
 1232              		.cfi_offset 14, -4
 1233 0002 00AF     		add	r7, sp, #0
 1234              		.cfi_def_cfa_register 7
 558:.\AudioControl.c ****     if(inPlaying)
 1235              		.loc 1 558 0
 1236 0004 0E4B     		ldr	r3, .L39
 1237 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1238 0008 002B     		cmp	r3, #0
 1239 000a 17D0     		beq	.L37
 559:.\AudioControl.c ****     {
 560:.\AudioControl.c ****              
 561:.\AudioControl.c ****         /* Terminate TD chain & Stop/Disable DMA - Needed to reset to start of chain */
 562:.\AudioControl.c ****         CyDmaChSetRequest(rxDmaChan, CPU_TERM_CHAIN);
 1240              		.loc 1 562 0
 1241 000c 0D4B     		ldr	r3, .L39+4
 1242 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1243 0010 1846     		mov	r0, r3
 1244 0012 0421     		movs	r1, #4
 1245 0014 FFF7FEFF 		bl	CyDmaChSetRequest
 563:.\AudioControl.c ****                 
 564:.\AudioControl.c ****         resetRx = 1;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 33


 1246              		.loc 1 564 0
 1247 0018 0B4B     		ldr	r3, .L39+8
 1248 001a 0122     		movs	r2, #1
 1249 001c 1A70     		strb	r2, [r3]
 565:.\AudioControl.c ****         
 566:.\AudioControl.c ****         clearInBuffer = 1;
 1250              		.loc 1 566 0
 1251 001e 0B4B     		ldr	r3, .L39+12
 1252 0020 0122     		movs	r2, #1
 1253 0022 1A70     		strb	r2, [r3]
 567:.\AudioControl.c ****         
 568:.\AudioControl.c ****         inLevel = IN_BUFSIZE;
 1254              		.loc 1 568 0
 1255 0024 0A4B     		ldr	r3, .L39+16
 1256 0026 4FF44072 		mov	r2, #768
 1257 002a 1A80     		strh	r2, [r3]	@ movhi
 569:.\AudioControl.c ****         inUsbShadow = 0;    
 1258              		.loc 1 569 0
 1259 002c 094B     		ldr	r3, .L39+20
 1260 002e 0022     		movs	r2, #0
 1261 0030 1A80     		strh	r2, [r3]	@ movhi
 570:.\AudioControl.c ****         inPlaying = 0;
 1262              		.loc 1 570 0
 1263 0032 034B     		ldr	r3, .L39
 1264 0034 0022     		movs	r2, #0
 1265 0036 1A70     		strb	r2, [r3]
 571:.\AudioControl.c ****         
 572:.\AudioControl.c ****         #ifdef ENABLE_PDM
 573:.\AudioControl.c ****         Clock_CIC_Stop(); /* This shuts down the CIC engine completely */
 1266              		.loc 1 573 0
 1267 0038 FFF7FEFF 		bl	Clock_CIC_Stop
 1268              	.L37:
 574:.\AudioControl.c **** 		#endif
 575:.\AudioControl.c ****         
 576:.\AudioControl.c ****         /* USER_CODE: [USB audio recording stops] Placeholder for user code to shutdown any of the 
 577:.\AudioControl.c ****          * components. This routine is called when USB audio IN endpoint stops requesting audio IN 
 578:.\AudioControl.c ****     }
 579:.\AudioControl.c **** }
 1269              		.loc 1 579 0
 1270 003c 80BD     		pop	{r7, pc}
 1271              	.L40:
 1272 003e 00BF     		.align	2
 1273              	.L39:
 1274 0040 00000000 		.word	inPlaying
 1275 0044 00000000 		.word	rxDmaChan
 1276 0048 00000000 		.word	resetRx
 1277 004c 00000000 		.word	clearInBuffer
 1278 0050 00000000 		.word	inLevel
 1279 0054 00000000 		.word	inUsbShadow
 1280              		.cfi_endproc
 1281              	.LFE60:
 1282              		.size	Stop_PDM_InPath, .-Stop_PDM_InPath
 1283              		.section	.text.SetClockRate,"ax",%progbits
 1284              		.align	2
 1285              		.global	SetClockRate
 1286              		.thumb
 1287              		.thumb_func
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 34


 1288              		.type	SetClockRate, %function
 1289              	SetClockRate:
 1290              	.LFB61:
 580:.\AudioControl.c **** #endif
 581:.\AudioControl.c **** 
 582:.\AudioControl.c **** /*******************************************************************************
 583:.\AudioControl.c **** * Function Name: SetClockRate
 584:.\AudioControl.c **** ********************************************************************************
 585:.\AudioControl.c **** * Summary:
 586:.\AudioControl.c **** *        This function changes the audio clocking to generate clocks for a desired 
 587:.\AudioControl.c **** *        sample rate.
 588:.\AudioControl.c **** *
 589:.\AudioControl.c **** * Parameters:
 590:.\AudioControl.c **** *  newRate: audio sample rate from list in AudioClkGen component which is to be set
 591:.\AudioControl.c **** *
 592:.\AudioControl.c **** * Return:
 593:.\AudioControl.c **** *  void
 594:.\AudioControl.c **** *
 595:.\AudioControl.c **** *******************************************************************************/
 596:.\AudioControl.c **** void SetClockRate(uint8 newRate) CYREENTRANT
 597:.\AudioControl.c **** {
 1291              		.loc 1 597 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 8
 1294              		@ frame_needed = 1, uses_anonymous_args = 0
 1295 0000 80B5     		push	{r7, lr}
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 7, -8
 1298              		.cfi_offset 14, -4
 1299 0002 82B0     		sub	sp, sp, #8
 1300              		.cfi_def_cfa_offset 16
 1301 0004 00AF     		add	r7, sp, #0
 1302              		.cfi_def_cfa_register 7
 1303 0006 0346     		mov	r3, r0
 1304 0008 FB71     		strb	r3, [r7, #7]
 598:.\AudioControl.c ****   
 599:.\AudioControl.c ****         
 600:.\AudioControl.c ****     /* Stop I2S and PDM path before changing PLL clock */
 601:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 602:.\AudioControl.c **** 	Stop_I2S_Tx();
 1305              		.loc 1 602 0
 1306 000a FFF7FEFF 		bl	Stop_I2S_Tx
 603:.\AudioControl.c ****     #endif 
 604:.\AudioControl.c **** 	
 605:.\AudioControl.c ****     #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 606:.\AudioControl.c **** 	Stop_PDM_InPath();
 1307              		.loc 1 606 0
 1308 000e FFF7FEFF 		bl	Stop_PDM_InPath
 607:.\AudioControl.c **** 	#endif
 608:.\AudioControl.c ****     
 609:.\AudioControl.c ****     CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 1309              		.loc 1 609 0
 1310 0012 0020     		movs	r0, #0
 1311 0014 FFF7FEFF 		bl	CyMasterClk_SetSource
 610:.\AudioControl.c **** 	CyDelayFreq(DELAY_FREQ_PARAM_VALUE_IMO);
 1312              		.loc 1 610 0
 1313 0018 1748     		ldr	r0, .L46
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 35


 1314 001a FFF7FEFF 		bl	CyDelayFreq
 611:.\AudioControl.c ****     rate = newRate;
 1315              		.loc 1 611 0
 1316 001e 174A     		ldr	r2, .L46+4
 1317 0020 FB79     		ldrb	r3, [r7, #7]
 1318 0022 1370     		strb	r3, [r2]
 612:.\AudioControl.c **** 
 613:.\AudioControl.c ****     AudioClkGen_SetAudioRate(newRate);
 1319              		.loc 1 613 0
 1320 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1321 0026 1846     		mov	r0, r3
 1322 0028 FFF7FEFF 		bl	AudioClkGen_SetAudioRate
 614:.\AudioControl.c **** 	
 615:.\AudioControl.c **** 	
 616:.\AudioControl.c **** 	switch(newRate)
 1323              		.loc 1 616 0
 1324 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1325 002e 012B     		cmp	r3, #1
 1326 0030 0ED0     		beq	.L43
 1327 0032 022B     		cmp	r3, #2
 1328 0034 02D0     		beq	.L44
 1329 0036 002B     		cmp	r3, #0
 1330 0038 05D0     		beq	.L45
 1331 003a 0EE0     		b	.L42
 1332              	.L44:
 617:.\AudioControl.c ****     {
 618:.\AudioControl.c ****         case AudioClkGen_RATE_32KHZ:
 619:.\AudioControl.c ****             #ifdef ENABLE_PDM
 620:.\AudioControl.c ****             Clock_CIC_SetDividerRegister(DIVIDER_32K_SR, 0);
 1333              		.loc 1 620 0
 1334 003c 0220     		movs	r0, #2
 1335 003e 0021     		movs	r1, #0
 1336 0040 FFF7FEFF 		bl	Clock_CIC_SetDividerRegister
 621:.\AudioControl.c ****             #endif
 622:.\AudioControl.c ****             
 623:.\AudioControl.c ****         break;
 1337              		.loc 1 623 0
 1338 0044 09E0     		b	.L42
 1339              	.L45:
 624:.\AudioControl.c ****         
 625:.\AudioControl.c ****         case AudioClkGen_RATE_48KHZ:
 626:.\AudioControl.c ****             #ifdef ENABLE_PDM
 627:.\AudioControl.c ****             Clock_CIC_SetDividerRegister(DIVIDER_44K_48K_SR, 0);
 1340              		.loc 1 627 0
 1341 0046 0120     		movs	r0, #1
 1342 0048 0021     		movs	r1, #0
 1343 004a FFF7FEFF 		bl	Clock_CIC_SetDividerRegister
 628:.\AudioControl.c ****             #endif
 629:.\AudioControl.c ****             
 630:.\AudioControl.c ****         break;
 1344              		.loc 1 630 0
 1345 004e 04E0     		b	.L42
 1346              	.L43:
 631:.\AudioControl.c ****         
 632:.\AudioControl.c ****         case AudioClkGen_RATE_44KHZ:
 633:.\AudioControl.c ****             #ifdef ENABLE_PDM
 634:.\AudioControl.c ****             Clock_CIC_SetDividerRegister(DIVIDER_44K_48K_SR, 0);
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 36


 1347              		.loc 1 634 0
 1348 0050 0120     		movs	r0, #1
 1349 0052 0021     		movs	r1, #0
 1350 0054 FFF7FEFF 		bl	Clock_CIC_SetDividerRegister
 635:.\AudioControl.c ****             #endif
 636:.\AudioControl.c ****             
 637:.\AudioControl.c ****         break;
 1351              		.loc 1 637 0
 1352 0058 00BF     		nop
 1353              	.L42:
 638:.\AudioControl.c ****     }
 639:.\AudioControl.c **** 	
 640:.\AudioControl.c ****     CyMasterClk_SetSource(CY_MASTER_SOURCE_PLL);
 1354              		.loc 1 640 0
 1355 005a 0120     		movs	r0, #1
 1356 005c FFF7FEFF 		bl	CyMasterClk_SetSource
 641:.\AudioControl.c ****     CyDelayFreq(DELAY_FREQ_PARAM_VALUE_PLL);
 1357              		.loc 1 641 0
 1358 0060 0748     		ldr	r0, .L46+8
 1359 0062 FFF7FEFF 		bl	CyDelayFreq
 642:.\AudioControl.c **** 	  
 643:.\AudioControl.c ****     /* flag to indicate audio clock active */
 644:.\AudioControl.c ****     audioClkConfigured = TRUE;
 1360              		.loc 1 644 0
 1361 0066 074B     		ldr	r3, .L46+12
 1362 0068 0122     		movs	r2, #1
 1363 006a 1A70     		strb	r2, [r3]
 645:.\AudioControl.c ****     
 646:.\AudioControl.c ****     /* CODEC is initialized when sampling frequency change request is received from the USB host (t
 647:.\AudioControl.c ****      * change event triggers the call to this routine), if the host is fast and requests for audio 
 648:.\AudioControl.c ****      * after sampling frequency change request, then the CODEC interface wouldn't be ready for appr
 649:.\AudioControl.c ****      * (20ms is specific to CS42L51) and the initial few milliseconds of audio IN data will be zero
 650:.\AudioControl.c ****      * also be initialized by the user at the start of the program at the cost of little more incre
 651:.\AudioControl.c ****      * consumption */
 652:.\AudioControl.c ****     InitCirrusCodec();
 1364              		.loc 1 652 0
 1365 006c FFF7FEFF 		bl	InitCirrusCodec
 653:.\AudioControl.c ****     
 654:.\AudioControl.c **** 	/* USER_CODE:[CODEC] If different codec is used than the Cirrus codec (CS42L51), then
 655:.\AudioControl.c **** 	 * Comment out the function InitCirrusCodec().
 656:.\AudioControl.c **** 	 * Add your code for codec initialization in place of InitCirrusCodec(). 
 657:.\AudioControl.c **** 	 * Update the UpdateCodecVolume() and UpdateCodecAttenuation() functions as required by new codec.
 658:.\AudioControl.c **** 	 * Update the codec.h file with the I2C address of codec and the register addresses of the new cod
 659:.\AudioControl.c **** 	
 660:.\AudioControl.c **** 
 661:.\AudioControl.c **** 	/* USER_CODE: [Active mode begins]Add your code for initializing any external peripherals which re
 662:.\AudioControl.c ****      * to be in active mode (where all the audio components and clocks are turned on). The system i
 663:.\AudioControl.c ****      * maximum operating frequency at this time. This routine initializes the codec registers with 
 664:.\AudioControl.c ****      * when the system is in active mode for the first time. Refer to "Active Mode Clock 44.1/48KHz
 665:.\AudioControl.c ****      * for system clock details. Firmware is in "Active Mode" at this point in code until asked to 
 666:.\AudioControl.c ****      * by changing audio streaming interface. The sampling frequency to which the current system cl
 667:.\AudioControl.c ****      * configured depends on the parameter to this API (newRate)*/
 668:.\AudioControl.c **** }
 1366              		.loc 1 668 0
 1367 0070 0837     		adds	r7, r7, #8
 1368              		.cfi_def_cfa_offset 8
 1369 0072 BD46     		mov	sp, r7
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 37


 1370              		.cfi_def_cfa_register 13
 1371              		@ sp needed
 1372 0074 80BD     		pop	{r7, pc}
 1373              	.L47:
 1374 0076 00BF     		.align	2
 1375              	.L46:
 1376 0078 00366E01 		.word	24000000
 1377 007c 00000000 		.word	rate
 1378 0080 40A5AE02 		.word	45000000
 1379 0084 00000000 		.word	audioClkConfigured
 1380              		.cfi_endproc
 1381              	.LFE61:
 1382              		.size	SetClockRate, .-SetClockRate
 1383              		.section	.text.StartAudioComponents,"ax",%progbits
 1384              		.align	2
 1385              		.global	StartAudioComponents
 1386              		.thumb
 1387              		.thumb_func
 1388              		.type	StartAudioComponents, %function
 1389              	StartAudioComponents:
 1390              	.LFB62:
 669:.\AudioControl.c ****  
 670:.\AudioControl.c **** /*******************************************************************************
 671:.\AudioControl.c **** * Function Name: StartAudioComponents
 672:.\AudioControl.c **** ********************************************************************************
 673:.\AudioControl.c **** * Summary:
 674:.\AudioControl.c **** *       This function starts components for the digital audio signal path
 675:.\AudioControl.c **** *
 676:.\AudioControl.c **** * Parameters:
 677:.\AudioControl.c **** *  void
 678:.\AudioControl.c **** *
 679:.\AudioControl.c **** * Return:
 680:.\AudioControl.c **** *  void
 681:.\AudioControl.c **** *
 682:.\AudioControl.c **** *******************************************************************************/
 683:.\AudioControl.c **** void StartAudioComponents(void)
 684:.\AudioControl.c **** {
 1391              		.loc 1 684 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 1, uses_anonymous_args = 0
 1395 0000 80B5     		push	{r7, lr}
 1396              		.cfi_def_cfa_offset 8
 1397              		.cfi_offset 7, -8
 1398              		.cfi_offset 14, -4
 1399 0002 00AF     		add	r7, sp, #0
 1400              		.cfi_def_cfa_register 7
 685:.\AudioControl.c **** //	CyPins_SetPin(PSOC_CODEC_PWR_0); /* Enable this line if PSOC_CODEC_PWR pin in TopDesign is enabl
 686:.\AudioControl.c **** 
 687:.\AudioControl.c **** 	/* Change drive mode of I2S pins to Strong Drive at the start of audio streaming */
 688:.\AudioControl.c **** 	#ifdef I2S_PIN_DRIVE_MODE_CHANGE_IN_IDLE_MODE		
 689:.\AudioControl.c **** 		#ifndef MCLK_ALWAYS_ENABLED
 690:.\AudioControl.c ****         PSOC_I2S_MCLK_SetDriveMode(PSOC_I2S_MCLK_DM_STRONG);
 691:.\AudioControl.c **** 		#endif 
 692:.\AudioControl.c ****         PSOC_I2S_SDTO_SetDriveMode(PSOC_I2S_SDTO_DM_STRONG);
 1401              		.loc 1 692 0
 1402 0004 0C20     		movs	r0, #12
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 38


 1403 0006 FFF7FEFF 		bl	PSOC_I2S_SDTO_SetDriveMode
 693:.\AudioControl.c ****         PSOC_I2S_SCLK_SetDriveMode(PSOC_I2S_SCLK_DM_STRONG);
 1404              		.loc 1 693 0
 1405 000a 0C20     		movs	r0, #12
 1406 000c FFF7FEFF 		bl	PSOC_I2S_SCLK_SetDriveMode
 694:.\AudioControl.c ****         PSOC_I2S_LRCLK_SetDriveMode(PSOC_I2S_LRCLK_DM_STRONG);
 1407              		.loc 1 694 0
 1408 0010 0C20     		movs	r0, #12
 1409 0012 FFF7FEFF 		bl	PSOC_I2S_LRCLK_SetDriveMode
 695:.\AudioControl.c ****     #endif
 696:.\AudioControl.c **** 	
 697:.\AudioControl.c **** 	if(!CyPins_ReadPin(PSOC_CODEC_RST_0))
 1410              		.loc 1 697 0
 1411 0016 094B     		ldr	r3, .L50
 1412 0018 1B78     		ldrb	r3, [r3]
 1413 001a DBB2     		uxtb	r3, r3
 1414 001c 03F01003 		and	r3, r3, #16
 1415 0020 002B     		cmp	r3, #0
 1416 0022 07D1     		bne	.L49
 698:.\AudioControl.c ****         {
 699:.\AudioControl.c ****             CyPins_SetPin(PSOC_CODEC_RST_0);   /* Turn on CODEC by releasing reset */
 1417              		.loc 1 699 0
 1418 0024 054A     		ldr	r2, .L50
 1419 0026 054B     		ldr	r3, .L50
 1420 0028 1B78     		ldrb	r3, [r3]
 1421 002a DBB2     		uxtb	r3, r3
 1422 002c 43F00103 		orr	r3, r3, #1
 1423 0030 DBB2     		uxtb	r3, r3
 1424 0032 1370     		strb	r3, [r2]
 1425              	.L49:
 700:.\AudioControl.c ****         }
 701:.\AudioControl.c **** 	
 702:.\AudioControl.c **** 	#ifdef CODEC_I2C_SUPPORTED 
 703:.\AudioControl.c ****     	I2C_Master_CLKDIV1_REG = I2C_DIVIDER_400KHZ_OPERATION;
 704:.\AudioControl.c **** 	#endif
 705:.\AudioControl.c **** 		    
 706:.\AudioControl.c ****     I2S_Start();
 1426              		.loc 1 706 0
 1427 0034 FFF7FEFF 		bl	I2S_Start
 707:.\AudioControl.c **** 
 708:.\AudioControl.c ****     
 709:.\AudioControl.c ****     /* USER_CODE: Add your custom code to enable components which should be active when Audio strea
 710:.\AudioControl.c ****      * is active. PLL is shutdown until SetClockRate API is called on receiving a sampling frequenc
 711:.\AudioControl.c **** 	 * from the USB host */
 712:.\AudioControl.c **** }
 1428              		.loc 1 712 0
 1429 0038 80BD     		pop	{r7, pc}
 1430              	.L51:
 1431 003a 00BF     		.align	2
 1432              	.L50:
 1433 003c 1E500040 		.word	1073762334
 1434              		.cfi_endproc
 1435              	.LFE62:
 1436              		.size	StartAudioComponents, .-StartAudioComponents
 1437              		.section	.text.StopAudioComponents,"ax",%progbits
 1438              		.align	2
 1439              		.global	StopAudioComponents
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 39


 1440              		.thumb
 1441              		.thumb_func
 1442              		.type	StopAudioComponents, %function
 1443              	StopAudioComponents:
 1444              	.LFB63:
 713:.\AudioControl.c **** 
 714:.\AudioControl.c **** /*******************************************************************************
 715:.\AudioControl.c **** * Function Name: StopAudioComponents
 716:.\AudioControl.c **** ********************************************************************************
 717:.\AudioControl.c **** * Summary:
 718:.\AudioControl.c **** *       This function stops components for the digital audio signal path,
 719:.\AudioControl.c **** *        including the crystal and PLL.  This puts them in low-power mode.
 720:.\AudioControl.c **** *
 721:.\AudioControl.c **** * Parameters:
 722:.\AudioControl.c **** *  void
 723:.\AudioControl.c **** *
 724:.\AudioControl.c **** * Return:
 725:.\AudioControl.c **** *  void
 726:.\AudioControl.c **** *
 727:.\AudioControl.c **** *******************************************************************************/
 728:.\AudioControl.c **** void StopAudioComponents(void)
 729:.\AudioControl.c **** {
 1445              		.loc 1 729 0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 0
 1448              		@ frame_needed = 1, uses_anonymous_args = 0
 1449 0000 80B5     		push	{r7, lr}
 1450              		.cfi_def_cfa_offset 8
 1451              		.cfi_offset 7, -8
 1452              		.cfi_offset 14, -4
 1453 0002 00AF     		add	r7, sp, #0
 1454              		.cfi_def_cfa_register 7
 730:.\AudioControl.c **** 	if(codecInit)
 731:.\AudioControl.c ****     {
 732:.\AudioControl.c **** 	    #ifdef CODEC_I2C_SUPPORTED 
 733:.\AudioControl.c **** 		/* Mute the DAC output before configuring the clocks */
 734:.\AudioControl.c ****         CodecWrite.address = CODEC_DAC_OUTPUT_CTRL_REGISTER;
 735:.\AudioControl.c ****         CodecWrite.value = 0x73;
 736:.\AudioControl.c ****         WriteToSlave(CODEC_I2C_ADDRESS, &CodecWrite.address, sizeof(CodecWrite));
 737:.\AudioControl.c ****         
 738:.\AudioControl.c ****         /* shutdown the power to the codec */
 739:.\AudioControl.c ****         CodecWrite.address = CODEC_POWER_CTRL_REGISTER;
 740:.\AudioControl.c ****         CodecWrite.value = 0x01; /* Power down the codec */
 741:.\AudioControl.c ****         WriteToSlave(CODEC_I2C_ADDRESS, &CodecWrite.address, sizeof(CodecWrite));
 742:.\AudioControl.c ****         
 743:.\AudioControl.c ****         CyDelay(5);
 744:.\AudioControl.c ****         CyPins_ClearPin(PSOC_CODEC_RST_0); /* Hold CODEC in reset */
 745:.\AudioControl.c **** 		codecInit = FALSE;
 746:.\AudioControl.c **** 		#endif	
 747:.\AudioControl.c **** 	}
 748:.\AudioControl.c **** 		
 749:.\AudioControl.c ****     /* Change the Master clock source to IMO and turn off PLL*/
 750:.\AudioControl.c ****     CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 1455              		.loc 1 750 0
 1456 0004 0020     		movs	r0, #0
 1457 0006 FFF7FEFF 		bl	CyMasterClk_SetSource
 751:.\AudioControl.c **** 	CyDelayFreq(DELAY_FREQ_PARAM_VALUE_IMO);
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 40


 1458              		.loc 1 751 0
 1459 000a 0D48     		ldr	r0, .L53
 1460 000c FFF7FEFF 		bl	CyDelayFreq
 752:.\AudioControl.c ****     CyDelayUs(100);
 1461              		.loc 1 752 0
 1462 0010 6420     		movs	r0, #100
 1463 0012 FFF7FEFF 		bl	CyDelayUs
 753:.\AudioControl.c ****     
 754:.\AudioControl.c **** 	#ifndef MCLK_ALWAYS_ENABLED
 755:.\AudioControl.c ****     CyPLL_OUT_Stop(); 
 756:.\AudioControl.c **** 	#endif 
 757:.\AudioControl.c ****     
 758:.\AudioControl.c ****     I2S_Stop();
 1464              		.loc 1 758 0
 1465 0016 FFF7FEFF 		bl	I2S_Stop
 759:.\AudioControl.c **** 	
 760:.\AudioControl.c **** 	/* Changing the I2S pins drive mode to HiZ  */
 761:.\AudioControl.c **** 	#ifdef I2S_PIN_DRIVE_MODE_CHANGE_IN_IDLE_MODE	
 762:.\AudioControl.c **** 		#ifndef MCLK_ALWAYS_ENABLED
 763:.\AudioControl.c ****         PSOC_I2S_MCLK_SetDriveMode(PSOC_I2S_MCLK_DM_DIG_HIZ);
 764:.\AudioControl.c **** 		#endif 
 765:.\AudioControl.c ****         PSOC_I2S_SDTO_SetDriveMode(PSOC_I2S_SDTO_DM_DIG_HIZ);
 1466              		.loc 1 765 0
 1467 001a 0220     		movs	r0, #2
 1468 001c FFF7FEFF 		bl	PSOC_I2S_SDTO_SetDriveMode
 766:.\AudioControl.c ****         PSOC_I2S_SCLK_SetDriveMode(PSOC_I2S_SCLK_DM_DIG_HIZ);
 1469              		.loc 1 766 0
 1470 0020 0220     		movs	r0, #2
 1471 0022 FFF7FEFF 		bl	PSOC_I2S_SCLK_SetDriveMode
 767:.\AudioControl.c ****         PSOC_I2S_LRCLK_SetDriveMode(PSOC_I2S_LRCLK_DM_DIG_HIZ);
 1472              		.loc 1 767 0
 1473 0026 0220     		movs	r0, #2
 1474 0028 FFF7FEFF 		bl	PSOC_I2S_LRCLK_SetDriveMode
 768:.\AudioControl.c ****     #endif
 769:.\AudioControl.c ****        
 770:.\AudioControl.c **** 	#ifdef CODEC_I2C_SUPPORTED 
 771:.\AudioControl.c ****     /* Slow down I2C operation speed when CPU is running in idle mode */
 772:.\AudioControl.c ****     I2C_Master_CLKDIV1_REG = I2C_DIVIDER_25KHZ_OPERATION;
 773:.\AudioControl.c **** 	#endif
 774:.\AudioControl.c **** 	
 775:.\AudioControl.c **** 	//CyPins_ClearPin(PSOC_CODEC_PWR_0);	/* Uncomment this line only if PSOC_CODEC_PWR pin in TopDesig
 776:.\AudioControl.c **** 	
 777:.\AudioControl.c **** 	codecInit = FALSE;                 /* Reset CODEC initialization flag */
 1475              		.loc 1 777 0
 1476 002c 054B     		ldr	r3, .L53+4
 1477 002e 0022     		movs	r2, #0
 1478 0030 1A70     		strb	r2, [r3]
 778:.\AudioControl.c ****     audioClkConfigured = FALSE;        /* Audio clock reset flag */
 1479              		.loc 1 778 0
 1480 0032 054B     		ldr	r3, .L53+8
 1481 0034 0022     		movs	r2, #0
 1482 0036 1A70     		strb	r2, [r3]
 779:.\AudioControl.c ****     setRate = FREQUENCY_NOT_SET;       /* clear the current audio sampling rate set value */
 1483              		.loc 1 779 0
 1484 0038 044B     		ldr	r3, .L53+12
 1485 003a FF22     		movs	r2, #255
 1486 003c 1A70     		strb	r2, [r3]
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 41


 780:.\AudioControl.c ****     
 781:.\AudioControl.c ****     /* USER_CODE: Add your custom code to shutdown components or hardware blocks which need not be 
 782:.\AudioControl.c ****      * or MIDI interface is inactive. All the audio components, DMAs and clocks are shutdown at thi
 783:.\AudioControl.c ****      * and the system will remain in this mode until audio interface is made active or StartAudioCo
 784:.\AudioControl.c ****      * SetClockRate APIs are called by user code. Refer to "Idle Mode Clock Info" schematic page fo
 785:.\AudioControl.c **** 	 * on system clock in this mode */
 786:.\AudioControl.c **** }
 1487              		.loc 1 786 0
 1488 003e 80BD     		pop	{r7, pc}
 1489              	.L54:
 1490              		.align	2
 1491              	.L53:
 1492 0040 00366E01 		.word	24000000
 1493 0044 00000000 		.word	codecInit
 1494 0048 00000000 		.word	audioClkConfigured
 1495 004c 00000000 		.word	setRate
 1496              		.cfi_endproc
 1497              	.LFE63:
 1498              		.size	StopAudioComponents, .-StopAudioComponents
 1499              		.section	.text.HandleSamplingFrequencyChangeRequest,"ax",%progbits
 1500              		.align	2
 1501              		.global	HandleSamplingFrequencyChangeRequest
 1502              		.thumb
 1503              		.thumb_func
 1504              		.type	HandleSamplingFrequencyChangeRequest, %function
 1505              	HandleSamplingFrequencyChangeRequest:
 1506              	.LFB64:
 787:.\AudioControl.c **** 
 788:.\AudioControl.c **** /*******************************************************************************
 789:.\AudioControl.c **** * Function Name: HandleSamplingFrequencyChangeRequest
 790:.\AudioControl.c **** ********************************************************************************
 791:.\AudioControl.c **** * Summary:
 792:.\AudioControl.c **** *       This function processes the sampling frequency change request from USB
 793:.\AudioControl.c **** *       host and updates the accessory playback sampling frequency accordingly
 794:.\AudioControl.c **** *
 795:.\AudioControl.c **** * Parameters:
 796:.\AudioControl.c **** *  void
 797:.\AudioControl.c **** *
 798:.\AudioControl.c **** * Return:
 799:.\AudioControl.c **** *  void
 800:.\AudioControl.c **** *
 801:.\AudioControl.c **** *******************************************************************************/
 802:.\AudioControl.c **** void HandleSamplingFrequencyChangeRequest(void)
 803:.\AudioControl.c **** {
 1507              		.loc 1 803 0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 8
 1510              		@ frame_needed = 1, uses_anonymous_args = 0
 1511 0000 80B5     		push	{r7, lr}
 1512              		.cfi_def_cfa_offset 8
 1513              		.cfi_offset 7, -8
 1514              		.cfi_offset 14, -4
 1515 0002 82B0     		sub	sp, sp, #8
 1516              		.cfi_def_cfa_offset 16
 1517 0004 00AF     		add	r7, sp, #0
 1518              		.cfi_def_cfa_register 7
 804:.\AudioControl.c ****     /* USBFS_frequencyChanged is set by the USB component when a setup token for Sampling frequency
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 42


 805:.\AudioControl.c ****      * It takes a sometime for the host to actually send the Out token containing the updated sampl
 806:.\AudioControl.c ****      * Wait for USBFS_transferState to be equal to USBFS_TRANS_STATE_IDLE to make sure the updated 
 807:.\AudioControl.c ****      * is used for setting audio clocks */
 808:.\AudioControl.c ****      
 809:.\AudioControl.c ****     if(USBFS_TRANS_STATE_IDLE == USBFS_transferState && USBFS_frequencyChanged)
 1519              		.loc 1 809 0
 1520 0006 404B     		ldr	r3, .L65
 1521 0008 1B78     		ldrb	r3, [r3]
 1522 000a DBB2     		uxtb	r3, r3
 1523 000c 002B     		cmp	r3, #0
 1524 000e 78D1     		bne	.L55
 1525              		.loc 1 809 0 is_stmt 0 discriminator 1
 1526 0010 3E4B     		ldr	r3, .L65+4
 1527 0012 1B78     		ldrb	r3, [r3]
 1528 0014 DBB2     		uxtb	r3, r3
 1529 0016 002B     		cmp	r3, #0
 1530 0018 73D0     		beq	.L55
 810:.\AudioControl.c ****     {
 811:.\AudioControl.c ****         #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 812:.\AudioControl.c ****         #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 813:.\AudioControl.c ****         if((!inPlaying && AUDIO_OUT_ENDPOINT == USBFS_frequencyChanged) || 
 1531              		.loc 1 813 0 is_stmt 1
 1532 001a 3D4B     		ldr	r3, .L65+8
 1533 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1534 001e 002B     		cmp	r3, #0
 1535 0020 04D1     		bne	.L57
 1536              		.loc 1 813 0 is_stmt 0 discriminator 1
 1537 0022 3A4B     		ldr	r3, .L65+4
 1538 0024 1B78     		ldrb	r3, [r3]
 1539 0026 DBB2     		uxtb	r3, r3
 1540 0028 012B     		cmp	r3, #1
 1541 002a 08D0     		beq	.L58
 1542              	.L57:
 814:.\AudioControl.c ****             (!outPlaying && AUDIO_IN_ENDPOINT == USBFS_frequencyChanged ))
 1543              		.loc 1 814 0 is_stmt 1 discriminator 3
 1544 002c 394B     		ldr	r3, .L65+12
 1545 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 813:.\AudioControl.c ****             (!outPlaying && AUDIO_IN_ENDPOINT == USBFS_frequencyChanged ))
 1546              		.loc 1 813 0 discriminator 3
 1547 0030 002B     		cmp	r3, #0
 1548 0032 63D1     		bne	.L59
 1549              		.loc 1 814 0
 1550 0034 354B     		ldr	r3, .L65+4
 1551 0036 1B78     		ldrb	r3, [r3]
 1552 0038 DBB2     		uxtb	r3, r3
 1553 003a 022B     		cmp	r3, #2
 1554 003c 5ED1     		bne	.L59
 1555              	.L58:
 1556              	.LBB2:
 815:.\AudioControl.c ****         #endif            
 816:.\AudioControl.c ****         #endif 
 817:.\AudioControl.c ****         {
 818:.\AudioControl.c ****             uint32 newFrequency;
 819:.\AudioControl.c ****             uint8 newRate = RATE_48KHZ;
 1557              		.loc 1 819 0
 1558 003e 0023     		movs	r3, #0
 1559 0040 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 43


 820:.\AudioControl.c ****             
 821:.\AudioControl.c ****             newFrequency = (((uint32)USBFS_currentSampleFrequency[USBFS_frequencyChanged][2] << 16)
 1560              		.loc 1 821 0
 1561 0042 324B     		ldr	r3, .L65+4
 1562 0044 1B78     		ldrb	r3, [r3]
 1563 0046 DBB2     		uxtb	r3, r3
 1564 0048 1946     		mov	r1, r3
 1565 004a 334A     		ldr	r2, .L65+16
 1566 004c 0B46     		mov	r3, r1
 1567 004e 5B00     		lsls	r3, r3, #1
 1568 0050 0B44     		add	r3, r3, r1
 1569 0052 1344     		add	r3, r3, r2
 1570 0054 0233     		adds	r3, r3, #2
 1571 0056 1B78     		ldrb	r3, [r3]
 1572 0058 DBB2     		uxtb	r3, r3
 1573 005a 1A04     		lsls	r2, r3, #16
 822:.\AudioControl.c ****                               ((uint32)USBFS_currentSampleFrequency[USBFS_frequencyChanged][1] << 8
 1574              		.loc 1 822 0
 1575 005c 2B4B     		ldr	r3, .L65+4
 1576 005e 1B78     		ldrb	r3, [r3]
 1577 0060 DBB2     		uxtb	r3, r3
 1578 0062 1846     		mov	r0, r3
 1579 0064 2C49     		ldr	r1, .L65+16
 1580 0066 0346     		mov	r3, r0
 1581 0068 5B00     		lsls	r3, r3, #1
 1582 006a 0344     		add	r3, r3, r0
 1583 006c 0B44     		add	r3, r3, r1
 1584 006e 0133     		adds	r3, r3, #1
 1585 0070 1B78     		ldrb	r3, [r3]
 1586 0072 DBB2     		uxtb	r3, r3
 1587 0074 1B02     		lsls	r3, r3, #8
 821:.\AudioControl.c ****                               ((uint32)USBFS_currentSampleFrequency[USBFS_frequencyChanged][1] << 8
 1588              		.loc 1 821 0
 1589 0076 1A43     		orrs	r2, r2, r3
 823:.\AudioControl.c ****                               ((uint32)USBFS_currentSampleFrequency[USBFS_frequencyChanged][0]));
 1590              		.loc 1 823 0
 1591 0078 244B     		ldr	r3, .L65+4
 1592 007a 1B78     		ldrb	r3, [r3]
 1593 007c DBB2     		uxtb	r3, r3
 1594 007e 1846     		mov	r0, r3
 1595 0080 2549     		ldr	r1, .L65+16
 1596 0082 0346     		mov	r3, r0
 1597 0084 5B00     		lsls	r3, r3, #1
 1598 0086 0344     		add	r3, r3, r0
 1599 0088 0B44     		add	r3, r3, r1
 1600 008a 1B78     		ldrb	r3, [r3]
 1601 008c DBB2     		uxtb	r3, r3
 821:.\AudioControl.c ****                               ((uint32)USBFS_currentSampleFrequency[USBFS_frequencyChanged][1] << 8
 1602              		.loc 1 821 0
 1603 008e 1343     		orrs	r3, r3, r2
 1604 0090 3B60     		str	r3, [r7]
 824:.\AudioControl.c **** 
 825:.\AudioControl.c **** 			USBFS_frequencyChanged = 0;
 1605              		.loc 1 825 0
 1606 0092 1E4B     		ldr	r3, .L65+4
 1607 0094 0022     		movs	r2, #0
 1608 0096 1A70     		strb	r2, [r3]
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 44


 826:.\AudioControl.c **** 			
 827:.\AudioControl.c ****             if(SAMPLING_RATE_48KHZ == newFrequency)
 1609              		.loc 1 827 0
 1610 0098 3B68     		ldr	r3, [r7]
 1611 009a 4BF68032 		movw	r2, #48000
 1612 009e 9342     		cmp	r3, r2
 1613 00a0 02D1     		bne	.L60
 828:.\AudioControl.c ****             {
 829:.\AudioControl.c ****                 newRate = RATE_48KHZ;
 1614              		.loc 1 829 0
 1615 00a2 0023     		movs	r3, #0
 1616 00a4 FB71     		strb	r3, [r7, #7]
 1617 00a6 0DE0     		b	.L61
 1618              	.L60:
 830:.\AudioControl.c ****             }
 831:.\AudioControl.c ****             else if(SAMPLING_RATE_44KHZ == newFrequency)
 1619              		.loc 1 831 0
 1620 00a8 3B68     		ldr	r3, [r7]
 1621 00aa 4AF64442 		movw	r2, #44100
 1622 00ae 9342     		cmp	r3, r2
 1623 00b0 02D1     		bne	.L62
 832:.\AudioControl.c ****             {
 833:.\AudioControl.c ****                 newRate = RATE_44KHZ;
 1624              		.loc 1 833 0
 1625 00b2 0123     		movs	r3, #1
 1626 00b4 FB71     		strb	r3, [r7, #7]
 1627 00b6 05E0     		b	.L61
 1628              	.L62:
 834:.\AudioControl.c ****             }
 835:.\AudioControl.c ****             else if(SAMPLING_RATE_32KHZ == newFrequency)
 1629              		.loc 1 835 0
 1630 00b8 3B68     		ldr	r3, [r7]
 1631 00ba B3F5FA4F 		cmp	r3, #32000
 1632 00be 01D1     		bne	.L61
 836:.\AudioControl.c ****             {
 837:.\AudioControl.c ****                 newRate = RATE_32KHZ;
 1633              		.loc 1 837 0
 1634 00c0 0223     		movs	r3, #2
 1635 00c2 FB71     		strb	r3, [r7, #7]
 1636              	.L61:
 838:.\AudioControl.c ****             }
 839:.\AudioControl.c ****                 
 840:.\AudioControl.c ****             if(setRate != newRate)
 1637              		.loc 1 840 0
 1638 00c4 154B     		ldr	r3, .L65+20
 1639 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1640 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1641 00ca 9A42     		cmp	r2, r3
 1642 00cc 12D0     		beq	.L63
 841:.\AudioControl.c ****             {   
 842:.\AudioControl.c ****                 setRate = newRate;
 1643              		.loc 1 842 0
 1644 00ce 134A     		ldr	r2, .L65+20
 1645 00d0 FB79     		ldrb	r3, [r7, #7]
 1646 00d2 1370     		strb	r3, [r2]
 843:.\AudioControl.c ****                 
 844:.\AudioControl.c ****                 if(lowPowerIdle)
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 45


 1647              		.loc 1 844 0
 1648 00d4 124B     		ldr	r3, .L65+24
 1649 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1650 00d8 002B     		cmp	r3, #0
 1651 00da 03D0     		beq	.L64
 845:.\AudioControl.c ****                 {
 846:.\AudioControl.c ****                     rateChangedWhileInactive = TRUE;
 1652              		.loc 1 846 0
 1653 00dc 114B     		ldr	r3, .L65+28
 1654 00de 0122     		movs	r2, #1
 1655 00e0 1A70     		strb	r2, [r3]
 1656 00e2 07E0     		b	.L63
 1657              	.L64:
 847:.\AudioControl.c ****                 }
 848:.\AudioControl.c ****                 else
 849:.\AudioControl.c ****                 {
 850:.\AudioControl.c ****                     SetClockRate(setRate);
 1658              		.loc 1 850 0
 1659 00e4 0D4B     		ldr	r3, .L65+20
 1660 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1661 00e8 1846     		mov	r0, r3
 1662 00ea FFF7FEFF 		bl	SetClockRate
 851:.\AudioControl.c ****                     rateChangedWhileInactive = FALSE;              
 1663              		.loc 1 851 0
 1664 00ee 0D4B     		ldr	r3, .L65+28
 1665 00f0 0022     		movs	r2, #0
 1666 00f2 1A70     		strb	r2, [r3]
 1667              	.L63:
 852:.\AudioControl.c ****                 }
 853:.\AudioControl.c ****             }
 854:.\AudioControl.c ****             
 855:.\AudioControl.c ****             clockSwitchTimer = FALSE;
 1668              		.loc 1 855 0
 1669 00f4 0C4B     		ldr	r3, .L65+32
 1670 00f6 0022     		movs	r2, #0
 1671 00f8 1A70     		strb	r2, [r3]
 1672              	.LBE2:
 817:.\AudioControl.c ****             uint32 newFrequency;
 1673              		.loc 1 817 0
 1674 00fa 02E0     		b	.L55
 1675              	.L59:
 856:.\AudioControl.c ****         }
 857:.\AudioControl.c ****         #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 858:.\AudioControl.c ****         #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 859:.\AudioControl.c ****         else
 860:.\AudioControl.c ****         {
 861:.\AudioControl.c ****             /* If another frequency change request is received when one of the audio stream is stil
 862:.\AudioControl.c ****              * frequency change request */
 863:.\AudioControl.c ****             USBFS_frequencyChanged = 0;
 1676              		.loc 1 863 0
 1677 00fc 034B     		ldr	r3, .L65+4
 1678 00fe 0022     		movs	r2, #0
 1679 0100 1A70     		strb	r2, [r3]
 1680              	.L55:
 864:.\AudioControl.c ****         }
 865:.\AudioControl.c ****         #endif
 866:.\AudioControl.c ****         #endif
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 46


 867:.\AudioControl.c ****     }
 868:.\AudioControl.c ****         
 869:.\AudioControl.c **** }
 1681              		.loc 1 869 0
 1682 0102 0837     		adds	r7, r7, #8
 1683              		.cfi_def_cfa_offset 8
 1684 0104 BD46     		mov	sp, r7
 1685              		.cfi_def_cfa_register 13
 1686              		@ sp needed
 1687 0106 80BD     		pop	{r7, pc}
 1688              	.L66:
 1689              		.align	2
 1690              	.L65:
 1691 0108 00000000 		.word	USBFS_transferState
 1692 010c 00000000 		.word	USBFS_frequencyChanged
 1693 0110 00000000 		.word	inPlaying
 1694 0114 00000000 		.word	outPlaying
 1695 0118 00000000 		.word	USBFS_currentSampleFrequency
 1696 011c 00000000 		.word	setRate
 1697 0120 00000000 		.word	lowPowerIdle
 1698 0124 00000000 		.word	rateChangedWhileInactive
 1699 0128 00000000 		.word	clockSwitchTimer
 1700              		.cfi_endproc
 1701              	.LFE64:
 1702              		.size	HandleSamplingFrequencyChangeRequest, .-HandleSamplingFrequencyChangeRequest
 1703              		.section	.text.HandleDigitalAudioLowPowerMode,"ax",%progbits
 1704              		.align	2
 1705              		.global	HandleDigitalAudioLowPowerMode
 1706              		.thumb
 1707              		.thumb_func
 1708              		.type	HandleDigitalAudioLowPowerMode, %function
 1709              	HandleDigitalAudioLowPowerMode:
 1710              	.LFB65:
 870:.\AudioControl.c **** 
 871:.\AudioControl.c **** /*******************************************************************************
 872:.\AudioControl.c **** * Function Name: HandleDigitalAudioLowPowerMode
 873:.\AudioControl.c **** ********************************************************************************
 874:.\AudioControl.c **** * Summary:
 875:.\AudioControl.c **** *       This function switches between low and high power modes for digital audio 
 876:.\AudioControl.c **** *       depending on whether the audio stream from USB host is active 
 877:.\AudioControl.c **** *       or not.
 878:.\AudioControl.c **** *
 879:.\AudioControl.c **** * Parameters:
 880:.\AudioControl.c **** *  void
 881:.\AudioControl.c **** *
 882:.\AudioControl.c **** * Return:
 883:.\AudioControl.c **** *  void
 884:.\AudioControl.c **** *
 885:.\AudioControl.c **** *******************************************************************************/
 886:.\AudioControl.c **** void HandleDigitalAudioLowPowerMode(void)
 887:.\AudioControl.c **** {
 1711              		.loc 1 887 0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 0
 1714              		@ frame_needed = 1, uses_anonymous_args = 0
 1715 0000 80B5     		push	{r7, lr}
 1716              		.cfi_def_cfa_offset 8
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 47


 1717              		.cfi_offset 7, -8
 1718              		.cfi_offset 14, -4
 1719 0002 00AF     		add	r7, sp, #0
 1720              		.cfi_def_cfa_register 7
 888:.\AudioControl.c ****     /* Handle STOP/START of audio stream */
 889:.\AudioControl.c ****     if(FALSE == lowPowerIdle)
 1721              		.loc 1 889 0
 1722 0004 2C4B     		ldr	r3, .L72
 1723 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1724 0008 002B     		cmp	r3, #0
 1725 000a 28D1     		bne	.L68
 890:.\AudioControl.c ****     {                        
 891:.\AudioControl.c ****         if(FALSE == lowPowerIdle && IS_USB_AUDIO_INTERFACE_NOT_ACTIVE())
 1726              		.loc 1 891 0
 1727 000c 2A4B     		ldr	r3, .L72
 1728 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1729 0010 002B     		cmp	r3, #0
 1730 0012 24D1     		bne	.L68
 1731              		.loc 1 891 0 is_stmt 0 discriminator 1
 1732 0014 294B     		ldr	r3, .L72+4
 1733 0016 5B78     		ldrb	r3, [r3, #1]
 1734 0018 DBB2     		uxtb	r3, r3
 1735 001a 002B     		cmp	r3, #0
 1736 001c 1FD1     		bne	.L68
 1737              		.loc 1 891 0 discriminator 2
 1738 001e 274B     		ldr	r3, .L72+4
 1739 0020 9B78     		ldrb	r3, [r3, #2]
 1740 0022 DBB2     		uxtb	r3, r3
 1741 0024 002B     		cmp	r3, #0
 1742 0026 1AD1     		bne	.L68
 892:.\AudioControl.c ****         {
 893:.\AudioControl.c ****         	if(0 == clockSwitchTimer)
 1743              		.loc 1 893 0 is_stmt 1
 1744 0028 254B     		ldr	r3, .L72+8
 1745 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1746 002c 002B     		cmp	r3, #0
 1747 002e 02D1     		bne	.L69
 894:.\AudioControl.c ****             {
 895:.\AudioControl.c ****                 clockSwitchTimer = CLOCK_SWITCHING_TIMEOUT;
 1748              		.loc 1 895 0
 1749 0030 234B     		ldr	r3, .L72+8
 1750 0032 6422     		movs	r2, #100
 1751 0034 1A70     		strb	r2, [r3]
 1752              	.L69:
 896:.\AudioControl.c ****             }
 897:.\AudioControl.c ****             /* Both Audio Interfaces are inactive for more than 500ms -> enter low power idle mode 
 898:.\AudioControl.c ****             if(CLOCK_SWITCH_TIMED_OUT == clockSwitchTimer)
 1753              		.loc 1 898 0
 1754 0036 224B     		ldr	r3, .L72+8
 1755 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1756 003a 012B     		cmp	r3, #1
 1757 003c 0FD1     		bne	.L68
 899:.\AudioControl.c ****             {
 900:.\AudioControl.c ****                 lowPowerIdle = TRUE;
 1758              		.loc 1 900 0
 1759 003e 1E4B     		ldr	r3, .L72
 1760 0040 0122     		movs	r2, #1
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 48


 1761 0042 1A70     		strb	r2, [r3]
 901:.\AudioControl.c **** 				StopAudioComponents();            /* Changes to 24 MHz IMO for USB */
 1762              		.loc 1 901 0
 1763 0044 FFF7FEFF 		bl	StopAudioComponents
 902:.\AudioControl.c **** 				CyPins_ClearPin(PSOC_CODEC_RST_0); /* Hold CODEC in reset */
 1764              		.loc 1 902 0
 1765 0048 1E4A     		ldr	r2, .L72+12
 1766 004a 1E4B     		ldr	r3, .L72+12
 1767 004c 1B78     		ldrb	r3, [r3]
 1768 004e DBB2     		uxtb	r3, r3
 1769 0050 23F00103 		bic	r3, r3, #1
 1770 0054 DBB2     		uxtb	r3, r3
 1771 0056 1370     		strb	r3, [r2]
 903:.\AudioControl.c ****                 codecInit = FALSE;
 1772              		.loc 1 903 0
 1773 0058 1B4B     		ldr	r3, .L72+16
 1774 005a 0022     		movs	r2, #0
 1775 005c 1A70     		strb	r2, [r3]
 1776              	.L68:
 904:.\AudioControl.c ****             }
 905:.\AudioControl.c ****         }
 906:.\AudioControl.c ****         
 907:.\AudioControl.c ****         /* USER_CODE: [High -> Low power transition] Placeholder for shutting down external hardwar
 908:.\AudioControl.c ****          * components before going into low power mode */
 909:.\AudioControl.c ****     }
 910:.\AudioControl.c ****     
 911:.\AudioControl.c ****     /* Start the Audio path components only if the audio streaming interface is active and the syst
 912:.\AudioControl.c **** 	 * power mode */
 913:.\AudioControl.c ****     if(TRUE == lowPowerIdle)
 1777              		.loc 1 913 0
 1778 005e 164B     		ldr	r3, .L72
 1779 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1780 0062 012B     		cmp	r3, #1
 1781 0064 26D1     		bne	.L67
 914:.\AudioControl.c ****     {
 915:.\AudioControl.c ****         /* Audio streaming is active on atleast one interface */
 916:.\AudioControl.c ****         if(TRUE == lowPowerIdle && !(IS_USB_AUDIO_INTERFACE_NOT_ACTIVE()) )
 1782              		.loc 1 916 0
 1783 0066 144B     		ldr	r3, .L72
 1784 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1785 006a 012B     		cmp	r3, #1
 1786 006c 22D1     		bne	.L67
 1787              		.loc 1 916 0 is_stmt 0 discriminator 1
 1788 006e 134B     		ldr	r3, .L72+4
 1789 0070 5B78     		ldrb	r3, [r3, #1]
 1790 0072 DBB2     		uxtb	r3, r3
 1791 0074 002B     		cmp	r3, #0
 1792 0076 04D1     		bne	.L71
 1793              		.loc 1 916 0 discriminator 2
 1794 0078 104B     		ldr	r3, .L72+4
 1795 007a 9B78     		ldrb	r3, [r3, #2]
 1796 007c DBB2     		uxtb	r3, r3
 1797 007e 002B     		cmp	r3, #0
 1798 0080 18D0     		beq	.L67
 1799              	.L71:
 917:.\AudioControl.c ****         {
 918:.\AudioControl.c ****             lowPowerIdle = FALSE;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 49


 1800              		.loc 1 918 0 is_stmt 1
 1801 0082 0D4B     		ldr	r3, .L72
 1802 0084 0022     		movs	r2, #0
 1803 0086 1A70     		strb	r2, [r3]
 919:.\AudioControl.c **** 			StartAudioComponents();        	   /* Turn on PLL */
 1804              		.loc 1 919 0
 1805 0088 FFF7FEFF 		bl	StartAudioComponents
 920:.\AudioControl.c **** 			CyPins_SetPin(PSOC_CODEC_RST_0);   /* Turn on CODEC by releasing reset */
 1806              		.loc 1 920 0
 1807 008c 0D4A     		ldr	r2, .L72+12
 1808 008e 0D4B     		ldr	r3, .L72+12
 1809 0090 1B78     		ldrb	r3, [r3]
 1810 0092 DBB2     		uxtb	r3, r3
 1811 0094 43F00103 		orr	r3, r3, #1
 1812 0098 DBB2     		uxtb	r3, r3
 1813 009a 1370     		strb	r3, [r2]
 921:.\AudioControl.c ****             
 922:.\AudioControl.c ****             if(rateChangedWhileInactive)
 1814              		.loc 1 922 0
 1815 009c 0B4B     		ldr	r3, .L72+20
 1816 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1817 00a0 002B     		cmp	r3, #0
 1818 00a2 07D0     		beq	.L67
 923:.\AudioControl.c ****             {
 924:.\AudioControl.c **** 				SetClockRate(setRate);
 1819              		.loc 1 924 0
 1820 00a4 0A4B     		ldr	r3, .L72+24
 1821 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1822 00a8 1846     		mov	r0, r3
 1823 00aa FFF7FEFF 		bl	SetClockRate
 925:.\AudioControl.c ****                 rateChangedWhileInactive = FALSE;
 1824              		.loc 1 925 0
 1825 00ae 074B     		ldr	r3, .L72+20
 1826 00b0 0022     		movs	r2, #0
 1827 00b2 1A70     		strb	r2, [r3]
 1828              	.L67:
 926:.\AudioControl.c ****             }
 927:.\AudioControl.c ****         }
 928:.\AudioControl.c ****       
 929:.\AudioControl.c ****         /* USER_CODE: [Low -> High power transition] Placeholder for turning on external hardware b
 930:.\AudioControl.c ****          * components before transitioning into high power mode */
 931:.\AudioControl.c ****     }
 932:.\AudioControl.c **** }
 1829              		.loc 1 932 0
 1830 00b4 80BD     		pop	{r7, pc}
 1831              	.L73:
 1832 00b6 00BF     		.align	2
 1833              	.L72:
 1834 00b8 00000000 		.word	lowPowerIdle
 1835 00bc 00000000 		.word	USBFS_interfaceSetting
 1836 00c0 00000000 		.word	clockSwitchTimer
 1837 00c4 1E500040 		.word	1073762334
 1838 00c8 00000000 		.word	codecInit
 1839 00cc 00000000 		.word	rateChangedWhileInactive
 1840 00d0 00000000 		.word	setRate
 1841              		.cfi_endproc
 1842              	.LFE65:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 50


 1843              		.size	HandleDigitalAudioLowPowerMode, .-HandleDigitalAudioLowPowerMode
 1844              		.section	.text.UpdateAudioStatusUI,"ax",%progbits
 1845              		.align	2
 1846              		.global	UpdateAudioStatusUI
 1847              		.thumb
 1848              		.thumb_func
 1849              		.type	UpdateAudioStatusUI, %function
 1850              	UpdateAudioStatusUI:
 1851              	.LFB66:
 933:.\AudioControl.c **** 
 934:.\AudioControl.c **** /*******************************************************************************
 935:.\AudioControl.c **** * Function Name: UpdateAudioStatusUI
 936:.\AudioControl.c **** ********************************************************************************
 937:.\AudioControl.c **** * Summary:
 938:.\AudioControl.c **** *       Updates the Audio playback status on the LEDs
 939:.\AudioControl.c **** *
 940:.\AudioControl.c **** * Parameters:
 941:.\AudioControl.c **** *  void
 942:.\AudioControl.c **** *
 943:.\AudioControl.c **** * Return:
 944:.\AudioControl.c **** *  void
 945:.\AudioControl.c **** *
 946:.\AudioControl.c **** *******************************************************************************/
 947:.\AudioControl.c **** void UpdateAudioStatusUI(void)
 948:.\AudioControl.c **** {
 1852              		.loc 1 948 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
 1856              		@ link register save eliminated.
 1857 0000 80B4     		push	{r7}
 1858              		.cfi_def_cfa_offset 4
 1859              		.cfi_offset 7, -4
 1860 0002 00AF     		add	r7, sp, #0
 1861              		.cfi_def_cfa_register 7
 949:.\AudioControl.c ****    	/* Turn on the STATUS LED  when Audio Out or Audio In stream is active */
 950:.\AudioControl.c **** 
 951:.\AudioControl.c **** 	if ( ZERO
 952:.\AudioControl.c **** 		 #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 953:.\AudioControl.c **** 		 || inPlaying 
 1862              		.loc 1 953 0
 1863 0004 0E4B     		ldr	r3, .L78
 1864 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 951:.\AudioControl.c **** 		 #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 1865              		.loc 1 951 0
 1866 0008 002B     		cmp	r3, #0
 1867 000a 03D1     		bne	.L75
 954:.\AudioControl.c **** 		 #endif
 955:.\AudioControl.c **** 		 #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
 956:.\AudioControl.c **** 		 || outPlaying 
 1868              		.loc 1 956 0
 1869 000c 0D4B     		ldr	r3, .L78+4
 1870 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1871 0010 002B     		cmp	r3, #0
 1872 0012 08D0     		beq	.L76
 1873              	.L75:
 957:.\AudioControl.c **** 		 #endif
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 51


 958:.\AudioControl.c **** 		 )
 959:.\AudioControl.c **** 	{
 960:.\AudioControl.c **** 		CyPins_ClearPin(PSOC_STATUS_LED_0); /* Turn on the Status LED */
 1874              		.loc 1 960 0
 1875 0014 0C4A     		ldr	r2, .L78+8
 1876 0016 0C4B     		ldr	r3, .L78+8
 1877 0018 1B78     		ldrb	r3, [r3]
 1878 001a DBB2     		uxtb	r3, r3
 1879 001c 23F00103 		bic	r3, r3, #1
 1880 0020 DBB2     		uxtb	r3, r3
 1881 0022 1370     		strb	r3, [r2]
 1882 0024 07E0     		b	.L74
 1883              	.L76:
 961:.\AudioControl.c **** 	}
 962:.\AudioControl.c **** 	
 963:.\AudioControl.c **** 	else
 964:.\AudioControl.c **** 	{
 965:.\AudioControl.c **** 		CyPins_SetPin(PSOC_STATUS_LED_0); /* Turn off the Status LED */
 1884              		.loc 1 965 0
 1885 0026 084A     		ldr	r2, .L78+8
 1886 0028 074B     		ldr	r3, .L78+8
 1887 002a 1B78     		ldrb	r3, [r3]
 1888 002c DBB2     		uxtb	r3, r3
 1889 002e 43F00103 		orr	r3, r3, #1
 1890 0032 DBB2     		uxtb	r3, r3
 1891 0034 1370     		strb	r3, [r2]
 1892              	.L74:
 966:.\AudioControl.c **** 	}
 967:.\AudioControl.c **** }
 1893              		.loc 1 967 0
 1894 0036 BD46     		mov	sp, r7
 1895              		.cfi_def_cfa_register 13
 1896              		@ sp needed
 1897 0038 5DF8047B 		ldr	r7, [sp], #4
 1898              		.cfi_restore 7
 1899              		.cfi_def_cfa_offset 0
 1900 003c 7047     		bx	lr
 1901              	.L79:
 1902 003e 00BF     		.align	2
 1903              	.L78:
 1904 0040 00000000 		.word	inPlaying
 1905 0044 00000000 		.word	outPlaying
 1906 0048 14500040 		.word	1073762324
 1907              		.cfi_endproc
 1908              	.LFE66:
 1909              		.size	UpdateAudioStatusUI, .-UpdateAudioStatusUI
 1910              		.section	.text.HandleAudioInBuffer,"ax",%progbits
 1911              		.align	2
 1912              		.global	HandleAudioInBuffer
 1913              		.thumb
 1914              		.thumb_func
 1915              		.type	HandleAudioInBuffer, %function
 1916              	HandleAudioInBuffer:
 1917              	.LFB67:
 968:.\AudioControl.c **** 
 969:.\AudioControl.c **** /*******************************************************************************
 970:.\AudioControl.c **** * Function Name: HandleAudioInBuffer
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 52


 971:.\AudioControl.c **** ********************************************************************************
 972:.\AudioControl.c **** * Summary:
 973:.\AudioControl.c **** *       This routine clears the audio IN stream circular buffer and the audio
 974:.\AudioControl.c **** *       IN endpoint memory location based on the status of the audio IN stream.
 975:.\AudioControl.c **** *
 976:.\AudioControl.c **** * Parameters:
 977:.\AudioControl.c **** *  void
 978:.\AudioControl.c **** *
 979:.\AudioControl.c **** * Return:
 980:.\AudioControl.c **** *  void
 981:.\AudioControl.c **** *
 982:.\AudioControl.c **** *******************************************************************************/
 983:.\AudioControl.c **** #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
 984:.\AudioControl.c **** void HandleAudioInBuffer(void)
 985:.\AudioControl.c **** {
 1918              		.loc 1 985 0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 8
 1921              		@ frame_needed = 1, uses_anonymous_args = 0
 1922              		@ link register save eliminated.
 1923 0000 80B4     		push	{r7}
 1924              		.cfi_def_cfa_offset 4
 1925              		.cfi_offset 7, -4
 1926 0002 83B0     		sub	sp, sp, #12
 1927              		.cfi_def_cfa_offset 16
 1928 0004 00AF     		add	r7, sp, #0
 1929              		.cfi_def_cfa_register 7
 986:.\AudioControl.c ****     uint16 index;
 987:.\AudioControl.c ****     
 988:.\AudioControl.c ****     if(clearInBuffer)
 1930              		.loc 1 988 0
 1931 0006 104B     		ldr	r3, .L85
 1932 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1933 000a 002B     		cmp	r3, #0
 1934 000c 17D0     		beq	.L80
 989:.\AudioControl.c ****     {
 990:.\AudioControl.c ****         /* Clear the IN circular buffer - This is slow and hence part of the main loop */
 991:.\AudioControl.c ****         for (index = 0; index < sizeof(inBuffer); index++)
 1935              		.loc 1 991 0
 1936 000e 0023     		movs	r3, #0
 1937 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 1938 0012 0DE0     		b	.L82
 1939              	.L84:
 992:.\AudioControl.c ****         {
 993:.\AudioControl.c ****             if(index<IN_AUDIOMAXPKT)
 1940              		.loc 1 993 0
 1941 0014 FB88     		ldrh	r3, [r7, #6]
 1942 0016 BF2B     		cmp	r3, #191
 1943 0018 03D8     		bhi	.L83
 994:.\AudioControl.c ****             {
 995:.\AudioControl.c ****                 inRam[index] = 0;
 1944              		.loc 1 995 0
 1945 001a FB88     		ldrh	r3, [r7, #6]
 1946 001c 0B4A     		ldr	r2, .L85+4
 1947 001e 0021     		movs	r1, #0
 1948 0020 D154     		strb	r1, [r2, r3]
 1949              	.L83:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 53


 996:.\AudioControl.c ****             }
 997:.\AudioControl.c ****             inBuffer[index] = 0;
 1950              		.loc 1 997 0 discriminator 2
 1951 0022 FB88     		ldrh	r3, [r7, #6]
 1952 0024 0A4A     		ldr	r2, .L85+8
 1953 0026 0021     		movs	r1, #0
 1954 0028 D154     		strb	r1, [r2, r3]
 991:.\AudioControl.c ****         {
 1955              		.loc 1 991 0 discriminator 2
 1956 002a FB88     		ldrh	r3, [r7, #6]
 1957 002c 0133     		adds	r3, r3, #1
 1958 002e FB80     		strh	r3, [r7, #6]	@ movhi
 1959              	.L82:
 991:.\AudioControl.c ****         {
 1960              		.loc 1 991 0 is_stmt 0 discriminator 1
 1961 0030 FB88     		ldrh	r3, [r7, #6]
 1962 0032 B3F5407F 		cmp	r3, #768
 1963 0036 EDD3     		bcc	.L84
 998:.\AudioControl.c ****         }
 999:.\AudioControl.c ****         clearInBuffer = 0;
 1964              		.loc 1 999 0 is_stmt 1
 1965 0038 034B     		ldr	r3, .L85
 1966 003a 0022     		movs	r2, #0
 1967 003c 1A70     		strb	r2, [r3]
 1968              	.L80:
1000:.\AudioControl.c ****     }
1001:.\AudioControl.c **** }
 1969              		.loc 1 1001 0
 1970 003e 0C37     		adds	r7, r7, #12
 1971              		.cfi_def_cfa_offset 4
 1972 0040 BD46     		mov	sp, r7
 1973              		.cfi_def_cfa_register 13
 1974              		@ sp needed
 1975 0042 5DF8047B 		ldr	r7, [sp], #4
 1976              		.cfi_restore 7
 1977              		.cfi_def_cfa_offset 0
 1978 0046 7047     		bx	lr
 1979              	.L86:
 1980              		.align	2
 1981              	.L85:
 1982 0048 00000000 		.word	clearInBuffer
 1983 004c 00000000 		.word	inRam
 1984 0050 00000000 		.word	inBuffer
 1985              		.cfi_endproc
 1986              	.LFE67:
 1987              		.size	HandleAudioInBuffer, .-HandleAudioInBuffer
 1988              		.section	.text.CICOutDMA_ConfigAndStart,"ax",%progbits
 1989              		.align	2
 1990              		.global	CICOutDMA_ConfigAndStart
 1991              		.thumb
 1992              		.thumb_func
 1993              		.type	CICOutDMA_ConfigAndStart, %function
 1994              	CICOutDMA_ConfigAndStart:
 1995              	.LFB68:
1002:.\AudioControl.c **** #endif
1003:.\AudioControl.c **** 
1004:.\AudioControl.c **** /*******************************************************************************
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 54


1005:.\AudioControl.c **** * Function Name: CICOutDMA_ConfigAndStart
1006:.\AudioControl.c **** ********************************************************************************
1007:.\AudioControl.c **** * Summary:
1008:.\AudioControl.c **** *       This routine configures and enables the CIC output DMAs to move CIC
1009:.\AudioControl.c **** *       output data to the DFB staging registers.
1010:.\AudioControl.c **** *
1011:.\AudioControl.c **** * Parameters:
1012:.\AudioControl.c **** *  void
1013:.\AudioControl.c **** *
1014:.\AudioControl.c **** * Return:
1015:.\AudioControl.c **** *  void
1016:.\AudioControl.c **** *
1017:.\AudioControl.c **** *******************************************************************************/
1018:.\AudioControl.c **** void CICOutDMA_ConfigAndStart(void)
1019:.\AudioControl.c **** {
 1996              		.loc 1 1019 0
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 8
 1999              		@ frame_needed = 1, uses_anonymous_args = 0
 2000 0000 80B5     		push	{r7, lr}
 2001              		.cfi_def_cfa_offset 8
 2002              		.cfi_offset 7, -8
 2003              		.cfi_offset 14, -4
 2004 0002 82B0     		sub	sp, sp, #8
 2005              		.cfi_def_cfa_offset 16
 2006 0004 00AF     		add	r7, sp, #0
 2007              		.cfi_def_cfa_register 7
1020:.\AudioControl.c **** 	uint8 DMA_CICOut_Left_Channel, DMA_CICOut_Left_TD[2];
1021:.\AudioControl.c ****     uint8 DMA_CICOut_Right_Channel, DMA_CICOut_Right_TD[2];
1022:.\AudioControl.c **** 	
1023:.\AudioControl.c ****     /* PDM left channel DMA configuration */
1024:.\AudioControl.c **** 	DMA_CICOut_Left_Channel = CICOut_L_DmaInitialize(2, 1, HI16(CYDEV_PERIPH_BASE), HI16(CYDEV_PERIPH_
 2008              		.loc 1 1024 0
 2009 0006 0220     		movs	r0, #2
 2010 0008 0121     		movs	r1, #1
 2011 000a 4FF48042 		mov	r2, #16384
 2012 000e 4FF48043 		mov	r3, #16384
 2013 0012 FFF7FEFF 		bl	CICOut_L_DmaInitialize
 2014 0016 0346     		mov	r3, r0
 2015 0018 FB71     		strb	r3, [r7, #7]
1025:.\AudioControl.c **** 
1026:.\AudioControl.c **** 	DMA_CICOut_Left_TD[0] = CyDmaTdAllocate();
 2016              		.loc 1 1026 0
 2017 001a FFF7FEFF 		bl	CyDmaTdAllocate
 2018 001e 0346     		mov	r3, r0
 2019 0020 3B71     		strb	r3, [r7, #4]
1027:.\AudioControl.c **** 	DMA_CICOut_Left_TD[1] = CyDmaTdAllocate();
 2020              		.loc 1 1027 0
 2021 0022 FFF7FEFF 		bl	CyDmaTdAllocate
 2022 0026 0346     		mov	r3, r0
 2023 0028 7B71     		strb	r3, [r7, #5]
1028:.\AudioControl.c **** 	
1029:.\AudioControl.c ****     #ifdef DISABLE_DFB
1030:.\AudioControl.c **** 	CyDmaTdSetConfiguration(DMA_CICOut_Left_TD[0], sizeof(leftCICOutput), DMA_CICOut_Left_TD[0], TD_IN
1031:.\AudioControl.c **** 	CyDmaTdSetConfiguration(DMA_CICOut_Left_TD[1], 2, DMA_CICOut_Left_TD[0],TD_INC_DST_ADR);
1032:.\AudioControl.c **** 	
1033:.\AudioControl.c ****     CyDmaTdSetAddress(DMA_CICOut_Left_TD[0], LO16((uint32)(PDM_CIC_LEFT_HI16_OUTPUT_REG_PTR)), LO16
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 55


1034:.\AudioControl.c **** 	CyDmaTdSetAddress(DMA_CICOut_Left_TD[1], LO16((uint32)(PDM_CIC_LEFT_LO16_OUTPUT_REG_PTR)), LO16((u
1035:.\AudioControl.c ****     #else
1036:.\AudioControl.c ****     CyDmaTdSetConfiguration(DMA_CICOut_Left_TD[0], 2, DMA_CICOut_Left_TD[1], TD_AUTO_EXEC_NEXT); 
 2024              		.loc 1 1036 0
 2025 002a 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 2026 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2027 002e 1046     		mov	r0, r2
 2028 0030 0221     		movs	r1, #2
 2029 0032 1A46     		mov	r2, r3
 2030 0034 2023     		movs	r3, #32
 2031 0036 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1037:.\AudioControl.c **** 	CyDmaTdSetConfiguration(DMA_CICOut_Left_TD[1], 2, DMA_CICOut_Left_TD[0],0);
 2032              		.loc 1 1037 0
 2033 003a 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 2034 003c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2035 003e 1046     		mov	r0, r2
 2036 0040 0221     		movs	r1, #2
 2037 0042 1A46     		mov	r2, r3
 2038 0044 0023     		movs	r3, #0
 2039 0046 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1038:.\AudioControl.c ****     
1039:.\AudioControl.c **** 	/* Consider DFB coherency when ordering the DFB TD's */
1040:.\AudioControl.c **** 	CyDmaTdSetAddress(DMA_CICOut_Left_TD[0], LO16((uint32)(PDM_CIC_LEFT_HI16_OUTPUT_REG_PTR)), LO16((u
 2040              		.loc 1 1040 0
 2041 004a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2042 004c 1846     		mov	r0, r3
 2043 004e 46F68801 		movw	r1, #26760
 2044 0052 4CF2A272 		movw	r2, #51106
 2045 0056 FFF7FEFF 		bl	CyDmaTdSetAddress
1041:.\AudioControl.c **** 	CyDmaTdSetAddress(DMA_CICOut_Left_TD[1], LO16((uint32)(PDM_CIC_LEFT_LO16_OUTPUT_REG_PTR)), LO16((u
 2046              		.loc 1 1041 0
 2047 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2048 005c 1846     		mov	r0, r3
 2049 005e 46F68401 		movw	r1, #26756
 2050 0062 4CF2A072 		movw	r2, #51104
 2051 0066 FFF7FEFF 		bl	CyDmaTdSetAddress
1042:.\AudioControl.c ****     #endif
1043:.\AudioControl.c **** 		
1044:.\AudioControl.c **** 	CyDmaChSetInitialTd(DMA_CICOut_Left_Channel, DMA_CICOut_Left_TD[0]);
 2052              		.loc 1 1044 0
 2053 006a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2054 006c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2055 006e 1046     		mov	r0, r2
 2056 0070 1946     		mov	r1, r3
 2057 0072 FFF7FEFF 		bl	CyDmaChSetInitialTd
1045:.\AudioControl.c **** 	CyDmaChEnable(DMA_CICOut_Left_Channel, 1);
 2058              		.loc 1 1045 0
 2059 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2060 0078 1846     		mov	r0, r3
 2061 007a 0121     		movs	r1, #1
 2062 007c FFF7FEFF 		bl	CyDmaChEnable
1046:.\AudioControl.c ****     
1047:.\AudioControl.c ****     /* PDM right channel DMA configuration */
1048:.\AudioControl.c ****     DMA_CICOut_Right_Channel = CICOut_R_DmaInitialize(2, 1, HI16(CYDEV_PERIPH_BASE), HI16(CYDEV_PER
 2063              		.loc 1 1048 0
 2064 0080 0220     		movs	r0, #2
 2065 0082 0121     		movs	r1, #1
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 56


 2066 0084 4FF48042 		mov	r2, #16384
 2067 0088 4FF48043 		mov	r3, #16384
 2068 008c FFF7FEFF 		bl	CICOut_R_DmaInitialize
 2069 0090 0346     		mov	r3, r0
 2070 0092 BB71     		strb	r3, [r7, #6]
1049:.\AudioControl.c **** 
1050:.\AudioControl.c **** 	DMA_CICOut_Right_TD[0] = CyDmaTdAllocate();
 2071              		.loc 1 1050 0
 2072 0094 FFF7FEFF 		bl	CyDmaTdAllocate
 2073 0098 0346     		mov	r3, r0
 2074 009a 3B70     		strb	r3, [r7]
1051:.\AudioControl.c **** 	DMA_CICOut_Right_TD[1] = CyDmaTdAllocate();
 2075              		.loc 1 1051 0
 2076 009c FFF7FEFF 		bl	CyDmaTdAllocate
 2077 00a0 0346     		mov	r3, r0
 2078 00a2 7B70     		strb	r3, [r7, #1]
1052:.\AudioControl.c ****     
1053:.\AudioControl.c ****     #ifdef DISABLE_DFB
1054:.\AudioControl.c ****         CyDmaTdSetConfiguration(DMA_CICOut_Right_TD[0], sizeof(rightCICOutput), DMA_CICOut_Right_TD
1055:.\AudioControl.c ****     	CyDmaTdSetConfiguration(DMA_CICOut_Right_TD[1], 2, DMA_CICOut_Right_TD[0],0);
1056:.\AudioControl.c ****     	
1057:.\AudioControl.c ****     	/* Consider DFB coherency when ordering the DFB TD's */
1058:.\AudioControl.c ****     	CyDmaTdSetAddress(DMA_CICOut_Right_TD[0], LO16((uint32)(PDM_CIC_RIGHT_HI16_OUTPUT_REG_PTR)), L
1059:.\AudioControl.c ****     	CyDmaTdSetAddress(DMA_CICOut_Right_TD[1], LO16((uint32)(PDM_CIC_RIGHT_LO16_OUTPUT_REG_PTR)), L
1060:.\AudioControl.c ****     #else
1061:.\AudioControl.c **** 	CyDmaTdSetConfiguration(DMA_CICOut_Right_TD[0], 2, DMA_CICOut_Right_TD[1], TD_AUTO_EXEC_NEXT); 
 2079              		.loc 1 1061 0
 2080 00a4 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2081 00a6 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2082 00a8 1046     		mov	r0, r2
 2083 00aa 0221     		movs	r1, #2
 2084 00ac 1A46     		mov	r2, r3
 2085 00ae 2023     		movs	r3, #32
 2086 00b0 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1062:.\AudioControl.c **** 	CyDmaTdSetConfiguration(DMA_CICOut_Right_TD[1], 2, DMA_CICOut_Right_TD[0],0);
 2087              		.loc 1 1062 0
 2088 00b4 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 2089 00b6 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2090 00b8 1046     		mov	r0, r2
 2091 00ba 0221     		movs	r1, #2
 2092 00bc 1A46     		mov	r2, r3
 2093 00be 0023     		movs	r3, #0
 2094 00c0 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1063:.\AudioControl.c **** 	
1064:.\AudioControl.c **** 	/* Consider DFB coherency when ordering the DFB TD's */
1065:.\AudioControl.c **** 	CyDmaTdSetAddress(DMA_CICOut_Right_TD[0], LO16((uint32)(PDM_CIC_RIGHT_HI16_OUTPUT_REG_PTR)), LO16(
 2095              		.loc 1 1065 0
 2096 00c4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2097 00c6 1846     		mov	r0, r3
 2098 00c8 46F69C01 		movw	r1, #26780
 2099 00cc 4CF2A672 		movw	r2, #51110
 2100 00d0 FFF7FEFF 		bl	CyDmaTdSetAddress
1066:.\AudioControl.c **** 	CyDmaTdSetAddress(DMA_CICOut_Right_TD[1], LO16((uint32)(PDM_CIC_RIGHT_LO16_OUTPUT_REG_PTR)), LO16(
 2101              		.loc 1 1066 0
 2102 00d4 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2103 00d6 1846     		mov	r0, r3
 2104 00d8 46F69801 		movw	r1, #26776
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 57


 2105 00dc 4CF2A472 		movw	r2, #51108
 2106 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1067:.\AudioControl.c ****     #endif
1068:.\AudioControl.c **** 		
1069:.\AudioControl.c **** 	CyDmaChSetInitialTd(DMA_CICOut_Right_Channel, DMA_CICOut_Right_TD[0]);
 2107              		.loc 1 1069 0
 2108 00e4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2109 00e6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 2110 00e8 1046     		mov	r0, r2
 2111 00ea 1946     		mov	r1, r3
 2112 00ec FFF7FEFF 		bl	CyDmaChSetInitialTd
1070:.\AudioControl.c **** 	CyDmaChEnable(DMA_CICOut_Right_Channel, 1);
 2113              		.loc 1 1070 0
 2114 00f0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2115 00f2 1846     		mov	r0, r3
 2116 00f4 0121     		movs	r1, #1
 2117 00f6 FFF7FEFF 		bl	CyDmaChEnable
1071:.\AudioControl.c **** }
 2118              		.loc 1 1071 0
 2119 00fa 0837     		adds	r7, r7, #8
 2120              		.cfi_def_cfa_offset 8
 2121 00fc BD46     		mov	sp, r7
 2122              		.cfi_def_cfa_register 13
 2123              		@ sp needed
 2124 00fe 80BD     		pop	{r7, pc}
 2125              		.cfi_endproc
 2126              	.LFE68:
 2127              		.size	CICOutDMA_ConfigAndStart, .-CICOutDMA_ConfigAndStart
 2128              		.section	.text.Droop_Filter_ModifiedSaveConfig,"ax",%progbits
 2129              		.align	2
 2130              		.global	Droop_Filter_ModifiedSaveConfig
 2131              		.thumb
 2132              		.thumb_func
 2133              		.type	Droop_Filter_ModifiedSaveConfig, %function
 2134              	Droop_Filter_ModifiedSaveConfig:
 2135              	.LFB69:
1072:.\AudioControl.c **** 
1073:.\AudioControl.c **** /*******************************************************************************
1074:.\AudioControl.c **** * Function Name: Droop_Filter_ModifiedSaveConfig
1075:.\AudioControl.c **** ********************************************************************************
1076:.\AudioControl.c **** *
1077:.\AudioControl.c **** * Summary:
1078:.\AudioControl.c **** *  Saves Droop_Filter block configuration. Droop_Filter assembler Component API not used
1079:.\AudioControl.c **** *  due to the rentention not being done properly there. API name modified and
1080:.\AudioControl.c **** *  redefined here based on the Filter component code
1081:.\AudioControl.c **** *
1082:.\AudioControl.c **** * Parameters:
1083:.\AudioControl.c **** *  None.
1084:.\AudioControl.c **** *
1085:.\AudioControl.c **** * Return:
1086:.\AudioControl.c **** *  None.
1087:.\AudioControl.c **** *
1088:.\AudioControl.c **** * Global Variables:
1089:.\AudioControl.c **** *  Droop_Filter_Custom_backup - modified when non-retention registers are saved.
1090:.\AudioControl.c **** *
1091:.\AudioControl.c **** *******************************************************************************/
1092:.\AudioControl.c **** void Droop_Filter_ModifiedSaveConfig(void)
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 58


1093:.\AudioControl.c **** {
 2136              		.loc 1 1093 0
 2137              		.cfi_startproc
 2138              		@ args = 0, pretend = 0, frame = 0
 2139              		@ frame_needed = 1, uses_anonymous_args = 0
 2140              		@ link register save eliminated.
 2141 0000 80B4     		push	{r7}
 2142              		.cfi_def_cfa_offset 4
 2143              		.cfi_offset 7, -4
 2144 0002 00AF     		add	r7, sp, #0
 2145              		.cfi_def_cfa_register 7
1094:.\AudioControl.c ****     Droop_Filter_Custom_backup.cr = Droop_Filter_CR_REG;
 2146              		.loc 1 1094 0
 2147 0004 094B     		ldr	r3, .L89
 2148 0006 1B78     		ldrb	r3, [r3]
 2149 0008 DAB2     		uxtb	r2, r3
 2150 000a 094B     		ldr	r3, .L89+4
 2151 000c 5A70     		strb	r2, [r3, #1]
1095:.\AudioControl.c ****     Droop_Filter_Custom_backup.sr = Droop_Filter_SR_REG;
 2152              		.loc 1 1095 0
 2153 000e 094B     		ldr	r3, .L89+8
 2154 0010 1B78     		ldrb	r3, [r3]
 2155 0012 DAB2     		uxtb	r2, r3
 2156 0014 064B     		ldr	r3, .L89+4
 2157 0016 9A70     		strb	r2, [r3, #2]
1096:.\AudioControl.c ****     Droop_Filter_Custom_backup.sema = Droop_Filter_SEM_REG;
 2158              		.loc 1 1096 0
 2159 0018 074B     		ldr	r3, .L89+12
 2160 001a 1B78     		ldrb	r3, [r3]
 2161 001c DAB2     		uxtb	r2, r3
 2162 001e 044B     		ldr	r3, .L89+4
 2163 0020 DA70     		strb	r2, [r3, #3]
1097:.\AudioControl.c **** }
 2164              		.loc 1 1097 0
 2165 0022 BD46     		mov	sp, r7
 2166              		.cfi_def_cfa_register 13
 2167              		@ sp needed
 2168 0024 5DF8047B 		ldr	r7, [sp], #4
 2169              		.cfi_restore 7
 2170              		.cfi_def_cfa_offset 0
 2171 0028 7047     		bx	lr
 2172              	.L90:
 2173 002a 00BF     		.align	2
 2174              	.L89:
 2175 002c 80C70040 		.word	1073792896
 2176 0030 00000000 		.word	Droop_Filter_Custom_backup
 2177 0034 84C70040 		.word	1073792900
 2178 0038 90C70040 		.word	1073792912
 2179              		.cfi_endproc
 2180              	.LFE69:
 2181              		.size	Droop_Filter_ModifiedSaveConfig, .-Droop_Filter_ModifiedSaveConfig
 2182              		.section	.text.Droop_Filter_ModifiedRestoreConfig,"ax",%progbits
 2183              		.align	2
 2184              		.global	Droop_Filter_ModifiedRestoreConfig
 2185              		.thumb
 2186              		.thumb_func
 2187              		.type	Droop_Filter_ModifiedRestoreConfig, %function
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 59


 2188              	Droop_Filter_ModifiedRestoreConfig:
 2189              	.LFB70:
1098:.\AudioControl.c **** 
1099:.\AudioControl.c **** /*******************************************************************************
1100:.\AudioControl.c **** * Function Name: Droop_Filter_ModifiedRestoreConfig
1101:.\AudioControl.c **** ********************************************************************************
1102:.\AudioControl.c **** *
1103:.\AudioControl.c **** * Summary:
1104:.\AudioControl.c **** *  Restores Droop_Filter block configuration. Droop_Filter assembler Component API not used
1105:.\AudioControl.c **** *  due to the rentention not being done properly there. API name modified and
1106:.\AudioControl.c **** *  redefined here based on the Filter component code
1107:.\AudioControl.c **** *
1108:.\AudioControl.c **** * Parameters:
1109:.\AudioControl.c **** *  None.
1110:.\AudioControl.c **** *
1111:.\AudioControl.c **** * Return:
1112:.\AudioControl.c **** *  None.
1113:.\AudioControl.c **** *
1114:.\AudioControl.c **** * Global Variables:
1115:.\AudioControl.c **** *  Droop_Filter_Custom_backup - used when non-retention registers are restored.
1116:.\AudioControl.c **** *  Droop_Filter_acu - used to restore ACU ram content. Array defined in Droop_Filter_RAM_Data.c
1117:.\AudioControl.c **** *
1118:.\AudioControl.c **** *******************************************************************************/
1119:.\AudioControl.c **** void Droop_Filter_ModifiedRestoreConfig(void)
1120:.\AudioControl.c **** {
 2190              		.loc 1 1120 0
 2191              		.cfi_startproc
 2192              		@ args = 0, pretend = 0, frame = 0
 2193              		@ frame_needed = 1, uses_anonymous_args = 0
 2194 0000 80B5     		push	{r7, lr}
 2195              		.cfi_def_cfa_offset 8
 2196              		.cfi_offset 7, -8
 2197              		.cfi_offset 14, -4
 2198 0002 00AF     		add	r7, sp, #0
 2199              		.cfi_def_cfa_register 7
1121:.\AudioControl.c **** 	Droop_Filter_CR_REG = Droop_Filter_Custom_backup.cr;
 2200              		.loc 1 1121 0
 2201 0004 114B     		ldr	r3, .L92
 2202 0006 124A     		ldr	r2, .L92+4
 2203 0008 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 2204 000a 1A70     		strb	r2, [r3]
1122:.\AudioControl.c **** 	Droop_Filter_SR_REG = Droop_Filter_Custom_backup.sr;
 2205              		.loc 1 1122 0
 2206 000c 114B     		ldr	r3, .L92+8
 2207 000e 104A     		ldr	r2, .L92+4
 2208 0010 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 2209 0012 1A70     		strb	r2, [r3]
1123:.\AudioControl.c **** 	Droop_Filter_SEM_REG = Droop_Filter_Custom_backup.sema;
 2210              		.loc 1 1123 0
 2211 0014 104B     		ldr	r3, .L92+12
 2212 0016 0E4A     		ldr	r2, .L92+4
 2213 0018 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 2214 001a 1A70     		strb	r2, [r3]
1124:.\AudioControl.c **** 
1125:.\AudioControl.c ****     /* Power on Droop_Filter before initializing the RAMs */
1126:.\AudioControl.c ****     Droop_Filter_PM_ACT_CFG_REG |= Droop_Filter_PM_ACT_MSK;
 2215              		.loc 1 1126 0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 60


 2216 001c 0F4A     		ldr	r2, .L92+16
 2217 001e 0F4B     		ldr	r3, .L92+16
 2218 0020 1B78     		ldrb	r3, [r3]
 2219 0022 DBB2     		uxtb	r3, r3
 2220 0024 43F01003 		orr	r3, r3, #16
 2221 0028 DBB2     		uxtb	r3, r3
 2222 002a 1370     		strb	r3, [r2]
1127:.\AudioControl.c **** 
1128:.\AudioControl.c ****     /* Put Droop_Filter RAM on the bus */
1129:.\AudioControl.c ****     Droop_Filter_RAM_DIR_REG = Droop_Filter_RAM_DIR_BUS;
 2223              		.loc 1 1129 0
 2224 002c 0C4B     		ldr	r3, .L92+20
 2225 002e 3F22     		movs	r2, #63
 2226 0030 1A70     		strb	r2, [r3]
1130:.\AudioControl.c **** 	
1131:.\AudioControl.c **** 	/* Restore the ACU RAM content */
1132:.\AudioControl.c **** 	Droop_Filter_ModifiedZeroReg32(Droop_Filter_ACU_RAM_PTR, Droop_Filter_ACU_RAM_SIZE);
 2227              		.loc 1 1132 0
 2228 0032 0C48     		ldr	r0, .L92+24
 2229 0034 1021     		movs	r1, #16
 2230 0036 FFF7FEFF 		bl	Droop_Filter_ModifiedZeroReg32
1133:.\AudioControl.c **** 	Droop_Filter_ModifiedLoadReg32(Droop_Filter_ACU_RAM_PTR, Droop_Filter_acu, Droop_Filter_ACU_RAM_SI
 2231              		.loc 1 1133 0
 2232 003a 0A48     		ldr	r0, .L92+24
 2233 003c 0A49     		ldr	r1, .L92+28
 2234 003e 0E22     		movs	r2, #14
 2235 0040 FFF7FEFF 		bl	Droop_Filter_ModifiedLoadReg32
1134:.\AudioControl.c **** 	
1135:.\AudioControl.c **** 	/* Take Droop_Filter RAM off the bus */
1136:.\AudioControl.c ****     Droop_Filter_RAM_DIR_REG = Droop_Filter_RAM_DIR_DFB;	
 2236              		.loc 1 1136 0
 2237 0044 064B     		ldr	r3, .L92+20
 2238 0046 0022     		movs	r2, #0
 2239 0048 1A70     		strb	r2, [r3]
1137:.\AudioControl.c **** }
 2240              		.loc 1 1137 0
 2241 004a 80BD     		pop	{r7, pc}
 2242              	.L93:
 2243              		.align	2
 2244              	.L92:
 2245 004c 80C70040 		.word	1073792896
 2246 0050 00000000 		.word	Droop_Filter_Custom_backup
 2247 0054 84C70040 		.word	1073792900
 2248 0058 90C70040 		.word	1073792912
 2249 005c A6430040 		.word	1073759142
 2250 0060 8CC70040 		.word	1073792908
 2251 0064 00C70040 		.word	1073792768
 2252 0068 00000000 		.word	Droop_Filter_acu
 2253              		.cfi_endproc
 2254              	.LFE70:
 2255              		.size	Droop_Filter_ModifiedRestoreConfig, .-Droop_Filter_ModifiedRestoreConfig
 2256              		.section	.text.Droop_Filter_ModifiedSleep,"ax",%progbits
 2257              		.align	2
 2258              		.global	Droop_Filter_ModifiedSleep
 2259              		.thumb
 2260              		.thumb_func
 2261              		.type	Droop_Filter_ModifiedSleep, %function
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 61


 2262              	Droop_Filter_ModifiedSleep:
 2263              	.LFB71:
1138:.\AudioControl.c **** 
1139:.\AudioControl.c **** /*******************************************************************************
1140:.\AudioControl.c **** * Function Name: Droop_Filter_ModifiedSleep
1141:.\AudioControl.c **** ********************************************************************************
1142:.\AudioControl.c **** *
1143:.\AudioControl.c **** * Summary:
1144:.\AudioControl.c **** *  Prepares Droop_Filter component to sleep. Currrent version of Droop_Filter 
1145:.\AudioControl.c **** *  assembler Component API not used due to the retention not being done properly 
1146:.\AudioControl.c **** *  there. API name modified and redefined here based on the Filter component code.
1147:.\AudioControl.c **** *
1148:.\AudioControl.c **** *
1149:.\AudioControl.c **** * Parameters:
1150:.\AudioControl.c **** *  None.
1151:.\AudioControl.c **** *
1152:.\AudioControl.c **** * Return:
1153:.\AudioControl.c **** *  None.
1154:.\AudioControl.c **** *
1155:.\AudioControl.c **** * Global Variables:
1156:.\AudioControl.c **** *  Droop_Filter_Custom_backup - modified when non-retention registers are saved.
1157:.\AudioControl.c **** *
1158:.\AudioControl.c **** *******************************************************************************/
1159:.\AudioControl.c **** void Droop_Filter_ModifiedSleep(void)
1160:.\AudioControl.c **** {
 2264              		.loc 1 1160 0
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 0
 2267              		@ frame_needed = 1, uses_anonymous_args = 0
 2268 0000 80B5     		push	{r7, lr}
 2269              		.cfi_def_cfa_offset 8
 2270              		.cfi_offset 7, -8
 2271              		.cfi_offset 14, -4
 2272 0002 00AF     		add	r7, sp, #0
 2273              		.cfi_def_cfa_register 7
1161:.\AudioControl.c ****     /* Save Filter enable state */
1162:.\AudioControl.c ****     if(Droop_Filter_PM_ACT_MSK == (Droop_Filter_PM_ACT_CFG_REG & Droop_Filter_PM_ACT_MSK))
 2274              		.loc 1 1162 0
 2275 0004 094B     		ldr	r3, .L97
 2276 0006 1B78     		ldrb	r3, [r3]
 2277 0008 DBB2     		uxtb	r3, r3
 2278 000a 03F01003 		and	r3, r3, #16
 2279 000e 002B     		cmp	r3, #0
 2280 0010 03D0     		beq	.L95
1163:.\AudioControl.c ****     {
1164:.\AudioControl.c ****         /* Component is enabled */
1165:.\AudioControl.c ****         Droop_Filter_Custom_backup.enableState = Droop_Filter_CUSTOM_ENABLED;
 2281              		.loc 1 1165 0
 2282 0012 074B     		ldr	r3, .L97+4
 2283 0014 0122     		movs	r2, #1
 2284 0016 1A70     		strb	r2, [r3]
 2285 0018 02E0     		b	.L96
 2286              	.L95:
1166:.\AudioControl.c ****     }
1167:.\AudioControl.c ****     else
1168:.\AudioControl.c ****     {
1169:.\AudioControl.c ****         /* Component is disabled */
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 62


1170:.\AudioControl.c ****         Droop_Filter_Custom_backup.enableState = Droop_Filter_CUSTOM_DISABLED;
 2287              		.loc 1 1170 0
 2288 001a 054B     		ldr	r3, .L97+4
 2289 001c 0022     		movs	r2, #0
 2290 001e 1A70     		strb	r2, [r3]
 2291              	.L96:
1171:.\AudioControl.c ****     }
1172:.\AudioControl.c **** 
1173:.\AudioControl.c ****     /* Stop the configuration */
1174:.\AudioControl.c ****     Droop_Filter_Stop();	
 2292              		.loc 1 1174 0
 2293 0020 FFF7FEFF 		bl	Droop_Filter_Stop
1175:.\AudioControl.c **** 
1176:.\AudioControl.c ****     /* Save the configuration */
1177:.\AudioControl.c ****     Droop_Filter_ModifiedSaveConfig();
 2294              		.loc 1 1177 0
 2295 0024 FFF7FEFF 		bl	Droop_Filter_ModifiedSaveConfig
1178:.\AudioControl.c **** }
 2296              		.loc 1 1178 0
 2297 0028 80BD     		pop	{r7, pc}
 2298              	.L98:
 2299 002a 00BF     		.align	2
 2300              	.L97:
 2301 002c A6430040 		.word	1073759142
 2302 0030 00000000 		.word	Droop_Filter_Custom_backup
 2303              		.cfi_endproc
 2304              	.LFE71:
 2305              		.size	Droop_Filter_ModifiedSleep, .-Droop_Filter_ModifiedSleep
 2306              		.section	.text.Droop_Filter_ModifiedWakeup,"ax",%progbits
 2307              		.align	2
 2308              		.global	Droop_Filter_ModifiedWakeup
 2309              		.thumb
 2310              		.thumb_func
 2311              		.type	Droop_Filter_ModifiedWakeup, %function
 2312              	Droop_Filter_ModifiedWakeup:
 2313              	.LFB72:
1179:.\AudioControl.c **** 
1180:.\AudioControl.c **** /*******************************************************************************
1181:.\AudioControl.c **** * Function Name: Droop_Filter_ModifiedWakeup
1182:.\AudioControl.c **** ********************************************************************************
1183:.\AudioControl.c **** *
1184:.\AudioControl.c **** * Summary:
1185:.\AudioControl.c **** *  Wakes the Droop_Filter component from sleep. Droop_Filter assembler Component API not used
1186:.\AudioControl.c **** *  due to the rentention not being done properly there. API name modified and
1187:.\AudioControl.c **** *  redefined here based on the Filter component code
1188:.\AudioControl.c **** *
1189:.\AudioControl.c **** *
1190:.\AudioControl.c **** * Parameters:
1191:.\AudioControl.c **** *  None.
1192:.\AudioControl.c **** *
1193:.\AudioControl.c **** * Return:
1194:.\AudioControl.c **** *  None.
1195:.\AudioControl.c **** *
1196:.\AudioControl.c **** * Global Variables:
1197:.\AudioControl.c **** *  Droop_Filter_Custom_backup - used when non-retention registers are restored.
1198:.\AudioControl.c **** *
1199:.\AudioControl.c **** *******************************************************************************/
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 63


1200:.\AudioControl.c **** void Droop_Filter_ModifiedWakeup(void)
1201:.\AudioControl.c **** {
 2314              		.loc 1 1201 0
 2315              		.cfi_startproc
 2316              		@ args = 0, pretend = 0, frame = 0
 2317              		@ frame_needed = 1, uses_anonymous_args = 0
 2318 0000 80B5     		push	{r7, lr}
 2319              		.cfi_def_cfa_offset 8
 2320              		.cfi_offset 7, -8
 2321              		.cfi_offset 14, -4
 2322 0002 00AF     		add	r7, sp, #0
 2323              		.cfi_def_cfa_register 7
1202:.\AudioControl.c ****     /* Restore the configuration */
1203:.\AudioControl.c ****     Droop_Filter_ModifiedRestoreConfig();
 2324              		.loc 1 1203 0
 2325 0004 FFF7FEFF 		bl	Droop_Filter_ModifiedRestoreConfig
1204:.\AudioControl.c ****     
1205:.\AudioControl.c ****     /* Enable's the component operation */
1206:.\AudioControl.c ****     if(Droop_Filter_Custom_backup.enableState == Droop_Filter_CUSTOM_ENABLED)
 2326              		.loc 1 1206 0
 2327 0008 034B     		ldr	r3, .L101
 2328 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2329 000c 012B     		cmp	r3, #1
 2330 000e 01D1     		bne	.L99
1207:.\AudioControl.c ****     {
1208:.\AudioControl.c ****         Droop_Filter_Enable();
 2331              		.loc 1 1208 0
 2332 0010 FFF7FEFF 		bl	Droop_Filter_Enable
 2333              	.L99:
1209:.\AudioControl.c ****     } /* Do nothing if component was disable before */
1210:.\AudioControl.c **** }
 2334              		.loc 1 1210 0
 2335 0014 80BD     		pop	{r7, pc}
 2336              	.L102:
 2337 0016 00BF     		.align	2
 2338              	.L101:
 2339 0018 00000000 		.word	Droop_Filter_Custom_backup
 2340              		.cfi_endproc
 2341              	.LFE72:
 2342              		.size	Droop_Filter_ModifiedWakeup, .-Droop_Filter_ModifiedWakeup
 2343              		.section	.text.Droop_Filter_ModifiedLoadReg32,"ax",%progbits
 2344              		.align	2
 2345              		.global	Droop_Filter_ModifiedLoadReg32
 2346              		.thumb
 2347              		.thumb_func
 2348              		.type	Droop_Filter_ModifiedLoadReg32, %function
 2349              	Droop_Filter_ModifiedLoadReg32:
 2350              	.LFB73:
1211:.\AudioControl.c **** 
1212:.\AudioControl.c **** /*******************************************************************************
1213:.\AudioControl.c **** * Function Name: Droop_Filter_ModifiedLoadReg32
1214:.\AudioControl.c **** ********************************************************************************
1215:.\AudioControl.c **** * 
1216:.\AudioControl.c **** * Summary:
1217:.\AudioControl.c **** *  This function loads initial values/data to appropriate registers.  Modified
1218:.\AudioControl.c **** *  name of a private function named Droop_Filter_LoadReg32 in the  Droop_Filter assembler
1219:.\AudioControl.c **** *  component (Droop_Filter.c) added here to support state retention
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 64


1220:.\AudioControl.c **** *
1221:.\AudioControl.c **** * Parameters:
1222:.\AudioControl.c **** *  reg32 regAddress[]: register address;
1223:.\AudioControl.c **** *  const uint32 source[]: data for load;
1224:.\AudioControl.c **** *  uint8 count: number of 32-bit registers for load.
1225:.\AudioControl.c **** *
1226:.\AudioControl.c **** * Return:
1227:.\AudioControl.c **** *  None.
1228:.\AudioControl.c **** *
1229:.\AudioControl.c **** * Note:
1230:.\AudioControl.c **** *  Data load starts from "regAddress" address and affects on "count" numbers of
1231:.\AudioControl.c **** *  successive registers.
1232:.\AudioControl.c **** *
1233:.\AudioControl.c **** *******************************************************************************/
1234:.\AudioControl.c **** void Droop_Filter_ModifiedLoadReg32(reg32 regAddress[], const uint32 source[], uint8 count)
1235:.\AudioControl.c **** {
 2351              		.loc 1 1235 0
 2352              		.cfi_startproc
 2353              		@ args = 0, pretend = 0, frame = 24
 2354              		@ frame_needed = 1, uses_anonymous_args = 0
 2355              		@ link register save eliminated.
 2356 0000 80B4     		push	{r7}
 2357              		.cfi_def_cfa_offset 4
 2358              		.cfi_offset 7, -4
 2359 0002 87B0     		sub	sp, sp, #28
 2360              		.cfi_def_cfa_offset 32
 2361 0004 00AF     		add	r7, sp, #0
 2362              		.cfi_def_cfa_register 7
 2363 0006 F860     		str	r0, [r7, #12]
 2364 0008 B960     		str	r1, [r7, #8]
 2365 000a 1346     		mov	r3, r2
 2366 000c FB71     		strb	r3, [r7, #7]
1236:.\AudioControl.c ****     uint8 i = 0u;
 2367              		.loc 1 1236 0
 2368 000e 0023     		movs	r3, #0
 2369 0010 FB75     		strb	r3, [r7, #23]
1237:.\AudioControl.c ****     
1238:.\AudioControl.c ****     while (count > 0u)
 2370              		.loc 1 1238 0
 2371 0012 0FE0     		b	.L104
 2372              	.L105:
1239:.\AudioControl.c ****     {
1240:.\AudioControl.c ****         CY_SET_REG32(& regAddress[i], source[i]);
 2373              		.loc 1 1240 0
 2374 0014 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2375 0016 9B00     		lsls	r3, r3, #2
 2376 0018 FA68     		ldr	r2, [r7, #12]
 2377 001a 1344     		add	r3, r3, r2
 2378 001c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2379 001e 9200     		lsls	r2, r2, #2
 2380 0020 B968     		ldr	r1, [r7, #8]
 2381 0022 0A44     		add	r2, r2, r1
 2382 0024 1268     		ldr	r2, [r2]
 2383 0026 1A60     		str	r2, [r3]
1241:.\AudioControl.c ****         count--;
 2384              		.loc 1 1241 0
 2385 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 65


 2386 002a 013B     		subs	r3, r3, #1
 2387 002c FB71     		strb	r3, [r7, #7]
1242:.\AudioControl.c ****         i++;
 2388              		.loc 1 1242 0
 2389 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2390 0030 0133     		adds	r3, r3, #1
 2391 0032 FB75     		strb	r3, [r7, #23]
 2392              	.L104:
1238:.\AudioControl.c ****     {
 2393              		.loc 1 1238 0
 2394 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2395 0036 002B     		cmp	r3, #0
 2396 0038 ECD1     		bne	.L105
1243:.\AudioControl.c ****     }
1244:.\AudioControl.c **** }
 2397              		.loc 1 1244 0
 2398 003a 1C37     		adds	r7, r7, #28
 2399              		.cfi_def_cfa_offset 4
 2400 003c BD46     		mov	sp, r7
 2401              		.cfi_def_cfa_register 13
 2402              		@ sp needed
 2403 003e 5DF8047B 		ldr	r7, [sp], #4
 2404              		.cfi_restore 7
 2405              		.cfi_def_cfa_offset 0
 2406 0042 7047     		bx	lr
 2407              		.cfi_endproc
 2408              	.LFE73:
 2409              		.size	Droop_Filter_ModifiedLoadReg32, .-Droop_Filter_ModifiedLoadReg32
 2410              		.section	.text.Droop_Filter_ModifiedZeroReg32,"ax",%progbits
 2411              		.align	2
 2412              		.global	Droop_Filter_ModifiedZeroReg32
 2413              		.thumb
 2414              		.thumb_func
 2415              		.type	Droop_Filter_ModifiedZeroReg32, %function
 2416              	Droop_Filter_ModifiedZeroReg32:
 2417              	.LFB74:
1245:.\AudioControl.c **** 
1246:.\AudioControl.c **** /*******************************************************************************
1247:.\AudioControl.c **** * Function Name: Droop_Filter_ModifiedZeroReg32
1248:.\AudioControl.c **** ********************************************************************************
1249:.\AudioControl.c **** * 
1250:.\AudioControl.c **** * Summary:
1251:.\AudioControl.c **** *  This function zeroize registers. Modified name of a private function named
1252:.\AudioControl.c **** *  Droop_Filter_ZeroReg32 in the  Droop_Filter assembler component (Droop_Filter.c) added here to s
1253:.\AudioControl.c **** *  state retention
1254:.\AudioControl.c **** *
1255:.\AudioControl.c **** * Parameters:
1256:.\AudioControl.c **** *  reg32 regAddress[]: register address;
1257:.\AudioControl.c **** *  uint8 count: number of 32-bit registers for zeroing.
1258:.\AudioControl.c **** *
1259:.\AudioControl.c **** * Return:
1260:.\AudioControl.c **** *  None.
1261:.\AudioControl.c **** *
1262:.\AudioControl.c **** * Note:
1263:.\AudioControl.c **** *  Zeroing starts from "regAddress" address and affects on "count" numbers of
1264:.\AudioControl.c **** *  successive registers.
1265:.\AudioControl.c **** *
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 66


1266:.\AudioControl.c **** *******************************************************************************/
1267:.\AudioControl.c **** void Droop_Filter_ModifiedZeroReg32(reg32 regAddress[], uint8 count)
1268:.\AudioControl.c **** {
 2418              		.loc 1 1268 0
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 16
 2421              		@ frame_needed = 1, uses_anonymous_args = 0
 2422              		@ link register save eliminated.
 2423 0000 80B4     		push	{r7}
 2424              		.cfi_def_cfa_offset 4
 2425              		.cfi_offset 7, -4
 2426 0002 85B0     		sub	sp, sp, #20
 2427              		.cfi_def_cfa_offset 24
 2428 0004 00AF     		add	r7, sp, #0
 2429              		.cfi_def_cfa_register 7
 2430 0006 7860     		str	r0, [r7, #4]
 2431 0008 0B46     		mov	r3, r1
 2432 000a FB70     		strb	r3, [r7, #3]
1269:.\AudioControl.c ****     uint8 i = 0u;
 2433              		.loc 1 1269 0
 2434 000c 0023     		movs	r3, #0
 2435 000e FB73     		strb	r3, [r7, #15]
1270:.\AudioControl.c ****     
1271:.\AudioControl.c ****     while (count > 0u)
 2436              		.loc 1 1271 0
 2437 0010 0BE0     		b	.L107
 2438              	.L108:
1272:.\AudioControl.c ****     {
1273:.\AudioControl.c ****         CY_SET_REG32(& regAddress[i], 0u);
 2439              		.loc 1 1273 0
 2440 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2441 0014 9B00     		lsls	r3, r3, #2
 2442 0016 7A68     		ldr	r2, [r7, #4]
 2443 0018 1344     		add	r3, r3, r2
 2444 001a 0022     		movs	r2, #0
 2445 001c 1A60     		str	r2, [r3]
1274:.\AudioControl.c ****         count--;
 2446              		.loc 1 1274 0
 2447 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2448 0020 013B     		subs	r3, r3, #1
 2449 0022 FB70     		strb	r3, [r7, #3]
1275:.\AudioControl.c ****         i++;
 2450              		.loc 1 1275 0
 2451 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2452 0026 0133     		adds	r3, r3, #1
 2453 0028 FB73     		strb	r3, [r7, #15]
 2454              	.L107:
1271:.\AudioControl.c ****     {
 2455              		.loc 1 1271 0
 2456 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2457 002c 002B     		cmp	r3, #0
 2458 002e F0D1     		bne	.L108
1276:.\AudioControl.c ****     }
1277:.\AudioControl.c **** }
 2459              		.loc 1 1277 0
 2460 0030 1437     		adds	r7, r7, #20
 2461              		.cfi_def_cfa_offset 4
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 67


 2462 0032 BD46     		mov	sp, r7
 2463              		.cfi_def_cfa_register 13
 2464              		@ sp needed
 2465 0034 5DF8047B 		ldr	r7, [sp], #4
 2466              		.cfi_restore 7
 2467              		.cfi_def_cfa_offset 0
 2468 0038 7047     		bx	lr
 2469              		.cfi_endproc
 2470              	.LFE74:
 2471              		.size	Droop_Filter_ModifiedZeroReg32, .-Droop_Filter_ModifiedZeroReg32
 2472 003a 00BF     		.bss
 2473              	rate44_count.6272:
 2474 0017 00       		.space	1
 2475              		.text
 2476              	.Letext0:
 2477              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2478              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2479              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2480              		.file 5 "Generated_Source\\PSoC5/CYDMAC.H"
 2481              		.file 6 "./AudioControl.h"
 2482              		.file 7 "Generated_Source\\PSoC5/Droop_Filter.h"
 2483              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 2484              		.file 9 "./Codec.h"
 2485              		.section	.debug_info,"",%progbits
 2486              	.Ldebug_info0:
 2487 0000 A6070000 		.4byte	0x7a6
 2488 0004 0400     		.2byte	0x4
 2489 0006 00000000 		.4byte	.Ldebug_abbrev0
 2490 000a 04       		.byte	0x4
 2491 000b 01       		.uleb128 0x1
 2492 000c 1D020000 		.4byte	.LASF104
 2493 0010 01       		.byte	0x1
 2494 0011 FB040000 		.4byte	.LASF105
 2495 0015 5F040000 		.4byte	.LASF106
 2496 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2497 001d 00000000 		.4byte	0
 2498 0021 00000000 		.4byte	.Ldebug_line0
 2499 0025 02       		.uleb128 0x2
 2500 0026 01       		.byte	0x1
 2501 0027 06       		.byte	0x6
 2502 0028 F8030000 		.4byte	.LASF0
 2503 002c 02       		.uleb128 0x2
 2504 002d 01       		.byte	0x1
 2505 002e 08       		.byte	0x8
 2506 002f 67030000 		.4byte	.LASF1
 2507 0033 02       		.uleb128 0x2
 2508 0034 02       		.byte	0x2
 2509 0035 05       		.byte	0x5
 2510 0036 FA000000 		.4byte	.LASF2
 2511 003a 02       		.uleb128 0x2
 2512 003b 02       		.byte	0x2
 2513 003c 07       		.byte	0x7
 2514 003d B7040000 		.4byte	.LASF3
 2515 0041 03       		.uleb128 0x3
 2516 0042 EC050000 		.4byte	.LASF9
 2517 0046 02       		.byte	0x2
 2518 0047 3F       		.byte	0x3f
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 68


 2519 0048 4C000000 		.4byte	0x4c
 2520 004c 02       		.uleb128 0x2
 2521 004d 04       		.byte	0x4
 2522 004e 05       		.byte	0x5
 2523 004f F2040000 		.4byte	.LASF4
 2524 0053 02       		.uleb128 0x2
 2525 0054 04       		.byte	0x4
 2526 0055 07       		.byte	0x7
 2527 0056 7B050000 		.4byte	.LASF5
 2528 005a 02       		.uleb128 0x2
 2529 005b 08       		.byte	0x8
 2530 005c 05       		.byte	0x5
 2531 005d E7010000 		.4byte	.LASF6
 2532 0061 02       		.uleb128 0x2
 2533 0062 08       		.byte	0x8
 2534 0063 07       		.byte	0x7
 2535 0064 0C040000 		.4byte	.LASF7
 2536 0068 04       		.uleb128 0x4
 2537 0069 04       		.byte	0x4
 2538 006a 05       		.byte	0x5
 2539 006b 696E7400 		.ascii	"int\000"
 2540 006f 02       		.uleb128 0x2
 2541 0070 04       		.byte	0x4
 2542 0071 07       		.byte	0x7
 2543 0072 2E040000 		.4byte	.LASF8
 2544 0076 03       		.uleb128 0x3
 2545 0077 04040000 		.4byte	.LASF10
 2546 007b 03       		.byte	0x3
 2547 007c 2C       		.byte	0x2c
 2548 007d 41000000 		.4byte	0x41
 2549 0081 03       		.uleb128 0x3
 2550 0082 65010000 		.4byte	.LASF11
 2551 0086 04       		.byte	0x4
 2552 0087 5B       		.byte	0x5b
 2553 0088 2C000000 		.4byte	0x2c
 2554 008c 03       		.uleb128 0x3
 2555 008d 1E010000 		.4byte	.LASF12
 2556 0091 04       		.byte	0x4
 2557 0092 5C       		.byte	0x5c
 2558 0093 3A000000 		.4byte	0x3a
 2559 0097 03       		.uleb128 0x3
 2560 0098 8D050000 		.4byte	.LASF13
 2561 009c 04       		.byte	0x4
 2562 009d 5D       		.byte	0x5d
 2563 009e 53000000 		.4byte	0x53
 2564 00a2 02       		.uleb128 0x2
 2565 00a3 04       		.byte	0x4
 2566 00a4 04       		.byte	0x4
 2567 00a5 BC010000 		.4byte	.LASF14
 2568 00a9 02       		.uleb128 0x2
 2569 00aa 08       		.byte	0x8
 2570 00ab 04       		.byte	0x4
 2571 00ac 2D000000 		.4byte	.LASF15
 2572 00b0 02       		.uleb128 0x2
 2573 00b1 01       		.byte	0x1
 2574 00b2 08       		.byte	0x8
 2575 00b3 ED040000 		.4byte	.LASF16
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 69


 2576 00b7 03       		.uleb128 0x3
 2577 00b8 76050000 		.4byte	.LASF17
 2578 00bc 04       		.byte	0x4
 2579 00bd F0       		.byte	0xf0
 2580 00be C2000000 		.4byte	0xc2
 2581 00c2 05       		.uleb128 0x5
 2582 00c3 81000000 		.4byte	0x81
 2583 00c7 03       		.uleb128 0x3
 2584 00c8 BE060000 		.4byte	.LASF18
 2585 00cc 04       		.byte	0x4
 2586 00cd F2       		.byte	0xf2
 2587 00ce D2000000 		.4byte	0xd2
 2588 00d2 05       		.uleb128 0x5
 2589 00d3 97000000 		.4byte	0x97
 2590 00d7 02       		.uleb128 0x2
 2591 00d8 04       		.byte	0x4
 2592 00d9 07       		.byte	0x7
 2593 00da 6D000000 		.4byte	.LASF19
 2594 00de 06       		.uleb128 0x6
 2595 00df D9000000 		.4byte	.LASF25
 2596 00e3 10       		.byte	0x10
 2597 00e4 05       		.byte	0x5
 2598 00e5 48       		.byte	0x48
 2599 00e6 1B010000 		.4byte	0x11b
 2600 00ea 07       		.uleb128 0x7
 2601 00eb 11050000 		.4byte	.LASF20
 2602 00ef 05       		.byte	0x5
 2603 00f0 4A       		.byte	0x4a
 2604 00f1 2B010000 		.4byte	0x12b
 2605 00f5 00       		.byte	0
 2606 00f6 07       		.uleb128 0x7
 2607 00f7 F5010000 		.4byte	.LASF21
 2608 00fb 05       		.byte	0x5
 2609 00fc 4B       		.byte	0x4b
 2610 00fd 30010000 		.4byte	0x130
 2611 0101 04       		.byte	0x4
 2612 0102 07       		.uleb128 0x7
 2613 0103 58000000 		.4byte	.LASF22
 2614 0107 05       		.byte	0x5
 2615 0108 4C       		.byte	0x4c
 2616 0109 35010000 		.4byte	0x135
 2617 010d 08       		.byte	0x8
 2618 010e 07       		.uleb128 0x7
 2619 010f AD050000 		.4byte	.LASF23
 2620 0113 05       		.byte	0x5
 2621 0114 4D       		.byte	0x4d
 2622 0115 3A010000 		.4byte	0x13a
 2623 0119 0C       		.byte	0xc
 2624 011a 00       		.byte	0
 2625 011b 08       		.uleb128 0x8
 2626 011c 81000000 		.4byte	0x81
 2627 0120 2B010000 		.4byte	0x12b
 2628 0124 09       		.uleb128 0x9
 2629 0125 D7000000 		.4byte	0xd7
 2630 0129 03       		.byte	0x3
 2631 012a 00       		.byte	0
 2632 012b 05       		.uleb128 0x5
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 70


 2633 012c 1B010000 		.4byte	0x11b
 2634 0130 05       		.uleb128 0x5
 2635 0131 1B010000 		.4byte	0x11b
 2636 0135 05       		.uleb128 0x5
 2637 0136 1B010000 		.4byte	0x11b
 2638 013a 05       		.uleb128 0x5
 2639 013b 1B010000 		.4byte	0x11b
 2640 013f 03       		.uleb128 0x3
 2641 0140 FC020000 		.4byte	.LASF24
 2642 0144 05       		.byte	0x5
 2643 0145 4F       		.byte	0x4f
 2644 0146 DE000000 		.4byte	0xde
 2645 014a 06       		.uleb128 0x6
 2646 014b 8C030000 		.4byte	.LASF26
 2647 014f 04       		.byte	0x4
 2648 0150 06       		.byte	0x6
 2649 0151 37       		.byte	0x37
 2650 0152 85010000 		.4byte	0x185
 2651 0156 07       		.uleb128 0x7
 2652 0157 5B030000 		.4byte	.LASF27
 2653 015b 06       		.byte	0x6
 2654 015c 39       		.byte	0x39
 2655 015d 81000000 		.4byte	0x81
 2656 0161 00       		.byte	0
 2657 0162 0A       		.uleb128 0xa
 2658 0163 637200   		.ascii	"cr\000"
 2659 0166 06       		.byte	0x6
 2660 0167 3A       		.byte	0x3a
 2661 0168 81000000 		.4byte	0x81
 2662 016c 01       		.byte	0x1
 2663 016d 0A       		.uleb128 0xa
 2664 016e 737200   		.ascii	"sr\000"
 2665 0171 06       		.byte	0x6
 2666 0172 3B       		.byte	0x3b
 2667 0173 81000000 		.4byte	0x81
 2668 0177 02       		.byte	0x2
 2669 0178 07       		.uleb128 0x7
 2670 0179 A8050000 		.4byte	.LASF28
 2671 017d 06       		.byte	0x6
 2672 017e 3C       		.byte	0x3c
 2673 017f 81000000 		.4byte	0x81
 2674 0183 03       		.byte	0x3
 2675 0184 00       		.byte	0
 2676 0185 03       		.uleb128 0x3
 2677 0186 76000000 		.4byte	.LASF29
 2678 018a 06       		.byte	0x6
 2679 018b 3D       		.byte	0x3d
 2680 018c 4A010000 		.4byte	0x14a
 2681 0190 0B       		.uleb128 0xb
 2682 0191 E9020000 		.4byte	.LASF30
 2683 0195 01       		.byte	0x1
 2684 0196 86       		.byte	0x86
 2685 0197 00000000 		.4byte	.LFB56
 2686 019b BC020000 		.4byte	.LFE56-.LFB56
 2687 019f 01       		.uleb128 0x1
 2688 01a0 9C       		.byte	0x9c
 2689 01a1 B4010000 		.4byte	0x1b4
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 71


 2690 01a5 0C       		.uleb128 0xc
 2691 01a6 52000000 		.4byte	.LASF32
 2692 01aa 01       		.byte	0x1
 2693 01ab 88       		.byte	0x88
 2694 01ac 81000000 		.4byte	0x81
 2695 01b0 02       		.uleb128 0x2
 2696 01b1 91       		.byte	0x91
 2697 01b2 6F       		.sleb128 -17
 2698 01b3 00       		.byte	0
 2699 01b4 0D       		.uleb128 0xd
 2700 01b5 D9020000 		.4byte	.LASF31
 2701 01b9 01       		.byte	0x1
 2702 01ba 2401     		.2byte	0x124
 2703 01bc 00000000 		.4byte	.LFB57
 2704 01c0 30020000 		.4byte	.LFE57-.LFB57
 2705 01c4 01       		.uleb128 0x1
 2706 01c5 9C       		.byte	0x9c
 2707 01c6 E9010000 		.4byte	0x1e9
 2708 01ca 0E       		.uleb128 0xe
 2709 01cb E6050000 		.4byte	.LASF33
 2710 01cf 01       		.byte	0x1
 2711 01d0 2601     		.2byte	0x126
 2712 01d2 8C000000 		.4byte	0x8c
 2713 01d6 02       		.uleb128 0x2
 2714 01d7 91       		.byte	0x91
 2715 01d8 76       		.sleb128 -10
 2716 01d9 0E       		.uleb128 0xe
 2717 01da 8B060000 		.4byte	.LASF34
 2718 01de 01       		.byte	0x1
 2719 01df 2701     		.2byte	0x127
 2720 01e1 8C000000 		.4byte	0x8c
 2721 01e5 02       		.uleb128 0x2
 2722 01e6 91       		.byte	0x91
 2723 01e7 74       		.sleb128 -12
 2724 01e8 00       		.byte	0
 2725 01e9 0D       		.uleb128 0xd
 2726 01ea 98000000 		.4byte	.LASF35
 2727 01ee 01       		.byte	0x1
 2728 01ef 8A01     		.2byte	0x18a
 2729 01f1 00000000 		.4byte	.LFB58
 2730 01f5 40020000 		.4byte	.LFE58-.LFB58
 2731 01f9 01       		.uleb128 0x1
 2732 01fa 9C       		.byte	0x9c
 2733 01fb 30020000 		.4byte	0x230
 2734 01ff 0E       		.uleb128 0xe
 2735 0200 8B060000 		.4byte	.LASF34
 2736 0204 01       		.byte	0x1
 2737 0205 8C01     		.2byte	0x18c
 2738 0207 8C000000 		.4byte	0x8c
 2739 020b 02       		.uleb128 0x2
 2740 020c 91       		.byte	0x91
 2741 020d 74       		.sleb128 -12
 2742 020e 0E       		.uleb128 0xe
 2743 020f E6050000 		.4byte	.LASF33
 2744 0213 01       		.byte	0x1
 2745 0214 8D01     		.2byte	0x18d
 2746 0216 8C000000 		.4byte	0x8c
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 72


 2747 021a 02       		.uleb128 0x2
 2748 021b 91       		.byte	0x91
 2749 021c 76       		.sleb128 -10
 2750 021d 0E       		.uleb128 0xe
 2751 021e 25010000 		.4byte	.LASF36
 2752 0222 01       		.byte	0x1
 2753 0223 8E01     		.2byte	0x18e
 2754 0225 81000000 		.4byte	0x81
 2755 0229 05       		.uleb128 0x5
 2756 022a 03       		.byte	0x3
 2757 022b 17000000 		.4byte	rate44_count.6272
 2758 022f 00       		.byte	0
 2759 0230 0F       		.uleb128 0xf
 2760 0231 47050000 		.4byte	.LASF37
 2761 0235 01       		.byte	0x1
 2762 0236 0202     		.2byte	0x202
 2763 0238 00000000 		.4byte	.LFB59
 2764 023c 60000000 		.4byte	.LFE59-.LFB59
 2765 0240 01       		.uleb128 0x1
 2766 0241 9C       		.byte	0x9c
 2767 0242 0F       		.uleb128 0xf
 2768 0243 12060000 		.4byte	.LASF38
 2769 0247 01       		.byte	0x1
 2770 0248 2C02     		.2byte	0x22c
 2771 024a 00000000 		.4byte	.LFB60
 2772 024e 58000000 		.4byte	.LFE60-.LFB60
 2773 0252 01       		.uleb128 0x1
 2774 0253 9C       		.byte	0x9c
 2775 0254 0D       		.uleb128 0xd
 2776 0255 06020000 		.4byte	.LASF39
 2777 0259 01       		.byte	0x1
 2778 025a 5402     		.2byte	0x254
 2779 025c 00000000 		.4byte	.LFB61
 2780 0260 88000000 		.4byte	.LFE61-.LFB61
 2781 0264 01       		.uleb128 0x1
 2782 0265 9C       		.byte	0x9c
 2783 0266 7A020000 		.4byte	0x27a
 2784 026a 10       		.uleb128 0x10
 2785 026b 83060000 		.4byte	.LASF44
 2786 026f 01       		.byte	0x1
 2787 0270 5402     		.2byte	0x254
 2788 0272 81000000 		.4byte	0x81
 2789 0276 02       		.uleb128 0x2
 2790 0277 91       		.byte	0x91
 2791 0278 77       		.sleb128 -9
 2792 0279 00       		.byte	0
 2793 027a 0F       		.uleb128 0xf
 2794 027b 31060000 		.4byte	.LASF40
 2795 027f 01       		.byte	0x1
 2796 0280 AB02     		.2byte	0x2ab
 2797 0282 00000000 		.4byte	.LFB62
 2798 0286 40000000 		.4byte	.LFE62-.LFB62
 2799 028a 01       		.uleb128 0x1
 2800 028b 9C       		.byte	0x9c
 2801 028c 0F       		.uleb128 0xf
 2802 028d 19000000 		.4byte	.LASF41
 2803 0291 01       		.byte	0x1
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 73


 2804 0292 D802     		.2byte	0x2d8
 2805 0294 00000000 		.4byte	.LFB63
 2806 0298 50000000 		.4byte	.LFE63-.LFB63
 2807 029c 01       		.uleb128 0x1
 2808 029d 9C       		.byte	0x9c
 2809 029e 0D       		.uleb128 0xd
 2810 029f C2010000 		.4byte	.LASF42
 2811 02a3 01       		.byte	0x1
 2812 02a4 2203     		.2byte	0x322
 2813 02a6 00000000 		.4byte	.LFB64
 2814 02aa 2C010000 		.4byte	.LFE64-.LFB64
 2815 02ae 01       		.uleb128 0x1
 2816 02af 9C       		.byte	0x9c
 2817 02b0 DD020000 		.4byte	0x2dd
 2818 02b4 11       		.uleb128 0x11
 2819 02b5 3E000000 		.4byte	.LBB2
 2820 02b9 BC000000 		.4byte	.LBE2-.LBB2
 2821 02bd 0E       		.uleb128 0xe
 2822 02be ED000000 		.4byte	.LASF43
 2823 02c2 01       		.byte	0x1
 2824 02c3 3203     		.2byte	0x332
 2825 02c5 97000000 		.4byte	0x97
 2826 02c9 02       		.uleb128 0x2
 2827 02ca 91       		.byte	0x91
 2828 02cb 70       		.sleb128 -16
 2829 02cc 0E       		.uleb128 0xe
 2830 02cd 83060000 		.4byte	.LASF44
 2831 02d1 01       		.byte	0x1
 2832 02d2 3303     		.2byte	0x333
 2833 02d4 81000000 		.4byte	0x81
 2834 02d8 02       		.uleb128 0x2
 2835 02d9 91       		.byte	0x91
 2836 02da 77       		.sleb128 -9
 2837 02db 00       		.byte	0
 2838 02dc 00       		.byte	0
 2839 02dd 0F       		.uleb128 0xf
 2840 02de 1B050000 		.4byte	.LASF45
 2841 02e2 01       		.byte	0x1
 2842 02e3 7603     		.2byte	0x376
 2843 02e5 00000000 		.4byte	.LFB65
 2844 02e9 D4000000 		.4byte	.LFE65-.LFB65
 2845 02ed 01       		.uleb128 0x1
 2846 02ee 9C       		.byte	0x9c
 2847 02ef 12       		.uleb128 0x12
 2848 02f0 94050000 		.4byte	.LASF46
 2849 02f4 01       		.byte	0x1
 2850 02f5 B303     		.2byte	0x3b3
 2851 02f7 00000000 		.4byte	.LFB66
 2852 02fb 4C000000 		.4byte	.LFE66-.LFB66
 2853 02ff 01       		.uleb128 0x1
 2854 0300 9C       		.byte	0x9c
 2855 0301 13       		.uleb128 0x13
 2856 0302 D2050000 		.4byte	.LASF47
 2857 0306 01       		.byte	0x1
 2858 0307 D803     		.2byte	0x3d8
 2859 0309 00000000 		.4byte	.LFB67
 2860 030d 54000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 74


 2861 0311 01       		.uleb128 0x1
 2862 0312 9C       		.byte	0x9c
 2863 0313 27030000 		.4byte	0x327
 2864 0317 0E       		.uleb128 0xe
 2865 0318 52000000 		.4byte	.LASF32
 2866 031c 01       		.byte	0x1
 2867 031d DA03     		.2byte	0x3da
 2868 031f 8C000000 		.4byte	0x8c
 2869 0323 02       		.uleb128 0x2
 2870 0324 91       		.byte	0x91
 2871 0325 76       		.sleb128 -10
 2872 0326 00       		.byte	0
 2873 0327 0D       		.uleb128 0xd
 2874 0328 A3010000 		.4byte	.LASF48
 2875 032c 01       		.byte	0x1
 2876 032d FA03     		.2byte	0x3fa
 2877 032f 00000000 		.4byte	.LFB68
 2878 0333 00010000 		.4byte	.LFE68-.LFB68
 2879 0337 01       		.uleb128 0x1
 2880 0338 9C       		.byte	0x9c
 2881 0339 7A030000 		.4byte	0x37a
 2882 033d 0E       		.uleb128 0xe
 2883 033e C1000000 		.4byte	.LASF49
 2884 0342 01       		.byte	0x1
 2885 0343 FC03     		.2byte	0x3fc
 2886 0345 81000000 		.4byte	0x81
 2887 0349 02       		.uleb128 0x2
 2888 034a 91       		.byte	0x91
 2889 034b 77       		.sleb128 -9
 2890 034c 0E       		.uleb128 0xe
 2891 034d AE000000 		.4byte	.LASF50
 2892 0351 01       		.byte	0x1
 2893 0352 FC03     		.2byte	0x3fc
 2894 0354 7A030000 		.4byte	0x37a
 2895 0358 02       		.uleb128 0x2
 2896 0359 91       		.byte	0x91
 2897 035a 74       		.sleb128 -12
 2898 035b 0E       		.uleb128 0xe
 2899 035c DF030000 		.4byte	.LASF51
 2900 0360 01       		.byte	0x1
 2901 0361 FD03     		.2byte	0x3fd
 2902 0363 81000000 		.4byte	0x81
 2903 0367 02       		.uleb128 0x2
 2904 0368 91       		.byte	0x91
 2905 0369 76       		.sleb128 -10
 2906 036a 0E       		.uleb128 0xe
 2907 036b BE050000 		.4byte	.LASF52
 2908 036f 01       		.byte	0x1
 2909 0370 FD03     		.2byte	0x3fd
 2910 0372 7A030000 		.4byte	0x37a
 2911 0376 02       		.uleb128 0x2
 2912 0377 91       		.byte	0x91
 2913 0378 70       		.sleb128 -16
 2914 0379 00       		.byte	0
 2915 037a 08       		.uleb128 0x8
 2916 037b 81000000 		.4byte	0x81
 2917 037f 8A030000 		.4byte	0x38a
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 75


 2918 0383 09       		.uleb128 0x9
 2919 0384 D7000000 		.4byte	0xd7
 2920 0388 01       		.byte	0x1
 2921 0389 00       		.byte	0
 2922 038a 12       		.uleb128 0x12
 2923 038b 04030000 		.4byte	.LASF53
 2924 038f 01       		.byte	0x1
 2925 0390 4404     		.2byte	0x444
 2926 0392 00000000 		.4byte	.LFB69
 2927 0396 3C000000 		.4byte	.LFE69-.LFB69
 2928 039a 01       		.uleb128 0x1
 2929 039b 9C       		.byte	0x9c
 2930 039c 0F       		.uleb128 0xf
 2931 039d 24030000 		.4byte	.LASF54
 2932 03a1 01       		.byte	0x1
 2933 03a2 5F04     		.2byte	0x45f
 2934 03a4 00000000 		.4byte	.LFB70
 2935 03a8 6C000000 		.4byte	.LFE70-.LFB70
 2936 03ac 01       		.uleb128 0x1
 2937 03ad 9C       		.byte	0x9c
 2938 03ae 0F       		.uleb128 0xf
 2939 03af D2040000 		.4byte	.LASF55
 2940 03b3 01       		.byte	0x1
 2941 03b4 8704     		.2byte	0x487
 2942 03b6 00000000 		.4byte	.LFB71
 2943 03ba 34000000 		.4byte	.LFE71-.LFB71
 2944 03be 01       		.uleb128 0x1
 2945 03bf 9C       		.byte	0x9c
 2946 03c0 0F       		.uleb128 0xf
 2947 03c1 43040000 		.4byte	.LASF56
 2948 03c5 01       		.byte	0x1
 2949 03c6 B004     		.2byte	0x4b0
 2950 03c8 00000000 		.4byte	.LFB72
 2951 03cc 1C000000 		.4byte	.LFE72-.LFB72
 2952 03d0 01       		.uleb128 0x1
 2953 03d1 9C       		.byte	0x9c
 2954 03d2 13       		.uleb128 0x13
 2955 03d3 46010000 		.4byte	.LASF57
 2956 03d7 01       		.byte	0x1
 2957 03d8 D204     		.2byte	0x4d2
 2958 03da 00000000 		.4byte	.LFB73
 2959 03de 44000000 		.4byte	.LFE73-.LFB73
 2960 03e2 01       		.uleb128 0x1
 2961 03e3 9C       		.byte	0x9c
 2962 03e4 23040000 		.4byte	0x423
 2963 03e8 10       		.uleb128 0x10
 2964 03e9 0A010000 		.4byte	.LASF58
 2965 03ed 01       		.byte	0x1
 2966 03ee D204     		.2byte	0x4d2
 2967 03f0 23040000 		.4byte	0x423
 2968 03f4 02       		.uleb128 0x2
 2969 03f5 91       		.byte	0x91
 2970 03f6 6C       		.sleb128 -20
 2971 03f7 10       		.uleb128 0x10
 2972 03f8 A7000000 		.4byte	.LASF59
 2973 03fc 01       		.byte	0x1
 2974 03fd D204     		.2byte	0x4d2
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 76


 2975 03ff 29040000 		.4byte	0x429
 2976 0403 02       		.uleb128 0x2
 2977 0404 91       		.byte	0x91
 2978 0405 68       		.sleb128 -24
 2979 0406 10       		.uleb128 0x10
 2980 0407 E6050000 		.4byte	.LASF33
 2981 040b 01       		.byte	0x1
 2982 040c D204     		.2byte	0x4d2
 2983 040e 81000000 		.4byte	0x81
 2984 0412 02       		.uleb128 0x2
 2985 0413 91       		.byte	0x91
 2986 0414 67       		.sleb128 -25
 2987 0415 14       		.uleb128 0x14
 2988 0416 6900     		.ascii	"i\000"
 2989 0418 01       		.byte	0x1
 2990 0419 D404     		.2byte	0x4d4
 2991 041b 81000000 		.4byte	0x81
 2992 041f 02       		.uleb128 0x2
 2993 0420 91       		.byte	0x91
 2994 0421 77       		.sleb128 -9
 2995 0422 00       		.byte	0
 2996 0423 15       		.uleb128 0x15
 2997 0424 04       		.byte	0x4
 2998 0425 C7000000 		.4byte	0xc7
 2999 0429 15       		.uleb128 0x15
 3000 042a 04       		.byte	0x4
 3001 042b 2F040000 		.4byte	0x42f
 3002 042f 16       		.uleb128 0x16
 3003 0430 97000000 		.4byte	0x97
 3004 0434 13       		.uleb128 0x13
 3005 0435 46060000 		.4byte	.LASF60
 3006 0439 01       		.byte	0x1
 3007 043a F304     		.2byte	0x4f3
 3008 043c 00000000 		.4byte	.LFB74
 3009 0440 3A000000 		.4byte	.LFE74-.LFB74
 3010 0444 01       		.uleb128 0x1
 3011 0445 9C       		.byte	0x9c
 3012 0446 76040000 		.4byte	0x476
 3013 044a 10       		.uleb128 0x10
 3014 044b 0A010000 		.4byte	.LASF58
 3015 044f 01       		.byte	0x1
 3016 0450 F304     		.2byte	0x4f3
 3017 0452 23040000 		.4byte	0x423
 3018 0456 02       		.uleb128 0x2
 3019 0457 91       		.byte	0x91
 3020 0458 6C       		.sleb128 -20
 3021 0459 10       		.uleb128 0x10
 3022 045a E6050000 		.4byte	.LASF33
 3023 045e 01       		.byte	0x1
 3024 045f F304     		.2byte	0x4f3
 3025 0461 81000000 		.4byte	0x81
 3026 0465 02       		.uleb128 0x2
 3027 0466 91       		.byte	0x91
 3028 0467 6B       		.sleb128 -21
 3029 0468 14       		.uleb128 0x14
 3030 0469 6900     		.ascii	"i\000"
 3031 046b 01       		.byte	0x1
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 77


 3032 046c F504     		.2byte	0x4f5
 3033 046e 81000000 		.4byte	0x81
 3034 0472 02       		.uleb128 0x2
 3035 0473 91       		.byte	0x91
 3036 0474 77       		.sleb128 -9
 3037 0475 00       		.byte	0
 3038 0476 0C       		.uleb128 0xc
 3039 0477 5B050000 		.4byte	.LASF61
 3040 047b 01       		.byte	0x1
 3041 047c 43       		.byte	0x43
 3042 047d 85010000 		.4byte	0x185
 3043 0481 05       		.uleb128 0x5
 3044 0482 03       		.byte	0x3
 3045 0483 00000000 		.4byte	Droop_Filter_Custom_backup
 3046 0487 08       		.uleb128 0x8
 3047 0488 97000000 		.4byte	0x97
 3048 048c 97040000 		.4byte	0x497
 3049 0490 09       		.uleb128 0x9
 3050 0491 D7000000 		.4byte	0xd7
 3051 0495 0D       		.byte	0xd
 3052 0496 00       		.byte	0
 3053 0497 17       		.uleb128 0x17
 3054 0498 65060000 		.4byte	.LASF62
 3055 049c 07       		.byte	0x7
 3056 049d 44       		.byte	0x44
 3057 049e A2040000 		.4byte	0x4a2
 3058 04a2 16       		.uleb128 0x16
 3059 04a3 87040000 		.4byte	0x487
 3060 04a7 18       		.uleb128 0x18
 3061 04a8 76060000 		.4byte	.LASF63
 3062 04ac 08       		.byte	0x8
 3063 04ad 1606     		.2byte	0x616
 3064 04af B3040000 		.4byte	0x4b3
 3065 04b3 05       		.uleb128 0x5
 3066 04b4 76000000 		.4byte	0x76
 3067 04b8 17       		.uleb128 0x17
 3068 04b9 99010000 		.4byte	.LASF64
 3069 04bd 09       		.byte	0x9
 3070 04be A2       		.byte	0xa2
 3071 04bf 81000000 		.4byte	0x81
 3072 04c3 17       		.uleb128 0x17
 3073 04c4 75030000 		.4byte	.LASF65
 3074 04c8 01       		.byte	0x1
 3075 04c9 2F       		.byte	0x2f
 3076 04ca C2000000 		.4byte	0xc2
 3077 04ce 08       		.uleb128 0x8
 3078 04cf 81000000 		.4byte	0x81
 3079 04d3 DF040000 		.4byte	0x4df
 3080 04d7 19       		.uleb128 0x19
 3081 04d8 09       		.uleb128 0x9
 3082 04d9 D7000000 		.4byte	0xd7
 3083 04dd 02       		.byte	0x2
 3084 04de 00       		.byte	0
 3085 04df 17       		.uleb128 0x17
 3086 04e0 AE030000 		.4byte	.LASF66
 3087 04e4 01       		.byte	0x1
 3088 04e5 30       		.byte	0x30
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 78


 3089 04e6 EA040000 		.4byte	0x4ea
 3090 04ea 05       		.uleb128 0x5
 3091 04eb CE040000 		.4byte	0x4ce
 3092 04ef 08       		.uleb128 0x8
 3093 04f0 81000000 		.4byte	0x81
 3094 04f4 FA040000 		.4byte	0x4fa
 3095 04f8 19       		.uleb128 0x19
 3096 04f9 00       		.byte	0
 3097 04fa 17       		.uleb128 0x17
 3098 04fb 9F060000 		.4byte	.LASF67
 3099 04ff 01       		.byte	0x1
 3100 0500 31       		.byte	0x31
 3101 0501 05050000 		.4byte	0x505
 3102 0505 05       		.uleb128 0x5
 3103 0506 EF040000 		.4byte	0x4ef
 3104 050a 17       		.uleb128 0x17
 3105 050b 32010000 		.4byte	.LASF68
 3106 050f 01       		.byte	0x1
 3107 0510 32       		.byte	0x32
 3108 0511 C2000000 		.4byte	0xc2
 3109 0515 1A       		.uleb128 0x1a
 3110 0516 AB020000 		.4byte	.LASF69
 3111 051a 01       		.byte	0x1
 3112 051b 6F       		.byte	0x6f
 3113 051c 81000000 		.4byte	0x81
 3114 0520 05       		.uleb128 0x5
 3115 0521 03       		.byte	0x3
 3116 0522 00000000 		.4byte	audioClkConfigured
 3117 0526 08       		.uleb128 0x8
 3118 0527 81000000 		.4byte	0x81
 3119 052b 37050000 		.4byte	0x537
 3120 052f 1B       		.uleb128 0x1b
 3121 0530 D7000000 		.4byte	0xd7
 3122 0534 1F01     		.2byte	0x11f
 3123 0536 00       		.byte	0
 3124 0537 17       		.uleb128 0x17
 3125 0538 C4060000 		.4byte	.LASF70
 3126 053c 01       		.byte	0x1
 3127 053d 3A       		.byte	0x3a
 3128 053e 26050000 		.4byte	0x526
 3129 0542 08       		.uleb128 0x8
 3130 0543 81000000 		.4byte	0x81
 3131 0547 52050000 		.4byte	0x552
 3132 054b 09       		.uleb128 0x9
 3133 054c D7000000 		.4byte	0xd7
 3134 0550 BF       		.byte	0xbf
 3135 0551 00       		.byte	0
 3136 0552 17       		.uleb128 0x17
 3137 0553 04010000 		.4byte	.LASF71
 3138 0557 01       		.byte	0x1
 3139 0558 3D       		.byte	0x3d
 3140 0559 42050000 		.4byte	0x542
 3141 055d 17       		.uleb128 0x17
 3142 055e 55030000 		.4byte	.LASF72
 3143 0562 01       		.byte	0x1
 3144 0563 3E       		.byte	0x3e
 3145 0564 8C000000 		.4byte	0x8c
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 79


 3146 0568 1A       		.uleb128 0x1a
 3147 0569 47030000 		.4byte	.LASF73
 3148 056d 01       		.byte	0x1
 3149 056e 49       		.byte	0x49
 3150 056f 81000000 		.4byte	0x81
 3151 0573 05       		.uleb128 0x5
 3152 0574 03       		.byte	0x3
 3153 0575 00000000 		.4byte	USBOutDmaChan
 3154 0579 1A       		.uleb128 0x1a
 3155 057a 13020000 		.4byte	.LASF74
 3156 057e 01       		.byte	0x1
 3157 057f 4A       		.byte	0x4a
 3158 0580 81000000 		.4byte	0x81
 3159 0584 05       		.uleb128 0x5
 3160 0585 03       		.byte	0x3
 3161 0586 00000000 		.4byte	txDmaChan
 3162 058a 1A       		.uleb128 0x1a
 3163 058b CC020000 		.4byte	.LASF75
 3164 058f 01       		.byte	0x1
 3165 0590 4B       		.byte	0x4b
 3166 0591 81000000 		.4byte	0x81
 3167 0595 05       		.uleb128 0x5
 3168 0596 03       		.byte	0x3
 3169 0597 00000000 		.4byte	I2STxDMAChan
 3170 059b 1A       		.uleb128 0x1a
 3171 059c 92060000 		.4byte	.LASF76
 3172 05a0 01       		.byte	0x1
 3173 05a1 4C       		.byte	0x4c
 3174 05a2 81000000 		.4byte	0x81
 3175 05a6 05       		.uleb128 0x5
 3176 05a7 03       		.byte	0x3
 3177 05a8 00000000 		.4byte	USBInDmaChan
 3178 05ac 1A       		.uleb128 0x1a
 3179 05ad 8F010000 		.4byte	.LASF77
 3180 05b1 01       		.byte	0x1
 3181 05b2 4D       		.byte	0x4d
 3182 05b3 81000000 		.4byte	0x81
 3183 05b7 05       		.uleb128 0x5
 3184 05b8 03       		.byte	0x3
 3185 05b9 00000000 		.4byte	rxDmaChan
 3186 05bd 08       		.uleb128 0x8
 3187 05be 81000000 		.4byte	0x81
 3188 05c2 CD050000 		.4byte	0x5cd
 3189 05c6 09       		.uleb128 0x9
 3190 05c7 D7000000 		.4byte	0xd7
 3191 05cb 07       		.byte	0x7
 3192 05cc 00       		.byte	0
 3193 05cd 1A       		.uleb128 0x1a
 3194 05ce E8000000 		.4byte	.LASF78
 3195 05d2 01       		.byte	0x1
 3196 05d3 4F       		.byte	0x4f
 3197 05d4 BD050000 		.4byte	0x5bd
 3198 05d8 05       		.uleb128 0x5
 3199 05d9 03       		.byte	0x3
 3200 05da 00000000 		.4byte	txTd
 3201 05de 1A       		.uleb128 0x1a
 3202 05df 0C050000 		.4byte	.LASF79
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 80


 3203 05e3 01       		.byte	0x1
 3204 05e4 50       		.byte	0x50
 3205 05e5 BD050000 		.4byte	0x5bd
 3206 05e9 05       		.uleb128 0x5
 3207 05ea 03       		.byte	0x3
 3208 05eb 00000000 		.4byte	rxTd
 3209 05ef 1A       		.uleb128 0x1a
 3210 05f0 65000000 		.4byte	.LASF80
 3211 05f4 01       		.byte	0x1
 3212 05f5 51       		.byte	0x51
 3213 05f6 81000000 		.4byte	0x81
 3214 05fa 05       		.uleb128 0x5
 3215 05fb 03       		.byte	0x3
 3216 05fc 00000000 		.4byte	I2STxTd
 3217 0600 1A       		.uleb128 0x1a
 3218 0601 3B040000 		.4byte	.LASF81
 3219 0605 01       		.byte	0x1
 3220 0606 52       		.byte	0x52
 3221 0607 81000000 		.4byte	0x81
 3222 060b 05       		.uleb128 0x5
 3223 060c 03       		.byte	0x3
 3224 060d 00000000 		.4byte	I2SRxTd
 3225 0611 1A       		.uleb128 0x1a
 3226 0612 15010000 		.4byte	.LASF82
 3227 0616 01       		.byte	0x1
 3228 0617 53       		.byte	0x53
 3229 0618 7A030000 		.4byte	0x37a
 3230 061c 05       		.uleb128 0x5
 3231 061d 03       		.byte	0x3
 3232 061e 00000000 		.4byte	USBOutTd
 3233 0622 1A       		.uleb128 0x1a
 3234 0623 53050000 		.4byte	.LASF83
 3235 0627 01       		.byte	0x1
 3236 0628 54       		.byte	0x54
 3237 0629 7A030000 		.4byte	0x37a
 3238 062d 05       		.uleb128 0x5
 3239 062e 03       		.byte	0x3
 3240 062f 00000000 		.4byte	USBInTd
 3241 0633 1A       		.uleb128 0x1a
 3242 0634 CB030000 		.4byte	.LASF84
 3243 0638 01       		.byte	0x1
 3244 0639 56       		.byte	0x56
 3245 063a 81000000 		.4byte	0x81
 3246 063e 05       		.uleb128 0x5
 3247 063f 03       		.byte	0x3
 3248 0640 00000000 		.4byte	resetTx
 3249 0644 1A       		.uleb128 0x1a
 3250 0645 23040000 		.4byte	.LASF85
 3251 0649 01       		.byte	0x1
 3252 064a 57       		.byte	0x57
 3253 064b 81000000 		.4byte	0x81
 3254 064f 05       		.uleb128 0x5
 3255 0650 03       		.byte	0x3
 3256 0651 00000000 		.4byte	outPlaying
 3257 0655 1A       		.uleb128 0x1a
 3258 0656 49000000 		.4byte	.LASF86
 3259 065a 01       		.byte	0x1
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 81


 3260 065b 58       		.byte	0x58
 3261 065c 8C000000 		.4byte	0x8c
 3262 0660 05       		.uleb128 0x5
 3263 0661 03       		.byte	0x3
 3264 0662 00000000 		.4byte	outLevel
 3265 0666 1A       		.uleb128 0x1a
 3266 0667 34000000 		.4byte	.LASF87
 3267 066b 01       		.byte	0x1
 3268 066c 59       		.byte	0x59
 3269 066d 8C000000 		.4byte	0x8c
 3270 0671 05       		.uleb128 0x5
 3271 0672 03       		.byte	0x3
 3272 0673 00000000 		.4byte	outUsbCount
 3273 0677 1A       		.uleb128 0x1a
 3274 0678 3A050000 		.4byte	.LASF88
 3275 067c 01       		.byte	0x1
 3276 067d 5A       		.byte	0x5a
 3277 067e 8C000000 		.4byte	0x8c
 3278 0682 05       		.uleb128 0x5
 3279 0683 03       		.byte	0x3
 3280 0684 00000000 		.4byte	outUsbShadow
 3281 0688 08       		.uleb128 0x8
 3282 0689 81000000 		.4byte	0x81
 3283 068d 99060000 		.4byte	0x699
 3284 0691 1B       		.uleb128 0x1b
 3285 0692 D7000000 		.4byte	0xd7
 3286 0696 7F04     		.2byte	0x47f
 3287 0698 00       		.byte	0
 3288 0699 1A       		.uleb128 0x1a
 3289 069a 27060000 		.4byte	.LASF89
 3290 069e 01       		.byte	0x1
 3291 069f 5B       		.byte	0x5b
 3292 06a0 88060000 		.4byte	0x688
 3293 06a4 05       		.uleb128 0x5
 3294 06a5 03       		.byte	0x3
 3295 06a6 00000000 		.4byte	outBuffer
 3296 06aa 1A       		.uleb128 0x1a
 3297 06ab 0D000000 		.4byte	.LASF90
 3298 06af 01       		.byte	0x1
 3299 06b0 5C       		.byte	0x5c
 3300 06b1 8C000000 		.4byte	0x8c
 3301 06b5 05       		.uleb128 0x5
 3302 06b6 03       		.byte	0x3
 3303 06b7 00000000 		.4byte	outBufIndex
 3304 06bb 1A       		.uleb128 0x1a
 3305 06bc CA040000 		.4byte	.LASF91
 3306 06c0 01       		.byte	0x1
 3307 06c1 5F       		.byte	0x5f
 3308 06c2 81000000 		.4byte	0x81
 3309 06c6 05       		.uleb128 0x5
 3310 06c7 03       		.byte	0x3
 3311 06c8 00000000 		.4byte	resetRx
 3312 06cc 1A       		.uleb128 0x1a
 3313 06cd FC010000 		.4byte	.LASF92
 3314 06d1 01       		.byte	0x1
 3315 06d2 60       		.byte	0x60
 3316 06d3 81000000 		.4byte	0x81
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 82


 3317 06d7 05       		.uleb128 0x5
 3318 06d8 03       		.byte	0x3
 3319 06d9 00000000 		.4byte	inPlaying
 3320 06dd 1A       		.uleb128 0x1a
 3321 06de B6060000 		.4byte	.LASF93
 3322 06e2 01       		.byte	0x1
 3323 06e3 61       		.byte	0x61
 3324 06e4 8C000000 		.4byte	0x8c
 3325 06e8 05       		.uleb128 0x5
 3326 06e9 03       		.byte	0x3
 3327 06ea 00000000 		.4byte	inLevel
 3328 06ee 1A       		.uleb128 0x1a
 3329 06ef F6050000 		.4byte	.LASF94
 3330 06f3 01       		.byte	0x1
 3331 06f4 62       		.byte	0x62
 3332 06f5 8C000000 		.4byte	0x8c
 3333 06f9 05       		.uleb128 0x5
 3334 06fa 03       		.byte	0x3
 3335 06fb 00000000 		.4byte	inUsbCount
 3336 06ff 1A       		.uleb128 0x1a
 3337 0700 D3030000 		.4byte	.LASF95
 3338 0704 01       		.byte	0x1
 3339 0705 63       		.byte	0x63
 3340 0706 8C000000 		.4byte	0x8c
 3341 070a 05       		.uleb128 0x5
 3342 070b 03       		.byte	0x3
 3343 070c 00000000 		.4byte	inUsbShadow
 3344 0710 1A       		.uleb128 0x1a
 3345 0711 BE020000 		.4byte	.LASF96
 3346 0715 01       		.byte	0x1
 3347 0716 64       		.byte	0x64
 3348 0717 81000000 		.4byte	0x81
 3349 071b 05       		.uleb128 0x5
 3350 071c 03       		.byte	0x3
 3351 071d 00000000 		.4byte	clearInBuffer
 3352 0721 08       		.uleb128 0x8
 3353 0722 81000000 		.4byte	0x81
 3354 0726 32070000 		.4byte	0x732
 3355 072a 1B       		.uleb128 0x1b
 3356 072b D7000000 		.4byte	0xd7
 3357 072f FF02     		.2byte	0x2ff
 3358 0731 00       		.byte	0
 3359 0732 1A       		.uleb128 0x1a
 3360 0733 40000000 		.4byte	.LASF97
 3361 0737 01       		.byte	0x1
 3362 0738 65       		.byte	0x65
 3363 0739 21070000 		.4byte	0x721
 3364 073d 05       		.uleb128 0x5
 3365 073e 03       		.byte	0x3
 3366 073f 00000000 		.4byte	inBuffer
 3367 0743 1A       		.uleb128 0x1a
 3368 0744 84010000 		.4byte	.LASF98
 3369 0748 01       		.byte	0x1
 3370 0749 66       		.byte	0x66
 3371 074a 8C000000 		.4byte	0x8c
 3372 074e 05       		.uleb128 0x5
 3373 074f 03       		.byte	0x3
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 83


 3374 0750 00000000 		.4byte	inBufIndex
 3375 0754 1A       		.uleb128 0x1a
 3376 0755 00000000 		.4byte	.LASF99
 3377 0759 01       		.byte	0x1
 3378 075a 6A       		.byte	0x6a
 3379 075b 81000000 		.4byte	0x81
 3380 075f 05       		.uleb128 0x5
 3381 0760 03       		.byte	0x3
 3382 0761 00000000 		.4byte	lowPowerIdle
 3383 0765 1A       		.uleb128 0x1a
 3384 0766 B6050000 		.4byte	.LASF100
 3385 076a 01       		.byte	0x1
 3386 076b 6C       		.byte	0x6c
 3387 076c 81000000 		.4byte	0x81
 3388 0770 05       		.uleb128 0x5
 3389 0771 03       		.byte	0x3
 3390 0772 00000000 		.4byte	setRate
 3391 0776 1A       		.uleb128 0x1a
 3392 0777 6B010000 		.4byte	.LASF101
 3393 077b 01       		.byte	0x1
 3394 077c 6D       		.byte	0x6d
 3395 077d 81000000 		.4byte	0x81
 3396 0781 05       		.uleb128 0x5
 3397 0782 03       		.byte	0x3
 3398 0783 00000000 		.4byte	rateChangedWhileInactive
 3399 0787 1A       		.uleb128 0x1a
 3400 0788 01060000 		.4byte	.LASF102
 3401 078c 01       		.byte	0x1
 3402 078d 6E       		.byte	0x6e
 3403 078e 81000000 		.4byte	0x81
 3404 0792 05       		.uleb128 0x5
 3405 0793 03       		.byte	0x3
 3406 0794 00000000 		.4byte	clockSwitchTimer
 3407 0798 1A       		.uleb128 0x1a
 3408 0799 22060000 		.4byte	.LASF103
 3409 079d 01       		.byte	0x1
 3410 079e 71       		.byte	0x71
 3411 079f 81000000 		.4byte	0x81
 3412 07a3 05       		.uleb128 0x5
 3413 07a4 03       		.byte	0x3
 3414 07a5 00000000 		.4byte	rate
 3415 07a9 00       		.byte	0
 3416              		.section	.debug_abbrev,"",%progbits
 3417              	.Ldebug_abbrev0:
 3418 0000 01       		.uleb128 0x1
 3419 0001 11       		.uleb128 0x11
 3420 0002 01       		.byte	0x1
 3421 0003 25       		.uleb128 0x25
 3422 0004 0E       		.uleb128 0xe
 3423 0005 13       		.uleb128 0x13
 3424 0006 0B       		.uleb128 0xb
 3425 0007 03       		.uleb128 0x3
 3426 0008 0E       		.uleb128 0xe
 3427 0009 1B       		.uleb128 0x1b
 3428 000a 0E       		.uleb128 0xe
 3429 000b 55       		.uleb128 0x55
 3430 000c 17       		.uleb128 0x17
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 84


 3431 000d 11       		.uleb128 0x11
 3432 000e 01       		.uleb128 0x1
 3433 000f 10       		.uleb128 0x10
 3434 0010 17       		.uleb128 0x17
 3435 0011 00       		.byte	0
 3436 0012 00       		.byte	0
 3437 0013 02       		.uleb128 0x2
 3438 0014 24       		.uleb128 0x24
 3439 0015 00       		.byte	0
 3440 0016 0B       		.uleb128 0xb
 3441 0017 0B       		.uleb128 0xb
 3442 0018 3E       		.uleb128 0x3e
 3443 0019 0B       		.uleb128 0xb
 3444 001a 03       		.uleb128 0x3
 3445 001b 0E       		.uleb128 0xe
 3446 001c 00       		.byte	0
 3447 001d 00       		.byte	0
 3448 001e 03       		.uleb128 0x3
 3449 001f 16       		.uleb128 0x16
 3450 0020 00       		.byte	0
 3451 0021 03       		.uleb128 0x3
 3452 0022 0E       		.uleb128 0xe
 3453 0023 3A       		.uleb128 0x3a
 3454 0024 0B       		.uleb128 0xb
 3455 0025 3B       		.uleb128 0x3b
 3456 0026 0B       		.uleb128 0xb
 3457 0027 49       		.uleb128 0x49
 3458 0028 13       		.uleb128 0x13
 3459 0029 00       		.byte	0
 3460 002a 00       		.byte	0
 3461 002b 04       		.uleb128 0x4
 3462 002c 24       		.uleb128 0x24
 3463 002d 00       		.byte	0
 3464 002e 0B       		.uleb128 0xb
 3465 002f 0B       		.uleb128 0xb
 3466 0030 3E       		.uleb128 0x3e
 3467 0031 0B       		.uleb128 0xb
 3468 0032 03       		.uleb128 0x3
 3469 0033 08       		.uleb128 0x8
 3470 0034 00       		.byte	0
 3471 0035 00       		.byte	0
 3472 0036 05       		.uleb128 0x5
 3473 0037 35       		.uleb128 0x35
 3474 0038 00       		.byte	0
 3475 0039 49       		.uleb128 0x49
 3476 003a 13       		.uleb128 0x13
 3477 003b 00       		.byte	0
 3478 003c 00       		.byte	0
 3479 003d 06       		.uleb128 0x6
 3480 003e 13       		.uleb128 0x13
 3481 003f 01       		.byte	0x1
 3482 0040 03       		.uleb128 0x3
 3483 0041 0E       		.uleb128 0xe
 3484 0042 0B       		.uleb128 0xb
 3485 0043 0B       		.uleb128 0xb
 3486 0044 3A       		.uleb128 0x3a
 3487 0045 0B       		.uleb128 0xb
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 85


 3488 0046 3B       		.uleb128 0x3b
 3489 0047 0B       		.uleb128 0xb
 3490 0048 01       		.uleb128 0x1
 3491 0049 13       		.uleb128 0x13
 3492 004a 00       		.byte	0
 3493 004b 00       		.byte	0
 3494 004c 07       		.uleb128 0x7
 3495 004d 0D       		.uleb128 0xd
 3496 004e 00       		.byte	0
 3497 004f 03       		.uleb128 0x3
 3498 0050 0E       		.uleb128 0xe
 3499 0051 3A       		.uleb128 0x3a
 3500 0052 0B       		.uleb128 0xb
 3501 0053 3B       		.uleb128 0x3b
 3502 0054 0B       		.uleb128 0xb
 3503 0055 49       		.uleb128 0x49
 3504 0056 13       		.uleb128 0x13
 3505 0057 38       		.uleb128 0x38
 3506 0058 0B       		.uleb128 0xb
 3507 0059 00       		.byte	0
 3508 005a 00       		.byte	0
 3509 005b 08       		.uleb128 0x8
 3510 005c 01       		.uleb128 0x1
 3511 005d 01       		.byte	0x1
 3512 005e 49       		.uleb128 0x49
 3513 005f 13       		.uleb128 0x13
 3514 0060 01       		.uleb128 0x1
 3515 0061 13       		.uleb128 0x13
 3516 0062 00       		.byte	0
 3517 0063 00       		.byte	0
 3518 0064 09       		.uleb128 0x9
 3519 0065 21       		.uleb128 0x21
 3520 0066 00       		.byte	0
 3521 0067 49       		.uleb128 0x49
 3522 0068 13       		.uleb128 0x13
 3523 0069 2F       		.uleb128 0x2f
 3524 006a 0B       		.uleb128 0xb
 3525 006b 00       		.byte	0
 3526 006c 00       		.byte	0
 3527 006d 0A       		.uleb128 0xa
 3528 006e 0D       		.uleb128 0xd
 3529 006f 00       		.byte	0
 3530 0070 03       		.uleb128 0x3
 3531 0071 08       		.uleb128 0x8
 3532 0072 3A       		.uleb128 0x3a
 3533 0073 0B       		.uleb128 0xb
 3534 0074 3B       		.uleb128 0x3b
 3535 0075 0B       		.uleb128 0xb
 3536 0076 49       		.uleb128 0x49
 3537 0077 13       		.uleb128 0x13
 3538 0078 38       		.uleb128 0x38
 3539 0079 0B       		.uleb128 0xb
 3540 007a 00       		.byte	0
 3541 007b 00       		.byte	0
 3542 007c 0B       		.uleb128 0xb
 3543 007d 2E       		.uleb128 0x2e
 3544 007e 01       		.byte	0x1
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 86


 3545 007f 3F       		.uleb128 0x3f
 3546 0080 19       		.uleb128 0x19
 3547 0081 03       		.uleb128 0x3
 3548 0082 0E       		.uleb128 0xe
 3549 0083 3A       		.uleb128 0x3a
 3550 0084 0B       		.uleb128 0xb
 3551 0085 3B       		.uleb128 0x3b
 3552 0086 0B       		.uleb128 0xb
 3553 0087 27       		.uleb128 0x27
 3554 0088 19       		.uleb128 0x19
 3555 0089 11       		.uleb128 0x11
 3556 008a 01       		.uleb128 0x1
 3557 008b 12       		.uleb128 0x12
 3558 008c 06       		.uleb128 0x6
 3559 008d 40       		.uleb128 0x40
 3560 008e 18       		.uleb128 0x18
 3561 008f 9642     		.uleb128 0x2116
 3562 0091 19       		.uleb128 0x19
 3563 0092 01       		.uleb128 0x1
 3564 0093 13       		.uleb128 0x13
 3565 0094 00       		.byte	0
 3566 0095 00       		.byte	0
 3567 0096 0C       		.uleb128 0xc
 3568 0097 34       		.uleb128 0x34
 3569 0098 00       		.byte	0
 3570 0099 03       		.uleb128 0x3
 3571 009a 0E       		.uleb128 0xe
 3572 009b 3A       		.uleb128 0x3a
 3573 009c 0B       		.uleb128 0xb
 3574 009d 3B       		.uleb128 0x3b
 3575 009e 0B       		.uleb128 0xb
 3576 009f 49       		.uleb128 0x49
 3577 00a0 13       		.uleb128 0x13
 3578 00a1 02       		.uleb128 0x2
 3579 00a2 18       		.uleb128 0x18
 3580 00a3 00       		.byte	0
 3581 00a4 00       		.byte	0
 3582 00a5 0D       		.uleb128 0xd
 3583 00a6 2E       		.uleb128 0x2e
 3584 00a7 01       		.byte	0x1
 3585 00a8 3F       		.uleb128 0x3f
 3586 00a9 19       		.uleb128 0x19
 3587 00aa 03       		.uleb128 0x3
 3588 00ab 0E       		.uleb128 0xe
 3589 00ac 3A       		.uleb128 0x3a
 3590 00ad 0B       		.uleb128 0xb
 3591 00ae 3B       		.uleb128 0x3b
 3592 00af 05       		.uleb128 0x5
 3593 00b0 27       		.uleb128 0x27
 3594 00b1 19       		.uleb128 0x19
 3595 00b2 11       		.uleb128 0x11
 3596 00b3 01       		.uleb128 0x1
 3597 00b4 12       		.uleb128 0x12
 3598 00b5 06       		.uleb128 0x6
 3599 00b6 40       		.uleb128 0x40
 3600 00b7 18       		.uleb128 0x18
 3601 00b8 9642     		.uleb128 0x2116
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 87


 3602 00ba 19       		.uleb128 0x19
 3603 00bb 01       		.uleb128 0x1
 3604 00bc 13       		.uleb128 0x13
 3605 00bd 00       		.byte	0
 3606 00be 00       		.byte	0
 3607 00bf 0E       		.uleb128 0xe
 3608 00c0 34       		.uleb128 0x34
 3609 00c1 00       		.byte	0
 3610 00c2 03       		.uleb128 0x3
 3611 00c3 0E       		.uleb128 0xe
 3612 00c4 3A       		.uleb128 0x3a
 3613 00c5 0B       		.uleb128 0xb
 3614 00c6 3B       		.uleb128 0x3b
 3615 00c7 05       		.uleb128 0x5
 3616 00c8 49       		.uleb128 0x49
 3617 00c9 13       		.uleb128 0x13
 3618 00ca 02       		.uleb128 0x2
 3619 00cb 18       		.uleb128 0x18
 3620 00cc 00       		.byte	0
 3621 00cd 00       		.byte	0
 3622 00ce 0F       		.uleb128 0xf
 3623 00cf 2E       		.uleb128 0x2e
 3624 00d0 00       		.byte	0
 3625 00d1 3F       		.uleb128 0x3f
 3626 00d2 19       		.uleb128 0x19
 3627 00d3 03       		.uleb128 0x3
 3628 00d4 0E       		.uleb128 0xe
 3629 00d5 3A       		.uleb128 0x3a
 3630 00d6 0B       		.uleb128 0xb
 3631 00d7 3B       		.uleb128 0x3b
 3632 00d8 05       		.uleb128 0x5
 3633 00d9 27       		.uleb128 0x27
 3634 00da 19       		.uleb128 0x19
 3635 00db 11       		.uleb128 0x11
 3636 00dc 01       		.uleb128 0x1
 3637 00dd 12       		.uleb128 0x12
 3638 00de 06       		.uleb128 0x6
 3639 00df 40       		.uleb128 0x40
 3640 00e0 18       		.uleb128 0x18
 3641 00e1 9642     		.uleb128 0x2116
 3642 00e3 19       		.uleb128 0x19
 3643 00e4 00       		.byte	0
 3644 00e5 00       		.byte	0
 3645 00e6 10       		.uleb128 0x10
 3646 00e7 05       		.uleb128 0x5
 3647 00e8 00       		.byte	0
 3648 00e9 03       		.uleb128 0x3
 3649 00ea 0E       		.uleb128 0xe
 3650 00eb 3A       		.uleb128 0x3a
 3651 00ec 0B       		.uleb128 0xb
 3652 00ed 3B       		.uleb128 0x3b
 3653 00ee 05       		.uleb128 0x5
 3654 00ef 49       		.uleb128 0x49
 3655 00f0 13       		.uleb128 0x13
 3656 00f1 02       		.uleb128 0x2
 3657 00f2 18       		.uleb128 0x18
 3658 00f3 00       		.byte	0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 88


 3659 00f4 00       		.byte	0
 3660 00f5 11       		.uleb128 0x11
 3661 00f6 0B       		.uleb128 0xb
 3662 00f7 01       		.byte	0x1
 3663 00f8 11       		.uleb128 0x11
 3664 00f9 01       		.uleb128 0x1
 3665 00fa 12       		.uleb128 0x12
 3666 00fb 06       		.uleb128 0x6
 3667 00fc 00       		.byte	0
 3668 00fd 00       		.byte	0
 3669 00fe 12       		.uleb128 0x12
 3670 00ff 2E       		.uleb128 0x2e
 3671 0100 00       		.byte	0
 3672 0101 3F       		.uleb128 0x3f
 3673 0102 19       		.uleb128 0x19
 3674 0103 03       		.uleb128 0x3
 3675 0104 0E       		.uleb128 0xe
 3676 0105 3A       		.uleb128 0x3a
 3677 0106 0B       		.uleb128 0xb
 3678 0107 3B       		.uleb128 0x3b
 3679 0108 05       		.uleb128 0x5
 3680 0109 27       		.uleb128 0x27
 3681 010a 19       		.uleb128 0x19
 3682 010b 11       		.uleb128 0x11
 3683 010c 01       		.uleb128 0x1
 3684 010d 12       		.uleb128 0x12
 3685 010e 06       		.uleb128 0x6
 3686 010f 40       		.uleb128 0x40
 3687 0110 18       		.uleb128 0x18
 3688 0111 9742     		.uleb128 0x2117
 3689 0113 19       		.uleb128 0x19
 3690 0114 00       		.byte	0
 3691 0115 00       		.byte	0
 3692 0116 13       		.uleb128 0x13
 3693 0117 2E       		.uleb128 0x2e
 3694 0118 01       		.byte	0x1
 3695 0119 3F       		.uleb128 0x3f
 3696 011a 19       		.uleb128 0x19
 3697 011b 03       		.uleb128 0x3
 3698 011c 0E       		.uleb128 0xe
 3699 011d 3A       		.uleb128 0x3a
 3700 011e 0B       		.uleb128 0xb
 3701 011f 3B       		.uleb128 0x3b
 3702 0120 05       		.uleb128 0x5
 3703 0121 27       		.uleb128 0x27
 3704 0122 19       		.uleb128 0x19
 3705 0123 11       		.uleb128 0x11
 3706 0124 01       		.uleb128 0x1
 3707 0125 12       		.uleb128 0x12
 3708 0126 06       		.uleb128 0x6
 3709 0127 40       		.uleb128 0x40
 3710 0128 18       		.uleb128 0x18
 3711 0129 9742     		.uleb128 0x2117
 3712 012b 19       		.uleb128 0x19
 3713 012c 01       		.uleb128 0x1
 3714 012d 13       		.uleb128 0x13
 3715 012e 00       		.byte	0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 89


 3716 012f 00       		.byte	0
 3717 0130 14       		.uleb128 0x14
 3718 0131 34       		.uleb128 0x34
 3719 0132 00       		.byte	0
 3720 0133 03       		.uleb128 0x3
 3721 0134 08       		.uleb128 0x8
 3722 0135 3A       		.uleb128 0x3a
 3723 0136 0B       		.uleb128 0xb
 3724 0137 3B       		.uleb128 0x3b
 3725 0138 05       		.uleb128 0x5
 3726 0139 49       		.uleb128 0x49
 3727 013a 13       		.uleb128 0x13
 3728 013b 02       		.uleb128 0x2
 3729 013c 18       		.uleb128 0x18
 3730 013d 00       		.byte	0
 3731 013e 00       		.byte	0
 3732 013f 15       		.uleb128 0x15
 3733 0140 0F       		.uleb128 0xf
 3734 0141 00       		.byte	0
 3735 0142 0B       		.uleb128 0xb
 3736 0143 0B       		.uleb128 0xb
 3737 0144 49       		.uleb128 0x49
 3738 0145 13       		.uleb128 0x13
 3739 0146 00       		.byte	0
 3740 0147 00       		.byte	0
 3741 0148 16       		.uleb128 0x16
 3742 0149 26       		.uleb128 0x26
 3743 014a 00       		.byte	0
 3744 014b 49       		.uleb128 0x49
 3745 014c 13       		.uleb128 0x13
 3746 014d 00       		.byte	0
 3747 014e 00       		.byte	0
 3748 014f 17       		.uleb128 0x17
 3749 0150 34       		.uleb128 0x34
 3750 0151 00       		.byte	0
 3751 0152 03       		.uleb128 0x3
 3752 0153 0E       		.uleb128 0xe
 3753 0154 3A       		.uleb128 0x3a
 3754 0155 0B       		.uleb128 0xb
 3755 0156 3B       		.uleb128 0x3b
 3756 0157 0B       		.uleb128 0xb
 3757 0158 49       		.uleb128 0x49
 3758 0159 13       		.uleb128 0x13
 3759 015a 3F       		.uleb128 0x3f
 3760 015b 19       		.uleb128 0x19
 3761 015c 3C       		.uleb128 0x3c
 3762 015d 19       		.uleb128 0x19
 3763 015e 00       		.byte	0
 3764 015f 00       		.byte	0
 3765 0160 18       		.uleb128 0x18
 3766 0161 34       		.uleb128 0x34
 3767 0162 00       		.byte	0
 3768 0163 03       		.uleb128 0x3
 3769 0164 0E       		.uleb128 0xe
 3770 0165 3A       		.uleb128 0x3a
 3771 0166 0B       		.uleb128 0xb
 3772 0167 3B       		.uleb128 0x3b
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 90


 3773 0168 05       		.uleb128 0x5
 3774 0169 49       		.uleb128 0x49
 3775 016a 13       		.uleb128 0x13
 3776 016b 3F       		.uleb128 0x3f
 3777 016c 19       		.uleb128 0x19
 3778 016d 3C       		.uleb128 0x3c
 3779 016e 19       		.uleb128 0x19
 3780 016f 00       		.byte	0
 3781 0170 00       		.byte	0
 3782 0171 19       		.uleb128 0x19
 3783 0172 21       		.uleb128 0x21
 3784 0173 00       		.byte	0
 3785 0174 00       		.byte	0
 3786 0175 00       		.byte	0
 3787 0176 1A       		.uleb128 0x1a
 3788 0177 34       		.uleb128 0x34
 3789 0178 00       		.byte	0
 3790 0179 03       		.uleb128 0x3
 3791 017a 0E       		.uleb128 0xe
 3792 017b 3A       		.uleb128 0x3a
 3793 017c 0B       		.uleb128 0xb
 3794 017d 3B       		.uleb128 0x3b
 3795 017e 0B       		.uleb128 0xb
 3796 017f 49       		.uleb128 0x49
 3797 0180 13       		.uleb128 0x13
 3798 0181 3F       		.uleb128 0x3f
 3799 0182 19       		.uleb128 0x19
 3800 0183 02       		.uleb128 0x2
 3801 0184 18       		.uleb128 0x18
 3802 0185 00       		.byte	0
 3803 0186 00       		.byte	0
 3804 0187 1B       		.uleb128 0x1b
 3805 0188 21       		.uleb128 0x21
 3806 0189 00       		.byte	0
 3807 018a 49       		.uleb128 0x49
 3808 018b 13       		.uleb128 0x13
 3809 018c 2F       		.uleb128 0x2f
 3810 018d 05       		.uleb128 0x5
 3811 018e 00       		.byte	0
 3812 018f 00       		.byte	0
 3813 0190 00       		.byte	0
 3814              		.section	.debug_aranges,"",%progbits
 3815 0000 AC000000 		.4byte	0xac
 3816 0004 0200     		.2byte	0x2
 3817 0006 00000000 		.4byte	.Ldebug_info0
 3818 000a 04       		.byte	0x4
 3819 000b 00       		.byte	0
 3820 000c 0000     		.2byte	0
 3821 000e 0000     		.2byte	0
 3822 0010 00000000 		.4byte	.LFB56
 3823 0014 BC020000 		.4byte	.LFE56-.LFB56
 3824 0018 00000000 		.4byte	.LFB57
 3825 001c 30020000 		.4byte	.LFE57-.LFB57
 3826 0020 00000000 		.4byte	.LFB58
 3827 0024 40020000 		.4byte	.LFE58-.LFB58
 3828 0028 00000000 		.4byte	.LFB59
 3829 002c 60000000 		.4byte	.LFE59-.LFB59
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 91


 3830 0030 00000000 		.4byte	.LFB60
 3831 0034 58000000 		.4byte	.LFE60-.LFB60
 3832 0038 00000000 		.4byte	.LFB61
 3833 003c 88000000 		.4byte	.LFE61-.LFB61
 3834 0040 00000000 		.4byte	.LFB62
 3835 0044 40000000 		.4byte	.LFE62-.LFB62
 3836 0048 00000000 		.4byte	.LFB63
 3837 004c 50000000 		.4byte	.LFE63-.LFB63
 3838 0050 00000000 		.4byte	.LFB64
 3839 0054 2C010000 		.4byte	.LFE64-.LFB64
 3840 0058 00000000 		.4byte	.LFB65
 3841 005c D4000000 		.4byte	.LFE65-.LFB65
 3842 0060 00000000 		.4byte	.LFB66
 3843 0064 4C000000 		.4byte	.LFE66-.LFB66
 3844 0068 00000000 		.4byte	.LFB67
 3845 006c 54000000 		.4byte	.LFE67-.LFB67
 3846 0070 00000000 		.4byte	.LFB68
 3847 0074 00010000 		.4byte	.LFE68-.LFB68
 3848 0078 00000000 		.4byte	.LFB69
 3849 007c 3C000000 		.4byte	.LFE69-.LFB69
 3850 0080 00000000 		.4byte	.LFB70
 3851 0084 6C000000 		.4byte	.LFE70-.LFB70
 3852 0088 00000000 		.4byte	.LFB71
 3853 008c 34000000 		.4byte	.LFE71-.LFB71
 3854 0090 00000000 		.4byte	.LFB72
 3855 0094 1C000000 		.4byte	.LFE72-.LFB72
 3856 0098 00000000 		.4byte	.LFB73
 3857 009c 44000000 		.4byte	.LFE73-.LFB73
 3858 00a0 00000000 		.4byte	.LFB74
 3859 00a4 3A000000 		.4byte	.LFE74-.LFB74
 3860 00a8 00000000 		.4byte	0
 3861 00ac 00000000 		.4byte	0
 3862              		.section	.debug_ranges,"",%progbits
 3863              	.Ldebug_ranges0:
 3864 0000 00000000 		.4byte	.LFB56
 3865 0004 BC020000 		.4byte	.LFE56
 3866 0008 00000000 		.4byte	.LFB57
 3867 000c 30020000 		.4byte	.LFE57
 3868 0010 00000000 		.4byte	.LFB58
 3869 0014 40020000 		.4byte	.LFE58
 3870 0018 00000000 		.4byte	.LFB59
 3871 001c 60000000 		.4byte	.LFE59
 3872 0020 00000000 		.4byte	.LFB60
 3873 0024 58000000 		.4byte	.LFE60
 3874 0028 00000000 		.4byte	.LFB61
 3875 002c 88000000 		.4byte	.LFE61
 3876 0030 00000000 		.4byte	.LFB62
 3877 0034 40000000 		.4byte	.LFE62
 3878 0038 00000000 		.4byte	.LFB63
 3879 003c 50000000 		.4byte	.LFE63
 3880 0040 00000000 		.4byte	.LFB64
 3881 0044 2C010000 		.4byte	.LFE64
 3882 0048 00000000 		.4byte	.LFB65
 3883 004c D4000000 		.4byte	.LFE65
 3884 0050 00000000 		.4byte	.LFB66
 3885 0054 4C000000 		.4byte	.LFE66
 3886 0058 00000000 		.4byte	.LFB67
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 92


 3887 005c 54000000 		.4byte	.LFE67
 3888 0060 00000000 		.4byte	.LFB68
 3889 0064 00010000 		.4byte	.LFE68
 3890 0068 00000000 		.4byte	.LFB69
 3891 006c 3C000000 		.4byte	.LFE69
 3892 0070 00000000 		.4byte	.LFB70
 3893 0074 6C000000 		.4byte	.LFE70
 3894 0078 00000000 		.4byte	.LFB71
 3895 007c 34000000 		.4byte	.LFE71
 3896 0080 00000000 		.4byte	.LFB72
 3897 0084 1C000000 		.4byte	.LFE72
 3898 0088 00000000 		.4byte	.LFB73
 3899 008c 44000000 		.4byte	.LFE73
 3900 0090 00000000 		.4byte	.LFB74
 3901 0094 3A000000 		.4byte	.LFE74
 3902 0098 00000000 		.4byte	0
 3903 009c 00000000 		.4byte	0
 3904              		.section	.debug_line,"",%progbits
 3905              	.Ldebug_line0:
 3906 0000 AC040000 		.section	.debug_str,"MS",%progbits,1
 3906      02009001 
 3906      00000201 
 3906      FB0E0D00 
 3906      01010101 
 3907              	.LASF99:
 3908 0000 6C6F7750 		.ascii	"lowPowerIdle\000"
 3908      6F776572 
 3908      49646C65 
 3908      00
 3909              	.LASF90:
 3910 000d 6F757442 		.ascii	"outBufIndex\000"
 3910      7566496E 
 3910      64657800 
 3911              	.LASF41:
 3912 0019 53746F70 		.ascii	"StopAudioComponents\000"
 3912      41756469 
 3912      6F436F6D 
 3912      706F6E65 
 3912      6E747300 
 3913              	.LASF15:
 3914 002d 646F7562 		.ascii	"double\000"
 3914      6C6500
 3915              	.LASF87:
 3916 0034 6F757455 		.ascii	"outUsbCount\000"
 3916      7362436F 
 3916      756E7400 
 3917              	.LASF97:
 3918 0040 696E4275 		.ascii	"inBuffer\000"
 3918      66666572 
 3918      00
 3919              	.LASF86:
 3920 0049 6F75744C 		.ascii	"outLevel\000"
 3920      6576656C 
 3920      00
 3921              	.LASF32:
 3922 0052 696E6465 		.ascii	"index\000"
 3922      7800
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 93


 3923              	.LASF22:
 3924 0058 62617369 		.ascii	"basic_status\000"
 3924      635F7374 
 3924      61747573 
 3924      00
 3925              	.LASF80:
 3926 0065 49325354 		.ascii	"I2STxTd\000"
 3926      78546400 
 3927              	.LASF19:
 3928 006d 73697A65 		.ascii	"sizetype\000"
 3928      74797065 
 3928      00
 3929              	.LASF29:
 3930 0076 44726F6F 		.ascii	"Droop_Filter_Custom_BACKUP_STRUCT\000"
 3930      705F4669 
 3930      6C746572 
 3930      5F437573 
 3930      746F6D5F 
 3931              	.LASF35:
 3932 0098 50726F63 		.ascii	"ProcessAudioIn\000"
 3932      65737341 
 3932      7564696F 
 3932      496E00
 3933              	.LASF59:
 3934 00a7 736F7572 		.ascii	"source\000"
 3934      636500
 3935              	.LASF50:
 3936 00ae 444D415F 		.ascii	"DMA_CICOut_Left_TD\000"
 3936      4349434F 
 3936      75745F4C 
 3936      6566745F 
 3936      544400
 3937              	.LASF49:
 3938 00c1 444D415F 		.ascii	"DMA_CICOut_Left_Channel\000"
 3938      4349434F 
 3938      75745F4C 
 3938      6566745F 
 3938      4368616E 
 3939              	.LASF25:
 3940 00d9 646D6163 		.ascii	"dmac_ch_struct\000"
 3940      5F63685F 
 3940      73747275 
 3940      637400
 3941              	.LASF78:
 3942 00e8 74785464 		.ascii	"txTd\000"
 3942      00
 3943              	.LASF43:
 3944 00ed 6E657746 		.ascii	"newFrequency\000"
 3944      72657175 
 3944      656E6379 
 3944      00
 3945              	.LASF2:
 3946 00fa 73686F72 		.ascii	"short int\000"
 3946      7420696E 
 3946      7400
 3947              	.LASF71:
 3948 0104 696E5261 		.ascii	"inRam\000"
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 94


 3948      6D00
 3949              	.LASF58:
 3950 010a 72656741 		.ascii	"regAddress\000"
 3950      64647265 
 3950      737300
 3951              	.LASF82:
 3952 0115 5553424F 		.ascii	"USBOutTd\000"
 3952      75745464 
 3952      00
 3953              	.LASF12:
 3954 011e 75696E74 		.ascii	"uint16\000"
 3954      313600
 3955              	.LASF36:
 3956 0125 72617465 		.ascii	"rate44_count\000"
 3956      34345F63 
 3956      6F756E74 
 3956      00
 3957              	.LASF68:
 3958 0132 55534246 		.ascii	"USBFS_transferState\000"
 3958      535F7472 
 3958      616E7366 
 3958      65725374 
 3958      61746500 
 3959              	.LASF57:
 3960 0146 44726F6F 		.ascii	"Droop_Filter_ModifiedLoadReg32\000"
 3960      705F4669 
 3960      6C746572 
 3960      5F4D6F64 
 3960      69666965 
 3961              	.LASF11:
 3962 0165 75696E74 		.ascii	"uint8\000"
 3962      3800
 3963              	.LASF101:
 3964 016b 72617465 		.ascii	"rateChangedWhileInactive\000"
 3964      4368616E 
 3964      67656457 
 3964      68696C65 
 3964      496E6163 
 3965              	.LASF98:
 3966 0184 696E4275 		.ascii	"inBufIndex\000"
 3966      66496E64 
 3966      657800
 3967              	.LASF77:
 3968 018f 7278446D 		.ascii	"rxDmaChan\000"
 3968      61436861 
 3968      6E00
 3969              	.LASF64:
 3970 0199 636F6465 		.ascii	"codecInit\000"
 3970      63496E69 
 3970      7400
 3971              	.LASF48:
 3972 01a3 4349434F 		.ascii	"CICOutDMA_ConfigAndStart\000"
 3972      7574444D 
 3972      415F436F 
 3972      6E666967 
 3972      416E6453 
 3973              	.LASF14:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 95


 3974 01bc 666C6F61 		.ascii	"float\000"
 3974      7400
 3975              	.LASF42:
 3976 01c2 48616E64 		.ascii	"HandleSamplingFrequencyChangeRequest\000"
 3976      6C655361 
 3976      6D706C69 
 3976      6E674672 
 3976      65717565 
 3977              	.LASF6:
 3978 01e7 6C6F6E67 		.ascii	"long long int\000"
 3978      206C6F6E 
 3978      6720696E 
 3978      7400
 3979              	.LASF21:
 3980 01f5 61637469 		.ascii	"action\000"
 3980      6F6E00
 3981              	.LASF92:
 3982 01fc 696E506C 		.ascii	"inPlaying\000"
 3982      6179696E 
 3982      6700
 3983              	.LASF39:
 3984 0206 53657443 		.ascii	"SetClockRate\000"
 3984      6C6F636B 
 3984      52617465 
 3984      00
 3985              	.LASF74:
 3986 0213 7478446D 		.ascii	"txDmaChan\000"
 3986      61436861 
 3986      6E00
 3987              	.LASF104:
 3988 021d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3988      4320342E 
 3988      392E3320 
 3988      32303135 
 3988      30333033 
 3989 0250 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3989      20726576 
 3989      6973696F 
 3989      6E203232 
 3989      31323230 
 3990 0283 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3990      66756E63 
 3990      74696F6E 
 3990      2D736563 
 3990      74696F6E 
 3991              	.LASF69:
 3992 02ab 61756469 		.ascii	"audioClkConfigured\000"
 3992      6F436C6B 
 3992      436F6E66 
 3992      69677572 
 3992      656400
 3993              	.LASF96:
 3994 02be 636C6561 		.ascii	"clearInBuffer\000"
 3994      72496E42 
 3994      75666665 
 3994      7200
 3995              	.LASF75:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 96


 3996 02cc 49325354 		.ascii	"I2STxDMAChan\000"
 3996      78444D41 
 3996      4368616E 
 3996      00
 3997              	.LASF31:
 3998 02d9 50726F63 		.ascii	"ProcessAudioOut\000"
 3998      65737341 
 3998      7564696F 
 3998      4F757400 
 3999              	.LASF30:
 4000 02e9 436F6E66 		.ascii	"ConfigureAudioPath\000"
 4000      69677572 
 4000      65417564 
 4000      696F5061 
 4000      746800
 4001              	.LASF24:
 4002 02fc 646D6163 		.ascii	"dmac_ch\000"
 4002      5F636800 
 4003              	.LASF53:
 4004 0304 44726F6F 		.ascii	"Droop_Filter_ModifiedSaveConfig\000"
 4004      705F4669 
 4004      6C746572 
 4004      5F4D6F64 
 4004      69666965 
 4005              	.LASF54:
 4006 0324 44726F6F 		.ascii	"Droop_Filter_ModifiedRestoreConfig\000"
 4006      705F4669 
 4006      6C746572 
 4006      5F4D6F64 
 4006      69666965 
 4007              	.LASF73:
 4008 0347 5553424F 		.ascii	"USBOutDmaChan\000"
 4008      7574446D 
 4008      61436861 
 4008      6E00
 4009              	.LASF72:
 4010 0355 696E436E 		.ascii	"inCnt\000"
 4010      7400
 4011              	.LASF27:
 4012 035b 656E6162 		.ascii	"enableState\000"
 4012      6C655374 
 4012      61746500 
 4013              	.LASF1:
 4014 0367 756E7369 		.ascii	"unsigned char\000"
 4014      676E6564 
 4014      20636861 
 4014      7200
 4015              	.LASF65:
 4016 0375 55534246 		.ascii	"USBFS_frequencyChanged\000"
 4016      535F6672 
 4016      65717565 
 4016      6E637943 
 4016      68616E67 
 4017              	.LASF26:
 4018 038c 5F44726F 		.ascii	"_Droop_Filter_Custom_backupStruct\000"
 4018      6F705F46 
 4018      696C7465 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 97


 4018      725F4375 
 4018      73746F6D 
 4019              	.LASF66:
 4020 03ae 55534246 		.ascii	"USBFS_currentSampleFrequency\000"
 4020      535F6375 
 4020      7272656E 
 4020      7453616D 
 4020      706C6546 
 4021              	.LASF84:
 4022 03cb 72657365 		.ascii	"resetTx\000"
 4022      74547800 
 4023              	.LASF95:
 4024 03d3 696E5573 		.ascii	"inUsbShadow\000"
 4024      62536861 
 4024      646F7700 
 4025              	.LASF51:
 4026 03df 444D415F 		.ascii	"DMA_CICOut_Right_Channel\000"
 4026      4349434F 
 4026      75745F52 
 4026      69676874 
 4026      5F436861 
 4027              	.LASF0:
 4028 03f8 7369676E 		.ascii	"signed char\000"
 4028      65642063 
 4028      68617200 
 4029              	.LASF10:
 4030 0404 696E7433 		.ascii	"int32_t\000"
 4030      325F7400 
 4031              	.LASF7:
 4032 040c 6C6F6E67 		.ascii	"long long unsigned int\000"
 4032      206C6F6E 
 4032      6720756E 
 4032      7369676E 
 4032      65642069 
 4033              	.LASF85:
 4034 0423 6F757450 		.ascii	"outPlaying\000"
 4034      6C617969 
 4034      6E6700
 4035              	.LASF8:
 4036 042e 756E7369 		.ascii	"unsigned int\000"
 4036      676E6564 
 4036      20696E74 
 4036      00
 4037              	.LASF81:
 4038 043b 49325352 		.ascii	"I2SRxTd\000"
 4038      78546400 
 4039              	.LASF56:
 4040 0443 44726F6F 		.ascii	"Droop_Filter_ModifiedWakeup\000"
 4040      705F4669 
 4040      6C746572 
 4040      5F4D6F64 
 4040      69666965 
 4041              	.LASF106:
 4042 045f 433A5C55 		.ascii	"C:\\Users\\lukas\\Desktop\\PioneerKit_P5LP_USB_Audi"
 4042      73657273 
 4042      5C6C756B 
 4042      61735C44 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 98


 4042      65736B74 
 4043 048e 6F2D6D61 		.ascii	"o-master\\PioneerKit_P5LP_USB_Audio.cydsn\000"
 4043      73746572 
 4043      5C50696F 
 4043      6E656572 
 4043      4B69745F 
 4044              	.LASF3:
 4045 04b7 73686F72 		.ascii	"short unsigned int\000"
 4045      7420756E 
 4045      7369676E 
 4045      65642069 
 4045      6E7400
 4046              	.LASF91:
 4047 04ca 72657365 		.ascii	"resetRx\000"
 4047      74527800 
 4048              	.LASF55:
 4049 04d2 44726F6F 		.ascii	"Droop_Filter_ModifiedSleep\000"
 4049      705F4669 
 4049      6C746572 
 4049      5F4D6F64 
 4049      69666965 
 4050              	.LASF16:
 4051 04ed 63686172 		.ascii	"char\000"
 4051      00
 4052              	.LASF4:
 4053 04f2 6C6F6E67 		.ascii	"long int\000"
 4053      20696E74 
 4053      00
 4054              	.LASF105:
 4055 04fb 2E5C4175 		.ascii	".\\AudioControl.c\000"
 4055      64696F43 
 4055      6F6E7472 
 4055      6F6C2E63 
 4055      00
 4056              	.LASF79:
 4057 050c 72785464 		.ascii	"rxTd\000"
 4057      00
 4058              	.LASF20:
 4059 0511 62617369 		.ascii	"basic_cfg\000"
 4059      635F6366 
 4059      6700
 4060              	.LASF45:
 4061 051b 48616E64 		.ascii	"HandleDigitalAudioLowPowerMode\000"
 4061      6C654469 
 4061      67697461 
 4061      6C417564 
 4061      696F4C6F 
 4062              	.LASF88:
 4063 053a 6F757455 		.ascii	"outUsbShadow\000"
 4063      73625368 
 4063      61646F77 
 4063      00
 4064              	.LASF37:
 4065 0547 53746F70 		.ascii	"Stop_I2S_Tx\000"
 4065      5F493253 
 4065      5F547800 
 4066              	.LASF83:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 99


 4067 0553 55534249 		.ascii	"USBInTd\000"
 4067      6E546400 
 4068              	.LASF61:
 4069 055b 44726F6F 		.ascii	"Droop_Filter_Custom_backup\000"
 4069      705F4669 
 4069      6C746572 
 4069      5F437573 
 4069      746F6D5F 
 4070              	.LASF17:
 4071 0576 72656738 		.ascii	"reg8\000"
 4071      00
 4072              	.LASF5:
 4073 057b 6C6F6E67 		.ascii	"long unsigned int\000"
 4073      20756E73 
 4073      69676E65 
 4073      6420696E 
 4073      7400
 4074              	.LASF13:
 4075 058d 75696E74 		.ascii	"uint32\000"
 4075      333200
 4076              	.LASF46:
 4077 0594 55706461 		.ascii	"UpdateAudioStatusUI\000"
 4077      74654175 
 4077      64696F53 
 4077      74617475 
 4077      73554900 
 4078              	.LASF28:
 4079 05a8 73656D61 		.ascii	"sema\000"
 4079      00
 4080              	.LASF23:
 4081 05ad 72657365 		.ascii	"reserved\000"
 4081      72766564 
 4081      00
 4082              	.LASF100:
 4083 05b6 73657452 		.ascii	"setRate\000"
 4083      61746500 
 4084              	.LASF52:
 4085 05be 444D415F 		.ascii	"DMA_CICOut_Right_TD\000"
 4085      4349434F 
 4085      75745F52 
 4085      69676874 
 4085      5F544400 
 4086              	.LASF47:
 4087 05d2 48616E64 		.ascii	"HandleAudioInBuffer\000"
 4087      6C654175 
 4087      64696F49 
 4087      6E427566 
 4087      66657200 
 4088              	.LASF33:
 4089 05e6 636F756E 		.ascii	"count\000"
 4089      7400
 4090              	.LASF9:
 4091 05ec 5F5F696E 		.ascii	"__int32_t\000"
 4091      7433325F 
 4091      7400
 4092              	.LASF94:
 4093 05f6 696E5573 		.ascii	"inUsbCount\000"
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 100


 4093      62436F75 
 4093      6E7400
 4094              	.LASF102:
 4095 0601 636C6F63 		.ascii	"clockSwitchTimer\000"
 4095      6B537769 
 4095      74636854 
 4095      696D6572 
 4095      00
 4096              	.LASF38:
 4097 0612 53746F70 		.ascii	"Stop_PDM_InPath\000"
 4097      5F50444D 
 4097      5F496E50 
 4097      61746800 
 4098              	.LASF103:
 4099 0622 72617465 		.ascii	"rate\000"
 4099      00
 4100              	.LASF89:
 4101 0627 6F757442 		.ascii	"outBuffer\000"
 4101      75666665 
 4101      7200
 4102              	.LASF40:
 4103 0631 53746172 		.ascii	"StartAudioComponents\000"
 4103      74417564 
 4103      696F436F 
 4103      6D706F6E 
 4103      656E7473 
 4104              	.LASF60:
 4105 0646 44726F6F 		.ascii	"Droop_Filter_ModifiedZeroReg32\000"
 4105      705F4669 
 4105      6C746572 
 4105      5F4D6F64 
 4105      69666965 
 4106              	.LASF62:
 4107 0665 44726F6F 		.ascii	"Droop_Filter_acu\000"
 4107      705F4669 
 4107      6C746572 
 4107      5F616375 
 4107      00
 4108              	.LASF63:
 4109 0676 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4109      52784275 
 4109      66666572 
 4109      00
 4110              	.LASF44:
 4111 0683 6E657752 		.ascii	"newRate\000"
 4111      61746500 
 4112              	.LASF34:
 4113 068b 72656D61 		.ascii	"remain\000"
 4113      696E00
 4114              	.LASF76:
 4115 0692 55534249 		.ascii	"USBInDmaChan\000"
 4115      6E446D61 
 4115      4368616E 
 4115      00
 4116              	.LASF67:
 4117 069f 55534246 		.ascii	"USBFS_interfaceSetting\000"
 4117      535F696E 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccSzA3yJ.s 			page 101


 4117      74657266 
 4117      61636553 
 4117      65747469 
 4118              	.LASF93:
 4119 06b6 696E4C65 		.ascii	"inLevel\000"
 4119      76656C00 
 4120              	.LASF18:
 4121 06be 72656733 		.ascii	"reg32\000"
 4121      3200
 4122              	.LASF70:
 4123 06c4 6F757452 		.ascii	"outRam\000"
 4123      616D00
 4124              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

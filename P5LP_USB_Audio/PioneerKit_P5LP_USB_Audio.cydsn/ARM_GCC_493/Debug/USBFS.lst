ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	USBFS_initVar
  19              		.bss
  20              		.type	USBFS_initVar, %object
  21              		.size	USBFS_initVar, 1
  22              	USBFS_initVar:
  23 0000 00       		.space	1
  24              		.comm	USBFS_DmaChan,9,4
  25              		.comm	USBFS_DmaTd,9,4
  26              		.section	.text.USBFS_Start,"ax",%progbits
  27              		.align	2
  28              		.global	USBFS_Start
  29              		.thumb
  30              		.thumb_func
  31              		.type	USBFS_Start, %function
  32              	USBFS_Start:
  33              	.LFB0:
  34              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS.c"
   1:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/USBFS.c **** * File Name: USBFS.c
   3:.\Generated_Source\PSoC5/USBFS.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/USBFS.c **** *
   5:.\Generated_Source\PSoC5/USBFS.c **** * Description:
   6:.\Generated_Source\PSoC5/USBFS.c **** *  API for USBFS Component.
   7:.\Generated_Source\PSoC5/USBFS.c **** *
   8:.\Generated_Source\PSoC5/USBFS.c **** * Note:
   9:.\Generated_Source\PSoC5/USBFS.c **** *  Many of the functions use endpoint number.  RAM arrays are sized with 9
  10:.\Generated_Source\PSoC5/USBFS.c **** *  elements so they are indexed directly by epNumber.  The SIE and ARB
  11:.\Generated_Source\PSoC5/USBFS.c **** *  registers are indexed by variations of epNumber - 1.
  12:.\Generated_Source\PSoC5/USBFS.c **** *
  13:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
  14:.\Generated_Source\PSoC5/USBFS.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  15:.\Generated_Source\PSoC5/USBFS.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:.\Generated_Source\PSoC5/USBFS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:.\Generated_Source\PSoC5/USBFS.c **** * the software package with which this file was provided.
  18:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
  19:.\Generated_Source\PSoC5/USBFS.c **** 
  20:.\Generated_Source\PSoC5/USBFS.c **** #include <CyDmac.h>
  21:.\Generated_Source\PSoC5/USBFS.c **** #include "USBFS.h"
  22:.\Generated_Source\PSoC5/USBFS.c **** #include "USBFS_hid.h"
  23:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA1_REMOVE == 0u)
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 2


  24:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep1_dma.h"
  25:.\Generated_Source\PSoC5/USBFS.c **** #endif   /* End USBFS_DMA1_REMOVE */
  26:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA2_REMOVE == 0u)
  27:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep2_dma.h"
  28:.\Generated_Source\PSoC5/USBFS.c **** #endif   /* End USBFS_DMA2_REMOVE */
  29:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA3_REMOVE == 0u)
  30:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep3_dma.h"
  31:.\Generated_Source\PSoC5/USBFS.c **** #endif   /* End USBFS_DMA3_REMOVE */
  32:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA4_REMOVE == 0u)
  33:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep4_dma.h"
  34:.\Generated_Source\PSoC5/USBFS.c **** #endif   /* End USBFS_DMA4_REMOVE */
  35:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA5_REMOVE == 0u)
  36:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep5_dma.h"
  37:.\Generated_Source\PSoC5/USBFS.c **** #endif   /* End USBFS_DMA5_REMOVE */
  38:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA6_REMOVE == 0u)
  39:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep6_dma.h"
  40:.\Generated_Source\PSoC5/USBFS.c **** #endif   /* End USBFS_DMA6_REMOVE */
  41:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA7_REMOVE == 0u)
  42:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep7_dma.h"
  43:.\Generated_Source\PSoC5/USBFS.c **** #endif   /* End USBFS_DMA7_REMOVE */
  44:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA8_REMOVE == 0u)
  45:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep8_dma.h"
  46:.\Generated_Source\PSoC5/USBFS.c **** #endif   /* End USBFS_DMA8_REMOVE */
  47:.\Generated_Source\PSoC5/USBFS.c **** 
  48:.\Generated_Source\PSoC5/USBFS.c **** 
  49:.\Generated_Source\PSoC5/USBFS.c **** /***************************************
  50:.\Generated_Source\PSoC5/USBFS.c **** * External data references
  51:.\Generated_Source\PSoC5/USBFS.c **** ***************************************/
  52:.\Generated_Source\PSoC5/USBFS.c **** 
  53:.\Generated_Source\PSoC5/USBFS.c **** extern volatile uint8 USBFS_configuration;
  54:.\Generated_Source\PSoC5/USBFS.c **** extern volatile uint8 USBFS_interfaceNumber;
  55:.\Generated_Source\PSoC5/USBFS.c **** extern volatile uint8 USBFS_configurationChanged;
  56:.\Generated_Source\PSoC5/USBFS.c **** extern volatile uint8 USBFS_interfaceSetting[];
  57:.\Generated_Source\PSoC5/USBFS.c **** extern volatile uint8 USBFS_interfaceSetting_last[];
  58:.\Generated_Source\PSoC5/USBFS.c **** extern volatile uint8 USBFS_deviceAddress;
  59:.\Generated_Source\PSoC5/USBFS.c **** extern volatile uint8 USBFS_deviceStatus;
  60:.\Generated_Source\PSoC5/USBFS.c **** extern volatile uint8 USBFS_device;
  61:.\Generated_Source\PSoC5/USBFS.c **** extern volatile uint8 USBFS_transferState;
  62:.\Generated_Source\PSoC5/USBFS.c **** extern volatile uint8 USBFS_lastPacketSize;
  63:.\Generated_Source\PSoC5/USBFS.c **** 
  64:.\Generated_Source\PSoC5/USBFS.c **** extern volatile T_USBFS_EP_CTL_BLOCK USBFS_EP[];
  65:.\Generated_Source\PSoC5/USBFS.c **** 
  66:.\Generated_Source\PSoC5/USBFS.c **** #if defined(USBFS_ENABLE_HID_CLASS)
  67:.\Generated_Source\PSoC5/USBFS.c ****     extern volatile uint8 USBFS_hidProtocol[];
  68:.\Generated_Source\PSoC5/USBFS.c **** #endif /* USBFS_ENABLE_HID_CLASS */
  69:.\Generated_Source\PSoC5/USBFS.c **** 
  70:.\Generated_Source\PSoC5/USBFS.c **** 
  71:.\Generated_Source\PSoC5/USBFS.c **** /***************************************
  72:.\Generated_Source\PSoC5/USBFS.c **** * External function references
  73:.\Generated_Source\PSoC5/USBFS.c **** ***************************************/
  74:.\Generated_Source\PSoC5/USBFS.c **** 
  75:.\Generated_Source\PSoC5/USBFS.c **** CY_ISR_PROTO(USBFS_EP_0_ISR);
  76:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP1_ISR_REMOVE == 0u)
  77:.\Generated_Source\PSoC5/USBFS.c ****     CY_ISR_PROTO(USBFS_EP_1_ISR);
  78:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP1_ISR_REMOVE */
  79:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP2_ISR_REMOVE == 0u)
  80:.\Generated_Source\PSoC5/USBFS.c ****     CY_ISR_PROTO(USBFS_EP_2_ISR);
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 3


  81:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP2_ISR_REMOVE */
  82:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP3_ISR_REMOVE == 0u)
  83:.\Generated_Source\PSoC5/USBFS.c ****     CY_ISR_PROTO(USBFS_EP_3_ISR);
  84:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP3_ISR_REMOVE */
  85:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP4_ISR_REMOVE == 0u)
  86:.\Generated_Source\PSoC5/USBFS.c ****     CY_ISR_PROTO(USBFS_EP_4_ISR);
  87:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP4_ISR_REMOVE */
  88:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP5_ISR_REMOVE == 0u)
  89:.\Generated_Source\PSoC5/USBFS.c ****     CY_ISR_PROTO(USBFS_EP_5_ISR);
  90:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP5_ISR_REMOVE */
  91:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP6_ISR_REMOVE == 0u)
  92:.\Generated_Source\PSoC5/USBFS.c ****     CY_ISR_PROTO(USBFS_EP_6_ISR);
  93:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP6_ISR_REMOVE */
  94:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP7_ISR_REMOVE == 0u)
  95:.\Generated_Source\PSoC5/USBFS.c ****     CY_ISR_PROTO(USBFS_EP_7_ISR);
  96:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP7_ISR_REMOVE */
  97:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP8_ISR_REMOVE == 0u)
  98:.\Generated_Source\PSoC5/USBFS.c ****     CY_ISR_PROTO(USBFS_EP_8_ISR);
  99:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP8_ISR_REMOVE */
 100:.\Generated_Source\PSoC5/USBFS.c **** CY_ISR_PROTO(USBFS_BUS_RESET_ISR);
 101:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_SOF_ISR_REMOVE == 0u)
 102:.\Generated_Source\PSoC5/USBFS.c ****     CY_ISR_PROTO(USBFS_SOF_ISR);
 103:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_SOF_ISR_REMOVE */
 104:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 105:.\Generated_Source\PSoC5/USBFS.c ****     CY_ISR_PROTO(USBFS_ARB_ISR);
 106:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP_MM */
 107:.\Generated_Source\PSoC5/USBFS.c **** 
 108:.\Generated_Source\PSoC5/USBFS.c **** 
 109:.\Generated_Source\PSoC5/USBFS.c **** /***************************************
 110:.\Generated_Source\PSoC5/USBFS.c **** * Global data allocation
 111:.\Generated_Source\PSoC5/USBFS.c **** ***************************************/
 112:.\Generated_Source\PSoC5/USBFS.c **** 
 113:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_initVar = 0u;
 114:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 115:.\Generated_Source\PSoC5/USBFS.c ****     uint8 USBFS_DmaChan[USBFS_MAX_EP];
 116:.\Generated_Source\PSoC5/USBFS.c ****     uint8 USBFS_DmaTd[USBFS_MAX_EP];
 117:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP_MM */
 118:.\Generated_Source\PSoC5/USBFS.c **** 
 119:.\Generated_Source\PSoC5/USBFS.c **** 
 120:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 121:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Start
 122:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 123:.\Generated_Source\PSoC5/USBFS.c **** *
 124:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 125:.\Generated_Source\PSoC5/USBFS.c **** *  This function initialize the USB SIE, arbiter and the
 126:.\Generated_Source\PSoC5/USBFS.c **** *  endpoint APIs, including setting the D+ Pullup
 127:.\Generated_Source\PSoC5/USBFS.c **** *
 128:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 129:.\Generated_Source\PSoC5/USBFS.c **** *  device: Contains the device number of the desired device descriptor.
 130:.\Generated_Source\PSoC5/USBFS.c **** *          The device number can be found in the Device Descriptor Tab of 
 131:.\Generated_Source\PSoC5/USBFS.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 132:.\Generated_Source\PSoC5/USBFS.c **** *          in the "Device Number" field.
 133:.\Generated_Source\PSoC5/USBFS.c **** *  mode: The operating voltage. This determines whether the voltage regulator
 134:.\Generated_Source\PSoC5/USBFS.c **** *        is enabled for 5V operation or if pass through mode is used for 3.3V
 135:.\Generated_Source\PSoC5/USBFS.c **** *        operation. Symbolic names and their associated values are given in the
 136:.\Generated_Source\PSoC5/USBFS.c **** *        following table.
 137:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_3V_OPERATION - Disable voltage regulator and pass-thru
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 4


 138:.\Generated_Source\PSoC5/USBFS.c **** *                                       Vcc for pull-up
 139:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_5V_OPERATION - Enable voltage regulator and use
 140:.\Generated_Source\PSoC5/USBFS.c **** *                                       regulator for pull-up
 141:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_DWR_VDDD_OPERATION - Enable or Disable voltage
 142:.\Generated_Source\PSoC5/USBFS.c **** *                         regulator depend on Vddd Voltage configuration in DWR.
 143:.\Generated_Source\PSoC5/USBFS.c **** *
 144:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 145:.\Generated_Source\PSoC5/USBFS.c **** *   None.
 146:.\Generated_Source\PSoC5/USBFS.c **** *
 147:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
 148:.\Generated_Source\PSoC5/USBFS.c **** *  The USBFS_intiVar variable is used to indicate initial
 149:.\Generated_Source\PSoC5/USBFS.c **** *  configuration of this component. The variable is initialized to zero (0u)
 150:.\Generated_Source\PSoC5/USBFS.c **** *  and set to one (1u) the first time USBFS_Start() is called.
 151:.\Generated_Source\PSoC5/USBFS.c **** *  This allows for component Re-Start without unnecessary re-initialization
 152:.\Generated_Source\PSoC5/USBFS.c **** *  in all subsequent calls to the USBFS_Start() routine.
 153:.\Generated_Source\PSoC5/USBFS.c **** *  If re-initialization of the component is required the variable should be set
 154:.\Generated_Source\PSoC5/USBFS.c **** *  to zero before call of UART_Start() routine, or the user may call
 155:.\Generated_Source\PSoC5/USBFS.c **** *  USBFS_Init() and USBFS_InitComponent() as done
 156:.\Generated_Source\PSoC5/USBFS.c **** *  in the USBFS_Start() routine.
 157:.\Generated_Source\PSoC5/USBFS.c **** *
 158:.\Generated_Source\PSoC5/USBFS.c **** * Side Effects:
 159:.\Generated_Source\PSoC5/USBFS.c **** *   This function will reset all communication states to default.
 160:.\Generated_Source\PSoC5/USBFS.c **** *
 161:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
 162:.\Generated_Source\PSoC5/USBFS.c **** *  No.
 163:.\Generated_Source\PSoC5/USBFS.c **** *
 164:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 165:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_Start(uint8 device, uint8 mode) 
 166:.\Generated_Source\PSoC5/USBFS.c **** {
  35              		.loc 1 166 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 8
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 82B0     		sub	sp, sp, #8
  44              		.cfi_def_cfa_offset 16
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  47 0006 0346     		mov	r3, r0
  48 0008 0A46     		mov	r2, r1
  49 000a FB71     		strb	r3, [r7, #7]
  50 000c 1346     		mov	r3, r2
  51 000e BB71     		strb	r3, [r7, #6]
 167:.\Generated_Source\PSoC5/USBFS.c ****     /* If not Initialized then initialize all required hardware and software */
 168:.\Generated_Source\PSoC5/USBFS.c ****     if(USBFS_initVar == 0u)
  52              		.loc 1 168 0
  53 0010 084B     		ldr	r3, .L3
  54 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  55 0014 002B     		cmp	r3, #0
  56 0016 04D1     		bne	.L2
 169:.\Generated_Source\PSoC5/USBFS.c ****     {
 170:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_Init();
  57              		.loc 1 170 0
  58 0018 FFF7FEFF 		bl	USBFS_Init
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 5


 171:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_initVar = 1u;
  59              		.loc 1 171 0
  60 001c 054B     		ldr	r3, .L3
  61 001e 0122     		movs	r2, #1
  62 0020 1A70     		strb	r2, [r3]
  63              	.L2:
 172:.\Generated_Source\PSoC5/USBFS.c ****     }
 173:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_InitComponent(device, mode);
  64              		.loc 1 173 0
  65 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  66 0024 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  67 0026 1046     		mov	r0, r2
  68 0028 1946     		mov	r1, r3
  69 002a FFF7FEFF 		bl	USBFS_InitComponent
 174:.\Generated_Source\PSoC5/USBFS.c **** }
  70              		.loc 1 174 0
  71 002e 0837     		adds	r7, r7, #8
  72              		.cfi_def_cfa_offset 8
  73 0030 BD46     		mov	sp, r7
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 0032 80BD     		pop	{r7, pc}
  77              	.L4:
  78              		.align	2
  79              	.L3:
  80 0034 00000000 		.word	USBFS_initVar
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USBFS_Start, .-USBFS_Start
  84              		.section	.text.USBFS_Init,"ax",%progbits
  85              		.align	2
  86              		.global	USBFS_Init
  87              		.thumb
  88              		.thumb_func
  89              		.type	USBFS_Init, %function
  90              	USBFS_Init:
  91              	.LFB1:
 175:.\Generated_Source\PSoC5/USBFS.c **** 
 176:.\Generated_Source\PSoC5/USBFS.c **** 
 177:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 178:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Init
 179:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 180:.\Generated_Source\PSoC5/USBFS.c **** *
 181:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 182:.\Generated_Source\PSoC5/USBFS.c **** *  Initialize component's hardware. Usually called in USBFS_Start().
 183:.\Generated_Source\PSoC5/USBFS.c **** *
 184:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 185:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 186:.\Generated_Source\PSoC5/USBFS.c **** *
 187:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 188:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 189:.\Generated_Source\PSoC5/USBFS.c **** *
 190:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
 191:.\Generated_Source\PSoC5/USBFS.c **** *  No.
 192:.\Generated_Source\PSoC5/USBFS.c **** *
 193:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 194:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_Init(void) 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 6


 195:.\Generated_Source\PSoC5/USBFS.c **** {
  92              		.loc 1 195 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 8
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 82B0     		sub	sp, sp, #8
 101              		.cfi_def_cfa_offset 16
 102 0004 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 196:.\Generated_Source\PSoC5/USBFS.c ****     uint8 enableInterrupts;
 197:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 198:.\Generated_Source\PSoC5/USBFS.c ****         uint16 i;
 199:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP_MM != USBFS__EP_MANUAL */
 200:.\Generated_Source\PSoC5/USBFS.c **** 
 201:.\Generated_Source\PSoC5/USBFS.c ****     enableInterrupts = CyEnterCriticalSection();
 104              		.loc 1 201 0
 105 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 106 000a 0346     		mov	r3, r0
 107 000c 7B71     		strb	r3, [r7, #5]
 202:.\Generated_Source\PSoC5/USBFS.c **** 
 203:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block  */
 204:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_ACT_CFG_REG |= USBFS_PM_ACT_EN_FSUSB;
 108              		.loc 1 204 0
 109 000e 5E4A     		ldr	r2, .L8
 110 0010 5D4B     		ldr	r3, .L8
 111 0012 1B78     		ldrb	r3, [r3]
 112 0014 DBB2     		uxtb	r3, r3
 113 0016 43F00103 		orr	r3, r3, #1
 114 001a DBB2     		uxtb	r3, r3
 115 001c 1370     		strb	r3, [r2]
 205:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block for Standby Power Mode */
 206:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG |= USBFS_PM_STBY_EN_FSUSB;
 116              		.loc 1 206 0
 117 001e 5B4A     		ldr	r2, .L8+4
 118 0020 5A4B     		ldr	r3, .L8+4
 119 0022 1B78     		ldrb	r3, [r3]
 120 0024 DBB2     		uxtb	r3, r3
 121 0026 43F00103 		orr	r3, r3, #1
 122 002a DBB2     		uxtb	r3, r3
 123 002c 1370     		strb	r3, [r2]
 207:.\Generated_Source\PSoC5/USBFS.c **** 
 208:.\Generated_Source\PSoC5/USBFS.c ****     #if(CY_PSOC5A)
 209:.\Generated_Source\PSoC5/USBFS.c ****         /* Disable USBIO for TO3 */
 210:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_PM_AVAIL_CR_REG &= ~USBFS_PM_AVAIL_EN_FSUSBIO;
 211:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* End CY_PSOC5A */
 212:.\Generated_Source\PSoC5/USBFS.c **** 
 213:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable core clock */
 214:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_USB_CLK_EN_REG = USBFS_USB_CLK_ENABLE;
 124              		.loc 1 214 0
 125 002e 584B     		ldr	r3, .L8+8
 126 0030 0122     		movs	r2, #1
 127 0032 1A70     		strb	r2, [r3]
 215:.\Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 7


 216:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK;
 128              		.loc 1 216 0
 129 0034 574B     		ldr	r3, .L8+12
 130 0036 0222     		movs	r2, #2
 131 0038 1A70     		strb	r2, [r3]
 217:.\Generated_Source\PSoC5/USBFS.c **** 
 218:.\Generated_Source\PSoC5/USBFS.c ****     #if(CY_PSOC5A)
 219:.\Generated_Source\PSoC5/USBFS.c ****         /* Enable USBIO for TO3 */
 220:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_PM_AVAIL_CR_REG |= USBFS_PM_AVAIL_EN_FSUSBIO;
 221:.\Generated_Source\PSoC5/USBFS.c ****         /* Bus Reset Length, It has correct default value in ES3 */
 222:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_BUS_RST_CNT_REG = USBFS_BUS_RST_COUNT;
 223:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* End CY_PSOC5A */
 224:.\Generated_Source\PSoC5/USBFS.c **** 
 225:.\Generated_Source\PSoC5/USBFS.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE */
 226:.\Generated_Source\PSoC5/USBFS.c ****     #if(!CY_PSOC5A)
 227:.\Generated_Source\PSoC5/USBFS.c ****         /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled 
 228:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_USBIO_CR0_REG &= ~USBFS_USBIO_CR0_TEN;
 132              		.loc 1 228 0
 133 003a 574A     		ldr	r2, .L8+16
 134 003c 564B     		ldr	r3, .L8+16
 135 003e 1B78     		ldrb	r3, [r3]
 136 0040 DBB2     		uxtb	r3, r3
 137 0042 03F07F03 		and	r3, r3, #127
 138 0046 DBB2     		uxtb	r3, r3
 139 0048 1370     		strb	r3, [r2]
 229:.\Generated_Source\PSoC5/USBFS.c ****         CyDelayUs(0);  /*~50ns delay */
 140              		.loc 1 229 0
 141 004a 0020     		movs	r0, #0
 142 004c FFF7FEFF 		bl	CyDelayUs
 230:.\Generated_Source\PSoC5/USBFS.c ****         /* Disable the USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted)
 231:.\Generated_Source\PSoC5/USBFS.c ****         *  high. This will have been set low by the power manger out of reset.
 232:.\Generated_Source\PSoC5/USBFS.c ****         *  Also confirm USBIO pull-up disabled
 233:.\Generated_Source\PSoC5/USBFS.c ****         */
 234:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_PM_USB_CR0_REG &= ~(USBFS_PM_USB_CR0_PD_N |USBFS_PM_USB_CR0_PD_PULLUP_N);
 143              		.loc 1 234 0
 144 0050 524A     		ldr	r2, .L8+20
 145 0052 524B     		ldr	r3, .L8+20
 146 0054 1B78     		ldrb	r3, [r3]
 147 0056 DBB2     		uxtb	r3, r3
 148 0058 23F00603 		bic	r3, r3, #6
 149 005c DBB2     		uxtb	r3, r3
 150 005e 1370     		strb	r3, [r2]
 235:.\Generated_Source\PSoC5/USBFS.c **** 
 236:.\Generated_Source\PSoC5/USBFS.c ****         /* Select iomode to USB mode*/
 237:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_USBIO_CR1_REG &= ~ USBFS_USBIO_CR1_IOMODE;
 151              		.loc 1 237 0
 152 0060 4F4A     		ldr	r2, .L8+24
 153 0062 4F4B     		ldr	r3, .L8+24
 154 0064 1B78     		ldrb	r3, [r3]
 155 0066 DBB2     		uxtb	r3, r3
 156 0068 23F02003 		bic	r3, r3, #32
 157 006c DBB2     		uxtb	r3, r3
 158 006e 1370     		strb	r3, [r2]
 238:.\Generated_Source\PSoC5/USBFS.c **** 
 239:.\Generated_Source\PSoC5/USBFS.c ****         /* Enable the USBIO reference by setting PM.USB_CR0.fsusbio_ref_en.*/
 240:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_REF_EN;
 159              		.loc 1 240 0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 8


 160 0070 4A4A     		ldr	r2, .L8+20
 161 0072 4A4B     		ldr	r3, .L8+20
 162 0074 1B78     		ldrb	r3, [r3]
 163 0076 DBB2     		uxtb	r3, r3
 164 0078 43F00103 		orr	r3, r3, #1
 165 007c DBB2     		uxtb	r3, r3
 166 007e 1370     		strb	r3, [r2]
 241:.\Generated_Source\PSoC5/USBFS.c ****         /* The reference will be available 1 us after the regulator is enabled */
 242:.\Generated_Source\PSoC5/USBFS.c ****         CyDelayUs(1);
 167              		.loc 1 242 0
 168 0080 0120     		movs	r0, #1
 169 0082 FFF7FEFF 		bl	CyDelayUs
 243:.\Generated_Source\PSoC5/USBFS.c ****         /* OR 40us after power restored */
 244:.\Generated_Source\PSoC5/USBFS.c ****         CyDelayUs(40);
 170              		.loc 1 244 0
 171 0086 2820     		movs	r0, #40
 172 0088 FFF7FEFF 		bl	CyDelayUs
 245:.\Generated_Source\PSoC5/USBFS.c ****         /* Ensure the single ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled
 246:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_DM_INP_DIS_REG &= ~USBFS_DM_MASK;
 173              		.loc 1 246 0
 174 008c 454A     		ldr	r2, .L8+28
 175 008e 454B     		ldr	r3, .L8+28
 176 0090 1B78     		ldrb	r3, [r3]
 177 0092 DBB2     		uxtb	r3, r3
 178 0094 03F07F03 		and	r3, r3, #127
 179 0098 DBB2     		uxtb	r3, r3
 180 009a 1370     		strb	r3, [r2]
 247:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_DP_INP_DIS_REG &= ~USBFS_DP_MASK;
 181              		.loc 1 247 0
 182 009c 414A     		ldr	r2, .L8+28
 183 009e 414B     		ldr	r3, .L8+28
 184 00a0 1B78     		ldrb	r3, [r3]
 185 00a2 DBB2     		uxtb	r3, r3
 186 00a4 23F04003 		bic	r3, r3, #64
 187 00a8 DBB2     		uxtb	r3, r3
 188 00aa 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC5/USBFS.c **** 
 249:.\Generated_Source\PSoC5/USBFS.c ****         /* Enable USBIO */
 250:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_N;
 189              		.loc 1 250 0
 190 00ac 3B4A     		ldr	r2, .L8+20
 191 00ae 3B4B     		ldr	r3, .L8+20
 192 00b0 1B78     		ldrb	r3, [r3]
 193 00b2 DBB2     		uxtb	r3, r3
 194 00b4 43F00203 		orr	r3, r3, #2
 195 00b8 DBB2     		uxtb	r3, r3
 196 00ba 1370     		strb	r3, [r2]
 251:.\Generated_Source\PSoC5/USBFS.c ****         CyDelayUs(2);
 197              		.loc 1 251 0
 198 00bc 0220     		movs	r0, #2
 199 00be FFF7FEFF 		bl	CyDelayUs
 252:.\Generated_Source\PSoC5/USBFS.c ****         /* Set the USBIO pull-up enable */
 253:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_PULLUP_N;
 200              		.loc 1 253 0
 201 00c2 364A     		ldr	r2, .L8+20
 202 00c4 354B     		ldr	r3, .L8+20
 203 00c6 1B78     		ldrb	r3, [r3]
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 9


 204 00c8 DBB2     		uxtb	r3, r3
 205 00ca 43F00403 		orr	r3, r3, #4
 206 00ce DBB2     		uxtb	r3, r3
 207 00d0 1370     		strb	r3, [r2]
 254:.\Generated_Source\PSoC5/USBFS.c **** 
 255:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* End !CY_PSOC5A */
 256:.\Generated_Source\PSoC5/USBFS.c **** 
 257:.\Generated_Source\PSoC5/USBFS.c ****     /* Write WAx */
 258:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(&USBFS_ARB_RW1_WA_PTR[0u],     0u);
 208              		.loc 1 258 0
 209 00d2 354B     		ldr	r3, .L8+32
 210 00d4 0022     		movs	r2, #0
 211 00d6 1A70     		strb	r2, [r3]
 259:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(&USBFS_ARB_RW1_WA_MSB_PTR[0u], 0u);
 212              		.loc 1 259 0
 213 00d8 344B     		ldr	r3, .L8+36
 214 00da 0022     		movs	r2, #0
 215 00dc 1A70     		strb	r2, [r3]
 260:.\Generated_Source\PSoC5/USBFS.c **** 
 261:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 262:.\Generated_Source\PSoC5/USBFS.c ****         /* Init transfer descriptor. This will be used to detect the DMA state - initialized or not
 263:.\Generated_Source\PSoC5/USBFS.c ****         for (i = 0u; i < USBFS_MAX_EP; i++)
 216              		.loc 1 263 0
 217 00de 0023     		movs	r3, #0
 218 00e0 FB80     		strh	r3, [r7, #6]	@ movhi
 219 00e2 06E0     		b	.L6
 220              	.L7:
 264:.\Generated_Source\PSoC5/USBFS.c ****         {
 265:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaTd[i] = DMA_INVALID_TD;
 221              		.loc 1 265 0 discriminator 3
 222 00e4 FB88     		ldrh	r3, [r7, #6]
 223 00e6 324A     		ldr	r2, .L8+40
 224 00e8 FF21     		movs	r1, #255
 225 00ea D154     		strb	r1, [r2, r3]
 263:.\Generated_Source\PSoC5/USBFS.c ****         {
 226              		.loc 1 263 0 discriminator 3
 227 00ec FB88     		ldrh	r3, [r7, #6]
 228 00ee 0133     		adds	r3, r3, #1
 229 00f0 FB80     		strh	r3, [r7, #6]	@ movhi
 230              	.L6:
 263:.\Generated_Source\PSoC5/USBFS.c ****         {
 231              		.loc 1 263 0 is_stmt 0 discriminator 1
 232 00f2 FB88     		ldrh	r3, [r7, #6]
 233 00f4 082B     		cmp	r3, #8
 234 00f6 F5D9     		bls	.L7
 266:.\Generated_Source\PSoC5/USBFS.c ****         }
 267:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP_MM != USBFS__EP_MANUAL */
 268:.\Generated_Source\PSoC5/USBFS.c **** 
 269:.\Generated_Source\PSoC5/USBFS.c ****     CyExitCriticalSection(enableInterrupts);
 235              		.loc 1 269 0 is_stmt 1
 236 00f8 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 237 00fa 1846     		mov	r0, r3
 238 00fc FFF7FEFF 		bl	CyExitCriticalSection
 270:.\Generated_Source\PSoC5/USBFS.c **** 
 271:.\Generated_Source\PSoC5/USBFS.c **** 
 272:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the bus reset Interrupt. */
 273:.\Generated_Source\PSoC5/USBFS.c ****     CyIntSetVector(USBFS_BUS_RESET_VECT_NUM,   USBFS_BUS_RESET_ISR);
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 10


 239              		.loc 1 273 0
 240 0100 1720     		movs	r0, #23
 241 0102 2C49     		ldr	r1, .L8+44
 242 0104 FFF7FEFF 		bl	CyIntSetVector
 274:.\Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority(USBFS_BUS_RESET_VECT_NUM, USBFS_BUS_RESET_PRIOR);
 243              		.loc 1 274 0
 244 0108 1720     		movs	r0, #23
 245 010a 0721     		movs	r1, #7
 246 010c FFF7FEFF 		bl	CyIntSetPriority
 275:.\Generated_Source\PSoC5/USBFS.c **** 
 276:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the SOF Interrupt. */
 277:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_SOF_ISR_REMOVE == 0u)
 278:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetVector(USBFS_SOF_VECT_NUM,   USBFS_SOF_ISR);
 247              		.loc 1 278 0
 248 0110 1520     		movs	r0, #21
 249 0112 2949     		ldr	r1, .L8+48
 250 0114 FFF7FEFF 		bl	CyIntSetVector
 279:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_SOF_VECT_NUM, USBFS_SOF_PRIOR);
 251              		.loc 1 279 0
 252 0118 1520     		movs	r0, #21
 253 011a 0721     		movs	r1, #7
 254 011c FFF7FEFF 		bl	CyIntSetPriority
 280:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_SOF_ISR_REMOVE */
 281:.\Generated_Source\PSoC5/USBFS.c **** 
 282:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Control Endpoint Interrupt. */
 283:.\Generated_Source\PSoC5/USBFS.c ****     CyIntSetVector(USBFS_EP_0_VECT_NUM,   USBFS_EP_0_ISR);
 255              		.loc 1 283 0
 256 0120 1820     		movs	r0, #24
 257 0122 2649     		ldr	r1, .L8+52
 258 0124 FFF7FEFF 		bl	CyIntSetVector
 284:.\Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority(USBFS_EP_0_VECT_NUM, USBFS_EP_0_PRIOR);
 259              		.loc 1 284 0
 260 0128 1820     		movs	r0, #24
 261 012a 0721     		movs	r1, #7
 262 012c FFF7FEFF 		bl	CyIntSetPriority
 285:.\Generated_Source\PSoC5/USBFS.c **** 
 286:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 1 Interrupt. */
 287:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP1_ISR_REMOVE == 0u)
 288:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetVector(USBFS_EP_1_VECT_NUM,   USBFS_EP_1_ISR);
 263              		.loc 1 288 0
 264 0130 0020     		movs	r0, #0
 265 0132 2349     		ldr	r1, .L8+56
 266 0134 FFF7FEFF 		bl	CyIntSetVector
 289:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_1_VECT_NUM, USBFS_EP_1_PRIOR);
 267              		.loc 1 289 0
 268 0138 0020     		movs	r0, #0
 269 013a 0721     		movs	r1, #7
 270 013c FFF7FEFF 		bl	CyIntSetPriority
 290:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP1_ISR_REMOVE */
 291:.\Generated_Source\PSoC5/USBFS.c **** 
 292:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 2 Interrupt. */
 293:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP2_ISR_REMOVE == 0u)
 294:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetVector(USBFS_EP_2_VECT_NUM,   USBFS_EP_2_ISR);
 271              		.loc 1 294 0
 272 0140 0120     		movs	r0, #1
 273 0142 2049     		ldr	r1, .L8+60
 274 0144 FFF7FEFF 		bl	CyIntSetVector
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 11


 295:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_2_VECT_NUM, USBFS_EP_2_PRIOR);
 275              		.loc 1 295 0
 276 0148 0120     		movs	r0, #1
 277 014a 0721     		movs	r1, #7
 278 014c FFF7FEFF 		bl	CyIntSetPriority
 296:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP2_ISR_REMOVE */
 297:.\Generated_Source\PSoC5/USBFS.c **** 
 298:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 3 Interrupt. */
 299:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP3_ISR_REMOVE == 0u)
 300:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetVector(USBFS_EP_3_VECT_NUM,   USBFS_EP_3_ISR);
 301:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_3_VECT_NUM, USBFS_EP_3_PRIOR);
 302:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP3_ISR_REMOVE */
 303:.\Generated_Source\PSoC5/USBFS.c **** 
 304:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 4 Interrupt. */
 305:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP4_ISR_REMOVE == 0u)
 306:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetVector(USBFS_EP_4_VECT_NUM,   USBFS_EP_4_ISR);
 279              		.loc 1 306 0
 280 0150 0220     		movs	r0, #2
 281 0152 1D49     		ldr	r1, .L8+64
 282 0154 FFF7FEFF 		bl	CyIntSetVector
 307:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_4_VECT_NUM, USBFS_EP_4_PRIOR);
 283              		.loc 1 307 0
 284 0158 0220     		movs	r0, #2
 285 015a 0721     		movs	r1, #7
 286 015c FFF7FEFF 		bl	CyIntSetPriority
 308:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP4_ISR_REMOVE */
 309:.\Generated_Source\PSoC5/USBFS.c **** 
 310:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 5 Interrupt. */
 311:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP5_ISR_REMOVE == 0u)
 312:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetVector(USBFS_EP_5_VECT_NUM,   USBFS_EP_5_ISR);
 313:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_5_VECT_NUM, USBFS_EP_5_PRIOR);
 314:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP5_ISR_REMOVE */
 315:.\Generated_Source\PSoC5/USBFS.c **** 
 316:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 6 Interrupt. */
 317:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP6_ISR_REMOVE == 0u)
 318:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetVector(USBFS_EP_6_VECT_NUM,   USBFS_EP_6_ISR);
 287              		.loc 1 318 0
 288 0160 0320     		movs	r0, #3
 289 0162 1A49     		ldr	r1, .L8+68
 290 0164 FFF7FEFF 		bl	CyIntSetVector
 319:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_6_VECT_NUM, USBFS_EP_6_PRIOR);
 291              		.loc 1 319 0
 292 0168 0320     		movs	r0, #3
 293 016a 0721     		movs	r1, #7
 294 016c FFF7FEFF 		bl	CyIntSetPriority
 320:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP6_ISR_REMOVE */
 321:.\Generated_Source\PSoC5/USBFS.c **** 
 322:.\Generated_Source\PSoC5/USBFS.c ****      /* Set the Data Endpoint 7 Interrupt. */
 323:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP7_ISR_REMOVE == 0u)
 324:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetVector(USBFS_EP_7_VECT_NUM,   USBFS_EP_7_ISR);
 325:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_7_VECT_NUM, USBFS_EP_7_PRIOR);
 326:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP7_ISR_REMOVE */
 327:.\Generated_Source\PSoC5/USBFS.c **** 
 328:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 8 Interrupt. */
 329:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP8_ISR_REMOVE == 0u)
 330:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetVector(USBFS_EP_8_VECT_NUM,   USBFS_EP_8_ISR);
 331:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_8_VECT_NUM, USBFS_EP_8_PRIOR);
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 12


 332:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP8_ISR_REMOVE */
 333:.\Generated_Source\PSoC5/USBFS.c **** 
 334:.\Generated_Source\PSoC5/USBFS.c ****     #if((USBFS_EP_MM != USBFS__EP_MANUAL) && (USBFS_ARB_ISR_REMOVE == 0u))
 335:.\Generated_Source\PSoC5/USBFS.c ****         /* Set the ARB Interrupt. */
 336:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetVector(USBFS_ARB_VECT_NUM,   USBFS_ARB_ISR);
 295              		.loc 1 336 0
 296 0170 1620     		movs	r0, #22
 297 0172 1749     		ldr	r1, .L8+72
 298 0174 FFF7FEFF 		bl	CyIntSetVector
 337:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_ARB_VECT_NUM, USBFS_ARB_PRIOR);
 299              		.loc 1 337 0
 300 0178 1620     		movs	r0, #22
 301 017a 0021     		movs	r1, #0
 302 017c FFF7FEFF 		bl	CyIntSetPriority
 338:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP_MM != USBFS__EP_MANUAL */
 339:.\Generated_Source\PSoC5/USBFS.c **** 
 340:.\Generated_Source\PSoC5/USBFS.c **** }
 303              		.loc 1 340 0
 304 0180 0837     		adds	r7, r7, #8
 305              		.cfi_def_cfa_offset 8
 306 0182 BD46     		mov	sp, r7
 307              		.cfi_def_cfa_register 13
 308              		@ sp needed
 309 0184 80BD     		pop	{r7, pc}
 310              	.L9:
 311 0186 00BF     		.align	2
 312              	.L8:
 313 0188 A5430040 		.word	1073759141
 314 018c B5430040 		.word	1073759157
 315 0190 9D600040 		.word	1073766557
 316 0194 09600040 		.word	1073766409
 317 0198 10600040 		.word	1073766416
 318 019c 94430040 		.word	1073759124
 319 01a0 12600040 		.word	1073766418
 320 01a4 F8510040 		.word	1073762808
 321 01a8 84600040 		.word	1073766532
 322 01ac 85600040 		.word	1073766533
 323 01b0 00000000 		.word	USBFS_DmaTd
 324 01b4 00000000 		.word	USBFS_BUS_RESET_ISR
 325 01b8 00000000 		.word	USBFS_SOF_ISR
 326 01bc 00000000 		.word	USBFS_EP_0_ISR
 327 01c0 00000000 		.word	USBFS_EP_1_ISR
 328 01c4 00000000 		.word	USBFS_EP_2_ISR
 329 01c8 00000000 		.word	USBFS_EP_4_ISR
 330 01cc 00000000 		.word	USBFS_EP_6_ISR
 331 01d0 00000000 		.word	USBFS_ARB_ISR
 332              		.cfi_endproc
 333              	.LFE1:
 334              		.size	USBFS_Init, .-USBFS_Init
 335              		.section	.text.USBFS_InitComponent,"ax",%progbits
 336              		.align	2
 337              		.global	USBFS_InitComponent
 338              		.thumb
 339              		.thumb_func
 340              		.type	USBFS_InitComponent, %function
 341              	USBFS_InitComponent:
 342              	.LFB2:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 13


 341:.\Generated_Source\PSoC5/USBFS.c **** 
 342:.\Generated_Source\PSoC5/USBFS.c **** 
 343:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 344:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_InitComponent
 345:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 346:.\Generated_Source\PSoC5/USBFS.c **** *
 347:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 348:.\Generated_Source\PSoC5/USBFS.c **** *  Initialize the component, except for the HW which is done one time in
 349:.\Generated_Source\PSoC5/USBFS.c **** *  the Start function.  This function pulls up D+.
 350:.\Generated_Source\PSoC5/USBFS.c **** *
 351:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 352:.\Generated_Source\PSoC5/USBFS.c **** *  device: Contains the device number of the desired device descriptor.
 353:.\Generated_Source\PSoC5/USBFS.c **** *          The device number can be found in the Device Descriptor Tab of 
 354:.\Generated_Source\PSoC5/USBFS.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 355:.\Generated_Source\PSoC5/USBFS.c **** *          in the "Device Number" field.
 356:.\Generated_Source\PSoC5/USBFS.c **** *  mode: The operating voltage. This determines whether the voltage regulator
 357:.\Generated_Source\PSoC5/USBFS.c **** *        is enabled for 5V operation or if pass through mode is used for 3.3V
 358:.\Generated_Source\PSoC5/USBFS.c **** *        operation. Symbolic names and their associated values are given in the
 359:.\Generated_Source\PSoC5/USBFS.c **** *        following table.
 360:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_3V_OPERATION - Disable voltage regulator and pass-thru
 361:.\Generated_Source\PSoC5/USBFS.c **** *                                       Vcc for pull-up
 362:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_5V_OPERATION - Enable voltage regulator and use
 363:.\Generated_Source\PSoC5/USBFS.c **** *                                       regulator for pull-up
 364:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_DWR_VDDD_OPERATION - Enable or Disable voltage
 365:.\Generated_Source\PSoC5/USBFS.c **** *                         regulator depend on Vddd Voltage configuration in DWR.
 366:.\Generated_Source\PSoC5/USBFS.c **** *
 367:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 368:.\Generated_Source\PSoC5/USBFS.c **** *   None.
 369:.\Generated_Source\PSoC5/USBFS.c **** *
 370:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
 371:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_device: Contains the device number of the desired device
 372:.\Generated_Source\PSoC5/USBFS.c **** *       descriptor. The device number can be found in the Device Descriptor Tab 
 373:.\Generated_Source\PSoC5/USBFS.c **** *       of "Configure" dialog, under the settings of desired Device Descriptor,
 374:.\Generated_Source\PSoC5/USBFS.c **** *       in the "Device Number" field.
 375:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_transferState: This variable used by the communication
 376:.\Generated_Source\PSoC5/USBFS.c **** *       functions to handle current transfer state. Initialized to
 377:.\Generated_Source\PSoC5/USBFS.c **** *       TRANS_STATE_IDLE in this API.
 378:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_configuration: Contains current configuration number
 379:.\Generated_Source\PSoC5/USBFS.c **** *       which is set by the Host using SET_CONFIGURATION request.
 380:.\Generated_Source\PSoC5/USBFS.c **** *       Initialized to zero in this API.
 381:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress: Contains current device address. This
 382:.\Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. Host starts to communicate
 383:.\Generated_Source\PSoC5/USBFS.c **** *      to device with address 0 and then set it to whatever value using
 384:.\Generated_Source\PSoC5/USBFS.c **** *      SET_ADDRESS request.
 385:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceStatus: initialized to 0.
 386:.\Generated_Source\PSoC5/USBFS.c **** *       This is two bit variable which contain power status in first bit
 387:.\Generated_Source\PSoC5/USBFS.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 388:.\Generated_Source\PSoC5/USBFS.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 389:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_lastPacketSize initialized to 0;
 390:.\Generated_Source\PSoC5/USBFS.c **** *
 391:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
 392:.\Generated_Source\PSoC5/USBFS.c **** *  No.
 393:.\Generated_Source\PSoC5/USBFS.c **** *
 394:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_InitComponent(uint8 device, uint8 mode) 
 396:.\Generated_Source\PSoC5/USBFS.c **** {
 343              		.loc 1 396 0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 14


 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 16
 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347 0000 80B5     		push	{r7, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 7, -8
 350              		.cfi_offset 14, -4
 351 0002 84B0     		sub	sp, sp, #16
 352              		.cfi_def_cfa_offset 24
 353 0004 00AF     		add	r7, sp, #0
 354              		.cfi_def_cfa_register 7
 355 0006 0346     		mov	r3, r0
 356 0008 0A46     		mov	r2, r1
 357 000a FB71     		strb	r3, [r7, #7]
 358 000c 1346     		mov	r3, r2
 359 000e BB71     		strb	r3, [r7, #6]
 397:.\Generated_Source\PSoC5/USBFS.c ****     /* Initialize _hidProtocol variable to comply with
 398:.\Generated_Source\PSoC5/USBFS.c ****     *  HID 7.2.6 Set_Protocol Request:
 399:.\Generated_Source\PSoC5/USBFS.c ****     *  "When initialized, all devices default to report protocol."
 400:.\Generated_Source\PSoC5/USBFS.c ****     */
 401:.\Generated_Source\PSoC5/USBFS.c ****     #if defined(USBFS_ENABLE_HID_CLASS)
 402:.\Generated_Source\PSoC5/USBFS.c ****         uint8 interface;
 403:.\Generated_Source\PSoC5/USBFS.c **** 
 404:.\Generated_Source\PSoC5/USBFS.c ****         for (interface = 0u; interface < USBFS_MAX_INTERFACES_NUMBER; interface++)
 360              		.loc 1 404 0
 361 0010 0023     		movs	r3, #0
 362 0012 FB73     		strb	r3, [r7, #15]
 363 0014 06E0     		b	.L11
 364              	.L12:
 405:.\Generated_Source\PSoC5/USBFS.c ****         {
 406:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_hidProtocol[interface] = USBFS_PROTOCOL_REPORT;
 365              		.loc 1 406 0 discriminator 3
 366 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 367 0018 2F4A     		ldr	r2, .L18
 368 001a 0121     		movs	r1, #1
 369 001c D154     		strb	r1, [r2, r3]
 404:.\Generated_Source\PSoC5/USBFS.c ****         {
 370              		.loc 1 404 0 discriminator 3
 371 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 372 0020 0133     		adds	r3, r3, #1
 373 0022 FB73     		strb	r3, [r7, #15]
 374              	.L11:
 404:.\Generated_Source\PSoC5/USBFS.c ****         {
 375              		.loc 1 404 0 is_stmt 0 discriminator 1
 376 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 377 0026 032B     		cmp	r3, #3
 378 0028 F5D9     		bls	.L12
 407:.\Generated_Source\PSoC5/USBFS.c ****         }
 408:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* USBFS_ENABLE_HID_CLASS */
 409:.\Generated_Source\PSoC5/USBFS.c **** 
 410:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable Interrupts. */
 411:.\Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_BUS_RESET_VECT_NUM);
 379              		.loc 1 411 0 is_stmt 1
 380 002a 2C4B     		ldr	r3, .L18+4
 381 002c 4FF40002 		mov	r2, #8388608
 382 0030 1A60     		str	r2, [r3]
 412:.\Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_EP_0_VECT_NUM);
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 15


 383              		.loc 1 412 0
 384 0032 2A4B     		ldr	r3, .L18+4
 385 0034 4FF08072 		mov	r2, #16777216
 386 0038 1A60     		str	r2, [r3]
 413:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP1_ISR_REMOVE == 0u)
 414:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_1_VECT_NUM);
 387              		.loc 1 414 0
 388 003a 284B     		ldr	r3, .L18+4
 389 003c 0122     		movs	r2, #1
 390 003e 1A60     		str	r2, [r3]
 415:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP1_ISR_REMOVE */
 416:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP2_ISR_REMOVE == 0u)
 417:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_2_VECT_NUM);
 391              		.loc 1 417 0
 392 0040 264B     		ldr	r3, .L18+4
 393 0042 0222     		movs	r2, #2
 394 0044 1A60     		str	r2, [r3]
 418:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP2_ISR_REMOVE */
 419:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP3_ISR_REMOVE == 0u)
 420:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_3_VECT_NUM);
 421:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP3_ISR_REMOVE */
 422:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP4_ISR_REMOVE == 0u)
 423:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_4_VECT_NUM);
 395              		.loc 1 423 0
 396 0046 254B     		ldr	r3, .L18+4
 397 0048 0422     		movs	r2, #4
 398 004a 1A60     		str	r2, [r3]
 424:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP4_ISR_REMOVE */
 425:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP5_ISR_REMOVE == 0u)
 426:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_5_VECT_NUM);
 427:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP5_ISR_REMOVE */
 428:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP6_ISR_REMOVE == 0u)
 429:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_6_VECT_NUM);
 399              		.loc 1 429 0
 400 004c 234B     		ldr	r3, .L18+4
 401 004e 0822     		movs	r2, #8
 402 0050 1A60     		str	r2, [r3]
 430:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP6_ISR_REMOVE */
 431:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP7_ISR_REMOVE == 0u)
 432:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_7_VECT_NUM);
 433:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP7_ISR_REMOVE */
 434:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP8_ISR_REMOVE == 0u)
 435:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_8_VECT_NUM);
 436:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP8_ISR_REMOVE */
 437:.\Generated_Source\PSoC5/USBFS.c ****     #if((USBFS_EP_MM != USBFS__EP_MANUAL) && (USBFS_ARB_ISR_REMOVE == 0u))
 438:.\Generated_Source\PSoC5/USBFS.c ****         /* usb arb interrupt enable */
 439:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_ARB_INT_EN_REG = USBFS_ARB_INT_MASK;
 403              		.loc 1 439 0
 404 0052 234B     		ldr	r3, .L18+8
 405 0054 2B22     		movs	r2, #43
 406 0056 1A70     		strb	r2, [r3]
 440:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_ARB_VECT_NUM);
 407              		.loc 1 440 0
 408 0058 204B     		ldr	r3, .L18+4
 409 005a 4FF48002 		mov	r2, #4194304
 410 005e 1A60     		str	r2, [r3]
 441:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP_MM != USBFS__EP_MANUAL */
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 16


 442:.\Generated_Source\PSoC5/USBFS.c **** 
 443:.\Generated_Source\PSoC5/USBFS.c ****     /* Arbiter congiguration for DMA transfers */
 444:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 445:.\Generated_Source\PSoC5/USBFS.c **** 
 446:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAMANUAL)
 447:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_CFG_REG = USBFS_ARB_CFG_MANUAL_DMA;
 448:.\Generated_Source\PSoC5/USBFS.c ****         #endif   /* End USBFS_EP_MM == USBFS__EP_DMAMANUAL */
 449:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 450:.\Generated_Source\PSoC5/USBFS.c ****             /*Set cfg cmplt this rises DMA request when the full configuration is done */
 451:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_CFG_REG = USBFS_ARB_CFG_AUTO_DMA | USBFS_ARB_CFG_AUTO_MEM;
 411              		.loc 1 451 0
 412 0060 204B     		ldr	r3, .L18+12
 413 0062 5022     		movs	r2, #80
 414 0064 1A70     		strb	r2, [r3]
 452:.\Generated_Source\PSoC5/USBFS.c ****         #endif   /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 453:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP_MM != USBFS__EP_MANUAL */
 454:.\Generated_Source\PSoC5/USBFS.c **** 
 455:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_transferState = USBFS_TRANS_STATE_IDLE;
 415              		.loc 1 455 0
 416 0066 204B     		ldr	r3, .L18+16
 417 0068 0022     		movs	r2, #0
 418 006a 1A70     		strb	r2, [r3]
 456:.\Generated_Source\PSoC5/USBFS.c **** 
 457:.\Generated_Source\PSoC5/USBFS.c ****     /* USB Locking: Enabled, VRegulator: depend on mode or DWR Voltage configuration*/
 458:.\Generated_Source\PSoC5/USBFS.c ****     switch(mode)
 419              		.loc 1 458 0
 420 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 421 006e 002B     		cmp	r3, #0
 422 0070 02D0     		beq	.L14
 423 0072 012B     		cmp	r3, #1
 424 0074 04D0     		beq	.L15
 425 0076 07E0     		b	.L17
 426              	.L14:
 459:.\Generated_Source\PSoC5/USBFS.c ****     {
 460:.\Generated_Source\PSoC5/USBFS.c ****         case USBFS_3V_OPERATION:
 461:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK;
 427              		.loc 1 461 0
 428 0078 1C4B     		ldr	r3, .L18+20
 429 007a 0222     		movs	r2, #2
 430 007c 1A70     		strb	r2, [r3]
 462:.\Generated_Source\PSoC5/USBFS.c ****             break;
 431              		.loc 1 462 0
 432 007e 07E0     		b	.L16
 433              	.L15:
 463:.\Generated_Source\PSoC5/USBFS.c ****         case USBFS_5V_OPERATION:
 464:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK | USBFS_CR1_REG_ENABLE;
 434              		.loc 1 464 0
 435 0080 1A4B     		ldr	r3, .L18+20
 436 0082 0322     		movs	r2, #3
 437 0084 1A70     		strb	r2, [r3]
 465:.\Generated_Source\PSoC5/USBFS.c ****             break;
 438              		.loc 1 465 0
 439 0086 03E0     		b	.L16
 440              	.L17:
 466:.\Generated_Source\PSoC5/USBFS.c ****         default:   /*USBFS_DWR_VDDD_OPERATION */
 467:.\Generated_Source\PSoC5/USBFS.c ****             #if(USBFS_VDDD_MV < USBFS_3500MV)
 468:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 17


 441              		.loc 1 468 0
 442 0088 184B     		ldr	r3, .L18+20
 443 008a 0222     		movs	r2, #2
 444 008c 1A70     		strb	r2, [r3]
 469:.\Generated_Source\PSoC5/USBFS.c ****             #else
 470:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK | USBFS_CR1_REG_ENABLE;
 471:.\Generated_Source\PSoC5/USBFS.c ****             #endif /* End USBFS_VDDD_MV < USBFS_3500MV */
 472:.\Generated_Source\PSoC5/USBFS.c ****             break;
 445              		.loc 1 472 0
 446 008e 00BF     		nop
 447              	.L16:
 473:.\Generated_Source\PSoC5/USBFS.c ****     }
 474:.\Generated_Source\PSoC5/USBFS.c **** 
 475:.\Generated_Source\PSoC5/USBFS.c ****     /* Record the descriptor selection */
 476:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_device = device;
 448              		.loc 1 476 0
 449 0090 174A     		ldr	r2, .L18+24
 450 0092 FB79     		ldrb	r3, [r7, #7]
 451 0094 1370     		strb	r3, [r2]
 477:.\Generated_Source\PSoC5/USBFS.c **** 
 478:.\Generated_Source\PSoC5/USBFS.c ****     /* Clear all of the component data */
 479:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration = 0u;
 452              		.loc 1 479 0
 453 0096 174B     		ldr	r3, .L18+28
 454 0098 0022     		movs	r2, #0
 455 009a 1A70     		strb	r2, [r3]
 480:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 456              		.loc 1 480 0
 457 009c 164B     		ldr	r3, .L18+32
 458 009e 0022     		movs	r2, #0
 459 00a0 1A70     		strb	r2, [r3]
 481:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 460              		.loc 1 481 0
 461 00a2 164B     		ldr	r3, .L18+36
 462 00a4 0022     		movs	r2, #0
 463 00a6 1A70     		strb	r2, [r3]
 482:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress  = 0u;
 464              		.loc 1 482 0
 465 00a8 154B     		ldr	r3, .L18+40
 466 00aa 0022     		movs	r2, #0
 467 00ac 1A70     		strb	r2, [r3]
 483:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus = 0u;
 468              		.loc 1 483 0
 469 00ae 154B     		ldr	r3, .L18+44
 470 00b0 0022     		movs	r2, #0
 471 00b2 1A70     		strb	r2, [r3]
 484:.\Generated_Source\PSoC5/USBFS.c **** 
 485:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_lastPacketSize = 0u;
 472              		.loc 1 485 0
 473 00b4 144B     		ldr	r3, .L18+48
 474 00b6 0022     		movs	r2, #0
 475 00b8 1A70     		strb	r2, [r3]
 486:.\Generated_Source\PSoC5/USBFS.c **** 
 487:.\Generated_Source\PSoC5/USBFS.c ****     /*  ACK Setup, Stall IN/OUT */
 488:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_EP0_CR_PTR, USBFS_MODE_STALL_IN_OUT);
 476              		.loc 1 488 0
 477 00ba 144B     		ldr	r3, .L18+52
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 18


 478 00bc 0322     		movs	r2, #3
 479 00be 1A70     		strb	r2, [r3]
 489:.\Generated_Source\PSoC5/USBFS.c **** 
 490:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable the SIE with an address 0 */
 491:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_CR0_PTR, USBFS_CR0_ENABLE);
 480              		.loc 1 491 0
 481 00c0 134B     		ldr	r3, .L18+56
 482 00c2 8022     		movs	r2, #128
 483 00c4 1A70     		strb	r2, [r3]
 492:.\Generated_Source\PSoC5/USBFS.c **** 
 493:.\Generated_Source\PSoC5/USBFS.c ****     /* Workarond for PSOC5LP */
 494:.\Generated_Source\PSoC5/USBFS.c ****     CyDelayCycles(1);
 484              		.loc 1 494 0
 485 00c6 0120     		movs	r0, #1
 486 00c8 FFF7FEFF 		bl	CyDelayCycles
 495:.\Generated_Source\PSoC5/USBFS.c ****     
 496:.\Generated_Source\PSoC5/USBFS.c ****     /* Finally, Enable d+ pullup and select iomode to USB mode*/
 497:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_USBIO_CR1_PTR, USBFS_USBIO_CR1_USBPUEN);
 487              		.loc 1 497 0
 488 00cc 114B     		ldr	r3, .L18+60
 489 00ce 0422     		movs	r2, #4
 490 00d0 1A70     		strb	r2, [r3]
 498:.\Generated_Source\PSoC5/USBFS.c **** }
 491              		.loc 1 498 0
 492 00d2 1037     		adds	r7, r7, #16
 493              		.cfi_def_cfa_offset 8
 494 00d4 BD46     		mov	sp, r7
 495              		.cfi_def_cfa_register 13
 496              		@ sp needed
 497 00d6 80BD     		pop	{r7, pc}
 498              	.L19:
 499              		.align	2
 500              	.L18:
 501 00d8 00000000 		.word	USBFS_hidProtocol
 502 00dc 00E100E0 		.word	-536813312
 503 00e0 9E600040 		.word	1073766558
 504 00e4 9C600040 		.word	1073766556
 505 00e8 00000000 		.word	USBFS_transferState
 506 00ec 09600040 		.word	1073766409
 507 00f0 00000000 		.word	USBFS_device
 508 00f4 00000000 		.word	USBFS_configuration
 509 00f8 00000000 		.word	USBFS_interfaceNumber
 510 00fc 00000000 		.word	USBFS_configurationChanged
 511 0100 00000000 		.word	USBFS_deviceAddress
 512 0104 00000000 		.word	USBFS_deviceStatus
 513 0108 00000000 		.word	USBFS_lastPacketSize
 514 010c 28600040 		.word	1073766440
 515 0110 08600040 		.word	1073766408
 516 0114 12600040 		.word	1073766418
 517              		.cfi_endproc
 518              	.LFE2:
 519              		.size	USBFS_InitComponent, .-USBFS_InitComponent
 520              		.section	.text.USBFS_ReInitComponent,"ax",%progbits
 521              		.align	2
 522              		.global	USBFS_ReInitComponent
 523              		.thumb
 524              		.thumb_func
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 19


 525              		.type	USBFS_ReInitComponent, %function
 526              	USBFS_ReInitComponent:
 527              	.LFB3:
 499:.\Generated_Source\PSoC5/USBFS.c **** 
 500:.\Generated_Source\PSoC5/USBFS.c **** 
 501:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 502:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReInitComponent
 503:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 504:.\Generated_Source\PSoC5/USBFS.c **** *
 505:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 506:.\Generated_Source\PSoC5/USBFS.c **** *  This function reinitialize the component configuration and is
 507:.\Generated_Source\PSoC5/USBFS.c **** *  intend to be called from the Reset interrupt.
 508:.\Generated_Source\PSoC5/USBFS.c **** *
 509:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 510:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 511:.\Generated_Source\PSoC5/USBFS.c **** *
 512:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 513:.\Generated_Source\PSoC5/USBFS.c **** *   None.
 514:.\Generated_Source\PSoC5/USBFS.c **** *
 515:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
 516:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_device: Contains the device number of the desired device 
 517:.\Generated_Source\PSoC5/USBFS.c **** *		descriptor. The device number can be found in the Device Descriptor Tab 
 518:.\Generated_Source\PSoC5/USBFS.c **** *       of "Configure" dialog, under the settings of desired Device Descriptor,
 519:.\Generated_Source\PSoC5/USBFS.c **** *       in the "Device Number" field.
 520:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_transferState: This variable used by the communication
 521:.\Generated_Source\PSoC5/USBFS.c **** *       functions to handle current transfer state. Initialized to
 522:.\Generated_Source\PSoC5/USBFS.c **** *       TRANS_STATE_IDLE in this API.
 523:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_configuration: Contains current configuration number
 524:.\Generated_Source\PSoC5/USBFS.c **** *       which is set by the Host using SET_CONFIGURATION request.
 525:.\Generated_Source\PSoC5/USBFS.c **** *       Initialized to zero in this API.
 526:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress: Contains current device address. This
 527:.\Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. Host starts to communicate
 528:.\Generated_Source\PSoC5/USBFS.c **** *      to device with address 0 and then set it to whatever value using
 529:.\Generated_Source\PSoC5/USBFS.c **** *      SET_ADDRESS request.
 530:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceStatus: initialized to 0.
 531:.\Generated_Source\PSoC5/USBFS.c **** *       This is two bit variable which contain power status in first bit
 532:.\Generated_Source\PSoC5/USBFS.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 533:.\Generated_Source\PSoC5/USBFS.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 534:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_lastPacketSize initialized to 0;
 535:.\Generated_Source\PSoC5/USBFS.c **** *
 536:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
 537:.\Generated_Source\PSoC5/USBFS.c **** *  No.
 538:.\Generated_Source\PSoC5/USBFS.c **** *
 539:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 540:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_ReInitComponent() 
 541:.\Generated_Source\PSoC5/USBFS.c **** {
 528              		.loc 1 541 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 8
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              		.cfi_def_cfa_offset 4
 535              		.cfi_offset 7, -4
 536 0002 83B0     		sub	sp, sp, #12
 537              		.cfi_def_cfa_offset 16
 538 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 20


 539              		.cfi_def_cfa_register 7
 542:.\Generated_Source\PSoC5/USBFS.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 543:.\Generated_Source\PSoC5/USBFS.c ****     *  Request: "When initialized, all devices default to report protocol."
 544:.\Generated_Source\PSoC5/USBFS.c ****     */
 545:.\Generated_Source\PSoC5/USBFS.c ****     #if defined(USBFS_ENABLE_HID_CLASS)
 546:.\Generated_Source\PSoC5/USBFS.c ****         uint8 interface;
 547:.\Generated_Source\PSoC5/USBFS.c **** 
 548:.\Generated_Source\PSoC5/USBFS.c ****         for (interface = 0u; interface < USBFS_MAX_INTERFACES_NUMBER; interface++)
 540              		.loc 1 548 0
 541 0006 0023     		movs	r3, #0
 542 0008 FB71     		strb	r3, [r7, #7]
 543 000a 06E0     		b	.L21
 544              	.L22:
 549:.\Generated_Source\PSoC5/USBFS.c ****         {
 550:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_hidProtocol[interface] = USBFS_PROTOCOL_REPORT;
 545              		.loc 1 550 0 discriminator 3
 546 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 547 000e 144A     		ldr	r2, .L23
 548 0010 0121     		movs	r1, #1
 549 0012 D154     		strb	r1, [r2, r3]
 548:.\Generated_Source\PSoC5/USBFS.c ****         {
 550              		.loc 1 548 0 discriminator 3
 551 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 552 0016 0133     		adds	r3, r3, #1
 553 0018 FB71     		strb	r3, [r7, #7]
 554              	.L21:
 548:.\Generated_Source\PSoC5/USBFS.c ****         {
 555              		.loc 1 548 0 is_stmt 0 discriminator 1
 556 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 557 001c 032B     		cmp	r3, #3
 558 001e F5D9     		bls	.L22
 551:.\Generated_Source\PSoC5/USBFS.c ****         }
 552:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* USBFS_ENABLE_HID_CLASS */
 553:.\Generated_Source\PSoC5/USBFS.c **** 
 554:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_transferState = USBFS_TRANS_STATE_IDLE;
 559              		.loc 1 554 0 is_stmt 1
 560 0020 104B     		ldr	r3, .L23+4
 561 0022 0022     		movs	r2, #0
 562 0024 1A70     		strb	r2, [r3]
 555:.\Generated_Source\PSoC5/USBFS.c **** 
 556:.\Generated_Source\PSoC5/USBFS.c ****     /* Clear all of the component data */
 557:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration = 0u;
 563              		.loc 1 557 0
 564 0026 104B     		ldr	r3, .L23+8
 565 0028 0022     		movs	r2, #0
 566 002a 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 567              		.loc 1 558 0
 568 002c 0F4B     		ldr	r3, .L23+12
 569 002e 0022     		movs	r2, #0
 570 0030 1A70     		strb	r2, [r3]
 559:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 571              		.loc 1 559 0
 572 0032 0F4B     		ldr	r3, .L23+16
 573 0034 0022     		movs	r2, #0
 574 0036 1A70     		strb	r2, [r3]
 560:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress  = 0u;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 21


 575              		.loc 1 560 0
 576 0038 0E4B     		ldr	r3, .L23+20
 577 003a 0022     		movs	r2, #0
 578 003c 1A70     		strb	r2, [r3]
 561:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus = 0u;
 579              		.loc 1 561 0
 580 003e 0E4B     		ldr	r3, .L23+24
 581 0040 0022     		movs	r2, #0
 582 0042 1A70     		strb	r2, [r3]
 562:.\Generated_Source\PSoC5/USBFS.c **** 
 563:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_lastPacketSize = 0u;
 583              		.loc 1 563 0
 584 0044 0D4B     		ldr	r3, .L23+28
 585 0046 0022     		movs	r2, #0
 586 0048 1A70     		strb	r2, [r3]
 564:.\Generated_Source\PSoC5/USBFS.c **** 
 565:.\Generated_Source\PSoC5/USBFS.c **** 
 566:.\Generated_Source\PSoC5/USBFS.c ****     /*  ACK Setup, Stall IN/OUT */
 567:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_EP0_CR_PTR, USBFS_MODE_STALL_IN_OUT);
 587              		.loc 1 567 0
 588 004a 0D4B     		ldr	r3, .L23+32
 589 004c 0322     		movs	r2, #3
 590 004e 1A70     		strb	r2, [r3]
 568:.\Generated_Source\PSoC5/USBFS.c **** 
 569:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable the SIE with an address 0 */
 570:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_CR0_PTR, USBFS_CR0_ENABLE);
 591              		.loc 1 570 0
 592 0050 0C4B     		ldr	r3, .L23+36
 593 0052 8022     		movs	r2, #128
 594 0054 1A70     		strb	r2, [r3]
 571:.\Generated_Source\PSoC5/USBFS.c **** 
 572:.\Generated_Source\PSoC5/USBFS.c **** }
 595              		.loc 1 572 0
 596 0056 0C37     		adds	r7, r7, #12
 597              		.cfi_def_cfa_offset 4
 598 0058 BD46     		mov	sp, r7
 599              		.cfi_def_cfa_register 13
 600              		@ sp needed
 601 005a 5DF8047B 		ldr	r7, [sp], #4
 602              		.cfi_restore 7
 603              		.cfi_def_cfa_offset 0
 604 005e 7047     		bx	lr
 605              	.L24:
 606              		.align	2
 607              	.L23:
 608 0060 00000000 		.word	USBFS_hidProtocol
 609 0064 00000000 		.word	USBFS_transferState
 610 0068 00000000 		.word	USBFS_configuration
 611 006c 00000000 		.word	USBFS_interfaceNumber
 612 0070 00000000 		.word	USBFS_configurationChanged
 613 0074 00000000 		.word	USBFS_deviceAddress
 614 0078 00000000 		.word	USBFS_deviceStatus
 615 007c 00000000 		.word	USBFS_lastPacketSize
 616 0080 28600040 		.word	1073766440
 617 0084 08600040 		.word	1073766408
 618              		.cfi_endproc
 619              	.LFE3:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 22


 620              		.size	USBFS_ReInitComponent, .-USBFS_ReInitComponent
 621              		.section	.text.USBFS_Stop,"ax",%progbits
 622              		.align	2
 623              		.global	USBFS_Stop
 624              		.thumb
 625              		.thumb_func
 626              		.type	USBFS_Stop, %function
 627              	USBFS_Stop:
 628              	.LFB4:
 573:.\Generated_Source\PSoC5/USBFS.c **** 
 574:.\Generated_Source\PSoC5/USBFS.c **** 
 575:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 576:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Stop
 577:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 578:.\Generated_Source\PSoC5/USBFS.c **** *
 579:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 580:.\Generated_Source\PSoC5/USBFS.c **** *  This function shuts down the USB function including to release
 581:.\Generated_Source\PSoC5/USBFS.c **** *  the D+ Pullup and disabling the SIE.
 582:.\Generated_Source\PSoC5/USBFS.c **** *
 583:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 584:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 585:.\Generated_Source\PSoC5/USBFS.c **** *
 586:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 587:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 588:.\Generated_Source\PSoC5/USBFS.c **** *
 589:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
 590:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_configuration: Contains current configuration number
 591:.\Generated_Source\PSoC5/USBFS.c **** *       which is set by the Host using SET_CONFIGURATION request.
 592:.\Generated_Source\PSoC5/USBFS.c **** *       Initialized to zero in this API.
 593:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress: Contains current device address. This
 594:.\Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. Host starts to communicate
 595:.\Generated_Source\PSoC5/USBFS.c **** *      to device with address 0 and then set it to whatever value using
 596:.\Generated_Source\PSoC5/USBFS.c **** *      SET_ADDRESS request.
 597:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceStatus: initialized to 0.
 598:.\Generated_Source\PSoC5/USBFS.c **** *       This is two bit variable which contain power status in first bit
 599:.\Generated_Source\PSoC5/USBFS.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 600:.\Generated_Source\PSoC5/USBFS.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 601:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_configurationChanged: This variable is set to one after
 602:.\Generated_Source\PSoC5/USBFS.c **** *       SET_CONFIGURATION request and cleared in this function.
 603:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_intiVar variable is set to zero
 604:.\Generated_Source\PSoC5/USBFS.c **** *
 605:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 606:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_Stop(void) 
 607:.\Generated_Source\PSoC5/USBFS.c **** {
 629              		.loc 1 607 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633 0000 80B5     		push	{r7, lr}
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 00AF     		add	r7, sp, #0
 638              		.cfi_def_cfa_register 7
 608:.\Generated_Source\PSoC5/USBFS.c **** 
 609:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 610:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_Stop_DMA(USBFS_MAX_EP);     /* Stop all DMAs */
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 23


 639              		.loc 1 610 0
 640 0004 0920     		movs	r0, #9
 641 0006 FFF7FEFF 		bl	USBFS_Stop_DMA
 611:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP_MM != USBFS__EP_MANUAL */
 612:.\Generated_Source\PSoC5/USBFS.c **** 
 613:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable the SIE */
 614:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG &= ~USBFS_CR0_ENABLE;
 642              		.loc 1 614 0
 643 000a 234A     		ldr	r2, .L26
 644 000c 224B     		ldr	r3, .L26
 645 000e 1B78     		ldrb	r3, [r3]
 646 0010 DBB2     		uxtb	r3, r3
 647 0012 03F07F03 		and	r3, r3, #127
 648 0016 DBB2     		uxtb	r3, r3
 649 0018 1370     		strb	r3, [r2]
 615:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable the d+ pullup */
 616:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= ~USBFS_USBIO_CR1_USBPUEN;
 650              		.loc 1 616 0
 651 001a 204A     		ldr	r2, .L26+4
 652 001c 1F4B     		ldr	r3, .L26+4
 653 001e 1B78     		ldrb	r3, [r3]
 654 0020 DBB2     		uxtb	r3, r3
 655 0022 23F00403 		bic	r3, r3, #4
 656 0026 DBB2     		uxtb	r3, r3
 657 0028 1370     		strb	r3, [r2]
 617:.\Generated_Source\PSoC5/USBFS.c ****     #if(CY_PSOC5A)
 618:.\Generated_Source\PSoC5/USBFS.c ****         /* Disable USBIO block*/
 619:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_PM_AVAIL_CR_REG &= ~USBFS_PM_AVAIL_EN_FSUSBIO;
 620:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* End CY_PSOC5A */    
 621:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable USB in ACT PM */
 622:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_ACT_CFG_REG &= ~USBFS_PM_ACT_EN_FSUSB;
 658              		.loc 1 622 0
 659 002a 1D4A     		ldr	r2, .L26+8
 660 002c 1C4B     		ldr	r3, .L26+8
 661 002e 1B78     		ldrb	r3, [r3]
 662 0030 DBB2     		uxtb	r3, r3
 663 0032 23F00103 		bic	r3, r3, #1
 664 0036 DBB2     		uxtb	r3, r3
 665 0038 1370     		strb	r3, [r2]
 623:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable USB block for Standby Power Mode */
 624:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG &= ~USBFS_PM_STBY_EN_FSUSB;
 666              		.loc 1 624 0
 667 003a 1A4A     		ldr	r2, .L26+12
 668 003c 194B     		ldr	r3, .L26+12
 669 003e 1B78     		ldrb	r3, [r3]
 670 0040 DBB2     		uxtb	r3, r3
 671 0042 23F00103 		bic	r3, r3, #1
 672 0046 DBB2     		uxtb	r3, r3
 673 0048 1370     		strb	r3, [r2]
 625:.\Generated_Source\PSoC5/USBFS.c **** 
 626:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable the reset and EP interrupts */
 627:.\Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_BUS_RESET_VECT_NUM);
 674              		.loc 1 627 0
 675 004a 174B     		ldr	r3, .L26+16
 676 004c 4FF40002 		mov	r2, #8388608
 677 0050 1A60     		str	r2, [r3]
 628:.\Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_EP_0_VECT_NUM);
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 24


 678              		.loc 1 628 0
 679 0052 154B     		ldr	r3, .L26+16
 680 0054 4FF08072 		mov	r2, #16777216
 681 0058 1A60     		str	r2, [r3]
 629:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP1_ISR_REMOVE == 0u)
 630:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_1_VECT_NUM);
 682              		.loc 1 630 0
 683 005a 134B     		ldr	r3, .L26+16
 684 005c 0122     		movs	r2, #1
 685 005e 1A60     		str	r2, [r3]
 631:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP1_ISR_REMOVE */
 632:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP2_ISR_REMOVE == 0u)
 633:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_2_VECT_NUM);
 686              		.loc 1 633 0
 687 0060 114B     		ldr	r3, .L26+16
 688 0062 0222     		movs	r2, #2
 689 0064 1A60     		str	r2, [r3]
 634:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP2_ISR_REMOVE */
 635:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP3_ISR_REMOVE == 0u)
 636:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_3_VECT_NUM);
 637:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP3_ISR_REMOVE */
 638:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP4_ISR_REMOVE == 0u)
 639:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_4_VECT_NUM);
 690              		.loc 1 639 0
 691 0066 104B     		ldr	r3, .L26+16
 692 0068 0422     		movs	r2, #4
 693 006a 1A60     		str	r2, [r3]
 640:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP4_ISR_REMOVE */
 641:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP5_ISR_REMOVE == 0u)
 642:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_5_VECT_NUM);
 643:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP5_ISR_REMOVE */
 644:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP6_ISR_REMOVE == 0u)
 645:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_6_VECT_NUM);
 694              		.loc 1 645 0
 695 006c 0E4B     		ldr	r3, .L26+16
 696 006e 0822     		movs	r2, #8
 697 0070 1A60     		str	r2, [r3]
 646:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP6_ISR_REMOVE */
 647:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP7_ISR_REMOVE == 0u)
 648:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_7_VECT_NUM);
 649:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP7_ISR_REMOVE */
 650:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP8_ISR_REMOVE == 0u)
 651:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_8_VECT_NUM);
 652:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /* End USBFS_EP8_ISR_REMOVE */
 653:.\Generated_Source\PSoC5/USBFS.c **** 
 654:.\Generated_Source\PSoC5/USBFS.c ****     /* Clear all of the component data */
 655:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration = 0u;
 698              		.loc 1 655 0
 699 0072 0E4B     		ldr	r3, .L26+20
 700 0074 0022     		movs	r2, #0
 701 0076 1A70     		strb	r2, [r3]
 656:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 702              		.loc 1 656 0
 703 0078 0D4B     		ldr	r3, .L26+24
 704 007a 0022     		movs	r2, #0
 705 007c 1A70     		strb	r2, [r3]
 657:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 25


 706              		.loc 1 657 0
 707 007e 0D4B     		ldr	r3, .L26+28
 708 0080 0022     		movs	r2, #0
 709 0082 1A70     		strb	r2, [r3]
 658:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress  = 0u;
 710              		.loc 1 658 0
 711 0084 0C4B     		ldr	r3, .L26+32
 712 0086 0022     		movs	r2, #0
 713 0088 1A70     		strb	r2, [r3]
 659:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus = 0u;
 714              		.loc 1 659 0
 715 008a 0C4B     		ldr	r3, .L26+36
 716 008c 0022     		movs	r2, #0
 717 008e 1A70     		strb	r2, [r3]
 660:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_initVar = 0u;
 718              		.loc 1 660 0
 719 0090 0B4B     		ldr	r3, .L26+40
 720 0092 0022     		movs	r2, #0
 721 0094 1A70     		strb	r2, [r3]
 661:.\Generated_Source\PSoC5/USBFS.c **** 
 662:.\Generated_Source\PSoC5/USBFS.c **** }
 722              		.loc 1 662 0
 723 0096 80BD     		pop	{r7, pc}
 724              	.L27:
 725              		.align	2
 726              	.L26:
 727 0098 08600040 		.word	1073766408
 728 009c 12600040 		.word	1073766418
 729 00a0 A5430040 		.word	1073759141
 730 00a4 B5430040 		.word	1073759157
 731 00a8 80E100E0 		.word	-536813184
 732 00ac 00000000 		.word	USBFS_configuration
 733 00b0 00000000 		.word	USBFS_interfaceNumber
 734 00b4 00000000 		.word	USBFS_configurationChanged
 735 00b8 00000000 		.word	USBFS_deviceAddress
 736 00bc 00000000 		.word	USBFS_deviceStatus
 737 00c0 00000000 		.word	USBFS_initVar
 738              		.cfi_endproc
 739              	.LFE4:
 740              		.size	USBFS_Stop, .-USBFS_Stop
 741              		.section	.text.USBFS_CheckActivity,"ax",%progbits
 742              		.align	2
 743              		.global	USBFS_CheckActivity
 744              		.thumb
 745              		.thumb_func
 746              		.type	USBFS_CheckActivity, %function
 747              	USBFS_CheckActivity:
 748              	.LFB5:
 663:.\Generated_Source\PSoC5/USBFS.c **** 
 664:.\Generated_Source\PSoC5/USBFS.c **** 
 665:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 666:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_CheckActivity
 667:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 668:.\Generated_Source\PSoC5/USBFS.c **** *
 669:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 670:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the activity status of the bus.  Clears the status hardware to
 671:.\Generated_Source\PSoC5/USBFS.c **** *  provide fresh activity status on the next call of this routine.
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 26


 672:.\Generated_Source\PSoC5/USBFS.c **** *
 673:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 674:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 675:.\Generated_Source\PSoC5/USBFS.c **** *
 676:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 677:.\Generated_Source\PSoC5/USBFS.c **** *  1 - If bus activity was detected since the last call to this function
 678:.\Generated_Source\PSoC5/USBFS.c **** *  0 - If bus activity not was detected since the last call to this function
 679:.\Generated_Source\PSoC5/USBFS.c **** *
 680:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_CheckActivity(void) 
 682:.\Generated_Source\PSoC5/USBFS.c **** {
 749              		.loc 1 682 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 754 0000 80B4     		push	{r7}
 755              		.cfi_def_cfa_offset 4
 756              		.cfi_offset 7, -4
 757 0002 83B0     		sub	sp, sp, #12
 758              		.cfi_def_cfa_offset 16
 759 0004 00AF     		add	r7, sp, #0
 760              		.cfi_def_cfa_register 7
 683:.\Generated_Source\PSoC5/USBFS.c ****     uint8 r;
 684:.\Generated_Source\PSoC5/USBFS.c **** 
 685:.\Generated_Source\PSoC5/USBFS.c ****     r = CY_GET_REG8(USBFS_CR1_PTR);
 761              		.loc 1 685 0
 762 0006 0A4B     		ldr	r3, .L30
 763 0008 1B78     		ldrb	r3, [r3]
 764 000a FB71     		strb	r3, [r7, #7]
 686:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_CR1_PTR, (r & ~USBFS_CR1_BUS_ACTIVITY));
 765              		.loc 1 686 0
 766 000c 084A     		ldr	r2, .L30
 767 000e FB79     		ldrb	r3, [r7, #7]
 768 0010 23F00403 		bic	r3, r3, #4
 769 0014 DBB2     		uxtb	r3, r3
 770 0016 1370     		strb	r3, [r2]
 687:.\Generated_Source\PSoC5/USBFS.c **** 
 688:.\Generated_Source\PSoC5/USBFS.c ****     return((r & USBFS_CR1_BUS_ACTIVITY) >> USBFS_CR1_BUS_ACTIVITY_SHIFT);
 771              		.loc 1 688 0
 772 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 773 001a 03F00403 		and	r3, r3, #4
 774 001e 9B08     		lsrs	r3, r3, #2
 775 0020 DBB2     		uxtb	r3, r3
 689:.\Generated_Source\PSoC5/USBFS.c **** }
 776              		.loc 1 689 0
 777 0022 1846     		mov	r0, r3
 778 0024 0C37     		adds	r7, r7, #12
 779              		.cfi_def_cfa_offset 4
 780 0026 BD46     		mov	sp, r7
 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 0028 5DF8047B 		ldr	r7, [sp], #4
 784              		.cfi_restore 7
 785              		.cfi_def_cfa_offset 0
 786 002c 7047     		bx	lr
 787              	.L31:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 27


 788 002e 00BF     		.align	2
 789              	.L30:
 790 0030 09600040 		.word	1073766409
 791              		.cfi_endproc
 792              	.LFE5:
 793              		.size	USBFS_CheckActivity, .-USBFS_CheckActivity
 794              		.section	.text.USBFS_GetConfiguration,"ax",%progbits
 795              		.align	2
 796              		.global	USBFS_GetConfiguration
 797              		.thumb
 798              		.thumb_func
 799              		.type	USBFS_GetConfiguration, %function
 800              	USBFS_GetConfiguration:
 801              	.LFB6:
 690:.\Generated_Source\PSoC5/USBFS.c **** 
 691:.\Generated_Source\PSoC5/USBFS.c **** 
 692:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 693:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetConfiguration
 694:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 695:.\Generated_Source\PSoC5/USBFS.c **** *
 696:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 697:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the current configuration setting
 698:.\Generated_Source\PSoC5/USBFS.c **** *
 699:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 700:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 701:.\Generated_Source\PSoC5/USBFS.c **** *
 702:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 703:.\Generated_Source\PSoC5/USBFS.c **** *  configuration.
 704:.\Generated_Source\PSoC5/USBFS.c **** *
 705:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 706:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetConfiguration(void) 
 707:.\Generated_Source\PSoC5/USBFS.c **** {
 802              		.loc 1 707 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 807 0000 80B4     		push	{r7}
 808              		.cfi_def_cfa_offset 4
 809              		.cfi_offset 7, -4
 810 0002 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 708:.\Generated_Source\PSoC5/USBFS.c ****     return(USBFS_configuration);
 812              		.loc 1 708 0
 813 0004 034B     		ldr	r3, .L34
 814 0006 1B78     		ldrb	r3, [r3]
 815 0008 DBB2     		uxtb	r3, r3
 709:.\Generated_Source\PSoC5/USBFS.c **** }
 816              		.loc 1 709 0
 817 000a 1846     		mov	r0, r3
 818 000c BD46     		mov	sp, r7
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 000e 5DF8047B 		ldr	r7, [sp], #4
 822              		.cfi_restore 7
 823              		.cfi_def_cfa_offset 0
 824 0012 7047     		bx	lr
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 28


 825              	.L35:
 826              		.align	2
 827              	.L34:
 828 0014 00000000 		.word	USBFS_configuration
 829              		.cfi_endproc
 830              	.LFE6:
 831              		.size	USBFS_GetConfiguration, .-USBFS_GetConfiguration
 832              		.section	.text.USBFS_IsConfigurationChanged,"ax",%progbits
 833              		.align	2
 834              		.global	USBFS_IsConfigurationChanged
 835              		.thumb
 836              		.thumb_func
 837              		.type	USBFS_IsConfigurationChanged, %function
 838              	USBFS_IsConfigurationChanged:
 839              	.LFB7:
 710:.\Generated_Source\PSoC5/USBFS.c **** 
 711:.\Generated_Source\PSoC5/USBFS.c **** 
 712:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 713:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_IsConfigurationChanged
 714:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 715:.\Generated_Source\PSoC5/USBFS.c **** *
 716:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 717:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the clear on read configuration state. It is usefull when PC send
 718:.\Generated_Source\PSoC5/USBFS.c **** *  double SET_CONFIGURATION request with same configuration number.
 719:.\Generated_Source\PSoC5/USBFS.c **** *
 720:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 721:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 722:.\Generated_Source\PSoC5/USBFS.c **** *
 723:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 724:.\Generated_Source\PSoC5/USBFS.c **** *  Not zero value when new configuration has been changed, otherwise zero is
 725:.\Generated_Source\PSoC5/USBFS.c **** *  returned.
 726:.\Generated_Source\PSoC5/USBFS.c **** *
 727:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
 728:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_configurationChanged: This variable is set to one after
 729:.\Generated_Source\PSoC5/USBFS.c **** *       SET_CONFIGURATION request and cleared in this function.
 730:.\Generated_Source\PSoC5/USBFS.c **** *
 731:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 732:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_IsConfigurationChanged(void) 
 733:.\Generated_Source\PSoC5/USBFS.c **** {
 840              		.loc 1 733 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 8
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845 0000 80B4     		push	{r7}
 846              		.cfi_def_cfa_offset 4
 847              		.cfi_offset 7, -4
 848 0002 83B0     		sub	sp, sp, #12
 849              		.cfi_def_cfa_offset 16
 850 0004 00AF     		add	r7, sp, #0
 851              		.cfi_def_cfa_register 7
 734:.\Generated_Source\PSoC5/USBFS.c ****     uint8 res = 0u;
 852              		.loc 1 734 0
 853 0006 0023     		movs	r3, #0
 854 0008 FB71     		strb	r3, [r7, #7]
 735:.\Generated_Source\PSoC5/USBFS.c **** 
 736:.\Generated_Source\PSoC5/USBFS.c ****     if(USBFS_configurationChanged != 0u)
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 29


 855              		.loc 1 736 0
 856 000a 094B     		ldr	r3, .L39
 857 000c 1B78     		ldrb	r3, [r3]
 858 000e DBB2     		uxtb	r3, r3
 859 0010 002B     		cmp	r3, #0
 860 0012 05D0     		beq	.L37
 737:.\Generated_Source\PSoC5/USBFS.c ****     {
 738:.\Generated_Source\PSoC5/USBFS.c ****         res = USBFS_configurationChanged;
 861              		.loc 1 738 0
 862 0014 064B     		ldr	r3, .L39
 863 0016 1B78     		ldrb	r3, [r3]
 864 0018 FB71     		strb	r3, [r7, #7]
 739:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_configurationChanged = 0u;
 865              		.loc 1 739 0
 866 001a 054B     		ldr	r3, .L39
 867 001c 0022     		movs	r2, #0
 868 001e 1A70     		strb	r2, [r3]
 869              	.L37:
 740:.\Generated_Source\PSoC5/USBFS.c ****     }
 741:.\Generated_Source\PSoC5/USBFS.c **** 
 742:.\Generated_Source\PSoC5/USBFS.c ****     return(res);
 870              		.loc 1 742 0
 871 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:.\Generated_Source\PSoC5/USBFS.c **** }
 872              		.loc 1 743 0
 873 0022 1846     		mov	r0, r3
 874 0024 0C37     		adds	r7, r7, #12
 875              		.cfi_def_cfa_offset 4
 876 0026 BD46     		mov	sp, r7
 877              		.cfi_def_cfa_register 13
 878              		@ sp needed
 879 0028 5DF8047B 		ldr	r7, [sp], #4
 880              		.cfi_restore 7
 881              		.cfi_def_cfa_offset 0
 882 002c 7047     		bx	lr
 883              	.L40:
 884 002e 00BF     		.align	2
 885              	.L39:
 886 0030 00000000 		.word	USBFS_configurationChanged
 887              		.cfi_endproc
 888              	.LFE7:
 889              		.size	USBFS_IsConfigurationChanged, .-USBFS_IsConfigurationChanged
 890              		.section	.text.USBFS_GetInterfaceSetting,"ax",%progbits
 891              		.align	2
 892              		.global	USBFS_GetInterfaceSetting
 893              		.thumb
 894              		.thumb_func
 895              		.type	USBFS_GetInterfaceSetting, %function
 896              	USBFS_GetInterfaceSetting:
 897              	.LFB8:
 744:.\Generated_Source\PSoC5/USBFS.c **** 
 745:.\Generated_Source\PSoC5/USBFS.c **** 
 746:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetInterfaceSetting
 748:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 749:.\Generated_Source\PSoC5/USBFS.c **** *
 750:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 30


 751:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the alternate setting from current interface
 752:.\Generated_Source\PSoC5/USBFS.c **** *
 753:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 754:.\Generated_Source\PSoC5/USBFS.c **** *  uint8 interfaceNumber, interface number
 755:.\Generated_Source\PSoC5/USBFS.c **** *
 756:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 757:.\Generated_Source\PSoC5/USBFS.c **** *  Alternate setting.
 758:.\Generated_Source\PSoC5/USBFS.c **** *
 759:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC5/USBFS.c **** uint8  USBFS_GetInterfaceSetting(uint8 interfaceNumber)
 761:.\Generated_Source\PSoC5/USBFS.c ****                                                     
 762:.\Generated_Source\PSoC5/USBFS.c **** {
 898              		.loc 1 762 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 8
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 903 0000 80B4     		push	{r7}
 904              		.cfi_def_cfa_offset 4
 905              		.cfi_offset 7, -4
 906 0002 83B0     		sub	sp, sp, #12
 907              		.cfi_def_cfa_offset 16
 908 0004 00AF     		add	r7, sp, #0
 909              		.cfi_def_cfa_register 7
 910 0006 0346     		mov	r3, r0
 911 0008 FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/USBFS.c ****     return(USBFS_interfaceSetting[interfaceNumber]);
 912              		.loc 1 763 0
 913 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 914 000c 044A     		ldr	r2, .L43
 915 000e D35C     		ldrb	r3, [r2, r3]
 916 0010 DBB2     		uxtb	r3, r3
 764:.\Generated_Source\PSoC5/USBFS.c **** }
 917              		.loc 1 764 0
 918 0012 1846     		mov	r0, r3
 919 0014 0C37     		adds	r7, r7, #12
 920              		.cfi_def_cfa_offset 4
 921 0016 BD46     		mov	sp, r7
 922              		.cfi_def_cfa_register 13
 923              		@ sp needed
 924 0018 5DF8047B 		ldr	r7, [sp], #4
 925              		.cfi_restore 7
 926              		.cfi_def_cfa_offset 0
 927 001c 7047     		bx	lr
 928              	.L44:
 929 001e 00BF     		.align	2
 930              	.L43:
 931 0020 00000000 		.word	USBFS_interfaceSetting
 932              		.cfi_endproc
 933              	.LFE8:
 934              		.size	USBFS_GetInterfaceSetting, .-USBFS_GetInterfaceSetting
 935              		.section	.text.USBFS_GetEPState,"ax",%progbits
 936              		.align	2
 937              		.global	USBFS_GetEPState
 938              		.thumb
 939              		.thumb_func
 940              		.type	USBFS_GetEPState, %function
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 31


 941              	USBFS_GetEPState:
 942              	.LFB9:
 765:.\Generated_Source\PSoC5/USBFS.c **** 
 766:.\Generated_Source\PSoC5/USBFS.c **** 
 767:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 768:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPState
 769:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/USBFS.c **** *
 771:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 772:.\Generated_Source\PSoC5/USBFS.c **** *  Returned the state of the requested endpoint.
 773:.\Generated_Source\PSoC5/USBFS.c **** *
 774:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 775:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Endpoint Number
 776:.\Generated_Source\PSoC5/USBFS.c **** *
 777:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 778:.\Generated_Source\PSoC5/USBFS.c **** *  State of the requested endpoint.
 779:.\Generated_Source\PSoC5/USBFS.c **** *
 780:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 781:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetEPState(uint8 epNumber) 
 782:.\Generated_Source\PSoC5/USBFS.c **** {
 943              		.loc 1 782 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 8
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 948 0000 80B4     		push	{r7}
 949              		.cfi_def_cfa_offset 4
 950              		.cfi_offset 7, -4
 951 0002 83B0     		sub	sp, sp, #12
 952              		.cfi_def_cfa_offset 16
 953 0004 00AF     		add	r7, sp, #0
 954              		.cfi_def_cfa_register 7
 955 0006 0346     		mov	r3, r0
 956 0008 FB71     		strb	r3, [r7, #7]
 783:.\Generated_Source\PSoC5/USBFS.c ****     return(USBFS_EP[epNumber].apiEpState);
 957              		.loc 1 783 0
 958 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 959 000c 0649     		ldr	r1, .L47
 960 000e 1346     		mov	r3, r2
 961 0010 5B00     		lsls	r3, r3, #1
 962 0012 1344     		add	r3, r3, r2
 963 0014 9B00     		lsls	r3, r3, #2
 964 0016 0B44     		add	r3, r3, r1
 965 0018 5B78     		ldrb	r3, [r3, #1]
 966 001a DBB2     		uxtb	r3, r3
 784:.\Generated_Source\PSoC5/USBFS.c **** }
 967              		.loc 1 784 0
 968 001c 1846     		mov	r0, r3
 969 001e 0C37     		adds	r7, r7, #12
 970              		.cfi_def_cfa_offset 4
 971 0020 BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 0022 5DF8047B 		ldr	r7, [sp], #4
 975              		.cfi_restore 7
 976              		.cfi_def_cfa_offset 0
 977 0026 7047     		bx	lr
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 32


 978              	.L48:
 979              		.align	2
 980              	.L47:
 981 0028 00000000 		.word	USBFS_EP
 982              		.cfi_endproc
 983              	.LFE9:
 984              		.size	USBFS_GetEPState, .-USBFS_GetEPState
 985              		.section	.text.USBFS_GetEPCount,"ax",%progbits
 986              		.align	2
 987              		.global	USBFS_GetEPCount
 988              		.thumb
 989              		.thumb_func
 990              		.type	USBFS_GetEPCount, %function
 991              	USBFS_GetEPCount:
 992              	.LFB10:
 785:.\Generated_Source\PSoC5/USBFS.c **** 
 786:.\Generated_Source\PSoC5/USBFS.c **** 
 787:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 788:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPCount
 789:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 790:.\Generated_Source\PSoC5/USBFS.c **** *
 791:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 792:.\Generated_Source\PSoC5/USBFS.c **** *  This function supports Data Endpoints only(EP1-EP8).
 793:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the transfer count for the requested endpoint.  The value from
 794:.\Generated_Source\PSoC5/USBFS.c **** *  the count registers includes 2 counts for the two byte checksum of the
 795:.\Generated_Source\PSoC5/USBFS.c **** *  packet.  This function subtracts the two counts.
 796:.\Generated_Source\PSoC5/USBFS.c **** *
 797:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 798:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Data Endpoint Number.
 799:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
 800:.\Generated_Source\PSoC5/USBFS.c **** *
 801:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 802:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the current byte count from the specified endpoin or 0 for an
 803:.\Generated_Source\PSoC5/USBFS.c **** *  invalid endpoint.
 804:.\Generated_Source\PSoC5/USBFS.c **** *
 805:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_GetEPCount(uint8 epNumber) 
 807:.\Generated_Source\PSoC5/USBFS.c **** {
 993              		.loc 1 807 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 16
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997              		@ link register save eliminated.
 998 0000 80B4     		push	{r7}
 999              		.cfi_def_cfa_offset 4
 1000              		.cfi_offset 7, -4
 1001 0002 85B0     		sub	sp, sp, #20
 1002              		.cfi_def_cfa_offset 24
 1003 0004 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 1005 0006 0346     		mov	r3, r0
 1006 0008 FB71     		strb	r3, [r7, #7]
 808:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri;
 809:.\Generated_Source\PSoC5/USBFS.c ****     uint16 count = 0u;
 1007              		.loc 1 809 0
 1008 000a 0023     		movs	r3, #0
 1009 000c FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 33


 810:.\Generated_Source\PSoC5/USBFS.c **** 
 811:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1010              		.loc 1 811 0
 1011 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1012 0010 002B     		cmp	r3, #0
 1013 0012 1CD0     		beq	.L50
 1014              		.loc 1 811 0 is_stmt 0 discriminator 1
 1015 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1016 0016 082B     		cmp	r3, #8
 1017 0018 19D8     		bhi	.L50
 812:.\Generated_Source\PSoC5/USBFS.c ****     {
 813:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1018              		.loc 1 813 0 is_stmt 1
 1019 001a FB79     		ldrb	r3, [r7, #7]
 1020 001c 013B     		subs	r3, r3, #1
 1021 001e DBB2     		uxtb	r3, r3
 1022 0020 1B01     		lsls	r3, r3, #4
 1023 0022 7B73     		strb	r3, [r7, #13]
 814:.\Generated_Source\PSoC5/USBFS.c **** 
 815:.\Generated_Source\PSoC5/USBFS.c ****         count = ((uint16)((CY_GET_REG8(&USBFS_SIE_EP1_CNT0_PTR[ri]) & USBFS_EPX_CNT0_MASK) << 8u)
 1024              		.loc 1 815 0
 1025 0024 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1026 0026 0D4B     		ldr	r3, .L52
 1027 0028 1344     		add	r3, r3, r2
 1028 002a 1B78     		ldrb	r3, [r3]
 1029 002c DBB2     		uxtb	r3, r3
 1030 002e 9BB2     		uxth	r3, r3
 1031 0030 03F00703 		and	r3, r3, #7
 1032 0034 9BB2     		uxth	r3, r3
 1033 0036 1B02     		lsls	r3, r3, #8
 1034 0038 9AB2     		uxth	r2, r3
 816:.\Generated_Source\PSoC5/USBFS.c ****                          | CY_GET_REG8(&USBFS_SIE_EP1_CNT1_PTR[ri]))
 1035              		.loc 1 816 0
 1036 003a 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 1037 003c 084B     		ldr	r3, .L52+4
 1038 003e 0B44     		add	r3, r3, r1
 1039 0040 1B78     		ldrb	r3, [r3]
 1040 0042 DBB2     		uxtb	r3, r3
 815:.\Generated_Source\PSoC5/USBFS.c ****                          | CY_GET_REG8(&USBFS_SIE_EP1_CNT1_PTR[ri]))
 1041              		.loc 1 815 0
 1042 0044 9BB2     		uxth	r3, r3
 1043 0046 1343     		orrs	r3, r3, r2
 1044 0048 9BB2     		uxth	r3, r3
 1045 004a 023B     		subs	r3, r3, #2
 1046 004c FB81     		strh	r3, [r7, #14]	@ movhi
 1047              	.L50:
 817:.\Generated_Source\PSoC5/USBFS.c ****                          - USBFS_EPX_CNTX_CRC_COUNT;
 818:.\Generated_Source\PSoC5/USBFS.c ****     }
 819:.\Generated_Source\PSoC5/USBFS.c ****     return(count);
 1048              		.loc 1 819 0
 1049 004e FB89     		ldrh	r3, [r7, #14]
 820:.\Generated_Source\PSoC5/USBFS.c **** }
 1050              		.loc 1 820 0
 1051 0050 1846     		mov	r0, r3
 1052 0052 1437     		adds	r7, r7, #20
 1053              		.cfi_def_cfa_offset 4
 1054 0054 BD46     		mov	sp, r7
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 34


 1055              		.cfi_def_cfa_register 13
 1056              		@ sp needed
 1057 0056 5DF8047B 		ldr	r7, [sp], #4
 1058              		.cfi_restore 7
 1059              		.cfi_def_cfa_offset 0
 1060 005a 7047     		bx	lr
 1061              	.L53:
 1062              		.align	2
 1063              	.L52:
 1064 005c 0C600040 		.word	1073766412
 1065 0060 0D600040 		.word	1073766413
 1066              		.cfi_endproc
 1067              	.LFE10:
 1068              		.size	USBFS_GetEPCount, .-USBFS_GetEPCount
 1069              		.section	.text.USBFS_InitEP_DMA,"ax",%progbits
 1070              		.align	2
 1071              		.global	USBFS_InitEP_DMA
 1072              		.thumb
 1073              		.thumb_func
 1074              		.type	USBFS_InitEP_DMA, %function
 1075              	USBFS_InitEP_DMA:
 1076              	.LFB11:
 821:.\Generated_Source\PSoC5/USBFS.c **** 
 822:.\Generated_Source\PSoC5/USBFS.c **** 
 823:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 824:.\Generated_Source\PSoC5/USBFS.c **** 
 825:.\Generated_Source\PSoC5/USBFS.c **** 
 826:.\Generated_Source\PSoC5/USBFS.c ****     /*******************************************************************************
 827:.\Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_InitEP_DMA
 828:.\Generated_Source\PSoC5/USBFS.c ****     ********************************************************************************
 829:.\Generated_Source\PSoC5/USBFS.c ****     *
 830:.\Generated_Source\PSoC5/USBFS.c ****     * Summary: This function allocate and initializes a EP DMA chanel to be used
 831:.\Generated_Source\PSoC5/USBFS.c ****     *     by the USBFS_LoadInEP() or USBFS_ReadOutEP() APIs.
 832:.\Generated_Source\PSoC5/USBFS.c ****     *
 833:.\Generated_Source\PSoC5/USBFS.c ****     * Parameters:
 834:.\Generated_Source\PSoC5/USBFS.c ****     *  epNumber: Contains the data endpoint number.
 835:.\Generated_Source\PSoC5/USBFS.c ****     *            Valid values are between 1 and 8.
 836:.\Generated_Source\PSoC5/USBFS.c ****     *  *pData: A pointer to a data array which will be related to the EP transfers
 837:.\Generated_Source\PSoC5/USBFS.c ****     *
 838:.\Generated_Source\PSoC5/USBFS.c ****     * Return:
 839:.\Generated_Source\PSoC5/USBFS.c ****     *  None.
 840:.\Generated_Source\PSoC5/USBFS.c ****     *
 841:.\Generated_Source\PSoC5/USBFS.c ****     * Reentrant:
 842:.\Generated_Source\PSoC5/USBFS.c ****     *  No.
 843:.\Generated_Source\PSoC5/USBFS.c ****     *
 844:.\Generated_Source\PSoC5/USBFS.c ****     *******************************************************************************/
 845:.\Generated_Source\PSoC5/USBFS.c ****     void USBFS_InitEP_DMA(uint8 epNumber, uint8 *pData) 
 846:.\Generated_Source\PSoC5/USBFS.c ****     {
 1077              		.loc 1 846 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 16
 1080              		@ frame_needed = 1, uses_anonymous_args = 0
 1081 0000 90B5     		push	{r4, r7, lr}
 1082              		.cfi_def_cfa_offset 12
 1083              		.cfi_offset 4, -12
 1084              		.cfi_offset 7, -8
 1085              		.cfi_offset 14, -4
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 35


 1086 0002 85B0     		sub	sp, sp, #20
 1087              		.cfi_def_cfa_offset 32
 1088 0004 00AF     		add	r7, sp, #0
 1089              		.cfi_def_cfa_register 7
 1090 0006 0346     		mov	r3, r0
 1091 0008 3960     		str	r1, [r7]
 1092 000a FB71     		strb	r3, [r7, #7]
 847:.\Generated_Source\PSoC5/USBFS.c ****         uint16 src;
 848:.\Generated_Source\PSoC5/USBFS.c ****         uint16 dst;
 849:.\Generated_Source\PSoC5/USBFS.c ****         #if (defined(__C51__))          /* PSoC 3 - Source is Flash */
 850:.\Generated_Source\PSoC5/USBFS.c ****             src = HI16(CYDEV_SRAM_BASE);
 851:.\Generated_Source\PSoC5/USBFS.c ****             dst = HI16(CYDEV_PERIPH_BASE);
 852:.\Generated_Source\PSoC5/USBFS.c ****             pData = pData;
 853:.\Generated_Source\PSoC5/USBFS.c ****         #else                           /* PSoC 5 */
 854:.\Generated_Source\PSoC5/USBFS.c ****             if((USBFS_EP[epNumber].addr & USBFS_DIR_IN) != 0u )
 1093              		.loc 1 854 0
 1094 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1095 000e 3949     		ldr	r1, .L70
 1096 0010 1346     		mov	r3, r2
 1097 0012 5B00     		lsls	r3, r3, #1
 1098 0014 1344     		add	r3, r3, r2
 1099 0016 9B00     		lsls	r3, r3, #2
 1100 0018 0B44     		add	r3, r3, r1
 1101 001a 1B79     		ldrb	r3, [r3, #4]
 1102 001c DBB2     		uxtb	r3, r3
 1103 001e DBB2     		uxtb	r3, r3
 1104 0020 5BB2     		sxtb	r3, r3
 1105 0022 002B     		cmp	r3, #0
 1106 0024 06DA     		bge	.L55
 855:.\Generated_Source\PSoC5/USBFS.c ****             {   /* for the IN EP source is the flash memory buffer */
 856:.\Generated_Source\PSoC5/USBFS.c ****                 src = HI16(pData);
 1107              		.loc 1 856 0
 1108 0026 3B68     		ldr	r3, [r7]
 1109 0028 1B0C     		lsrs	r3, r3, #16
 1110 002a FB81     		strh	r3, [r7, #14]	@ movhi
 857:.\Generated_Source\PSoC5/USBFS.c ****                 dst = HI16(CYDEV_PERIPH_BASE);
 1111              		.loc 1 857 0
 1112 002c 4FF48043 		mov	r3, #16384
 1113 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 1114 0032 05E0     		b	.L56
 1115              	.L55:
 858:.\Generated_Source\PSoC5/USBFS.c ****             }
 859:.\Generated_Source\PSoC5/USBFS.c ****             else
 860:.\Generated_Source\PSoC5/USBFS.c ****             {   /* for the OUT EP source is the SIE register */
 861:.\Generated_Source\PSoC5/USBFS.c ****                 src = HI16(CYDEV_PERIPH_BASE);
 1116              		.loc 1 861 0
 1117 0034 4FF48043 		mov	r3, #16384
 1118 0038 FB81     		strh	r3, [r7, #14]	@ movhi
 862:.\Generated_Source\PSoC5/USBFS.c ****                 dst = HI16(pData);
 1119              		.loc 1 862 0
 1120 003a 3B68     		ldr	r3, [r7]
 1121 003c 1B0C     		lsrs	r3, r3, #16
 1122 003e BB81     		strh	r3, [r7, #12]	@ movhi
 1123              	.L56:
 863:.\Generated_Source\PSoC5/USBFS.c ****             }
 864:.\Generated_Source\PSoC5/USBFS.c ****         #endif  /* End C51 */
 865:.\Generated_Source\PSoC5/USBFS.c ****         switch(epNumber)
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 36


 1124              		.loc 1 865 0
 1125 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1126 0042 013B     		subs	r3, r3, #1
 1127 0044 072B     		cmp	r3, #7
 1128 0046 43D8     		bhi	.L69
 1129 0048 01A2     		adr	r2, .L59
 1130 004a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1131 004e 00BF     		.p2align 2
 1132              	.L59:
 1133 0050 71000000 		.word	.L58+1
 1134 0054 89000000 		.word	.L60+1
 1135 0058 D1000000 		.word	.L69+1
 1136 005c A1000000 		.word	.L62+1
 1137 0060 D1000000 		.word	.L69+1
 1138 0064 B9000000 		.word	.L64+1
 1139 0068 D1000000 		.word	.L69+1
 1140 006c D1000000 		.word	.L69+1
 1141              		.p2align 1
 1142              	.L58:
 866:.\Generated_Source\PSoC5/USBFS.c ****         {
 867:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP1:
 868:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA1_REMOVE == 0u)
 869:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep1_DmaInitialize(
 1143              		.loc 1 869 0
 1144 0070 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1145 0072 FA89     		ldrh	r2, [r7, #14]
 1146 0074 BB89     		ldrh	r3, [r7, #12]
 1147 0076 2020     		movs	r0, #32
 1148 0078 0121     		movs	r1, #1
 1149 007a FFF7FEFF 		bl	USBFS_ep1_DmaInitialize
 1150 007e 0346     		mov	r3, r0
 1151 0080 1A46     		mov	r2, r3
 1152 0082 1D4B     		ldr	r3, .L70+4
 1153 0084 1A55     		strb	r2, [r3, r4]
 870:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 871:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /* End USBFS_DMA1_REMOVE */
 872:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 1154              		.loc 1 872 0
 1155 0086 24E0     		b	.L67
 1156              	.L60:
 873:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP2:
 874:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA2_REMOVE == 0u)
 875:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep2_DmaInitialize(
 1157              		.loc 1 875 0
 1158 0088 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1159 008a FA89     		ldrh	r2, [r7, #14]
 1160 008c BB89     		ldrh	r3, [r7, #12]
 1161 008e 2020     		movs	r0, #32
 1162 0090 0121     		movs	r1, #1
 1163 0092 FFF7FEFF 		bl	USBFS_ep2_DmaInitialize
 1164 0096 0346     		mov	r3, r0
 1165 0098 1A46     		mov	r2, r3
 1166 009a 174B     		ldr	r3, .L70+4
 1167 009c 1A55     		strb	r2, [r3, r4]
 876:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 877:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /* End USBFS_DMA2_REMOVE */
 878:.\Generated_Source\PSoC5/USBFS.c ****                 break;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 37


 1168              		.loc 1 878 0
 1169 009e 18E0     		b	.L67
 1170              	.L62:
 879:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP3:
 880:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA3_REMOVE == 0u)
 881:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep3_DmaInitialize(
 882:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 883:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /* End USBFS_DMA3_REMOVE */
 884:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 885:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP4:
 886:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA4_REMOVE == 0u)
 887:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep4_DmaInitialize(
 1171              		.loc 1 887 0
 1172 00a0 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1173 00a2 FA89     		ldrh	r2, [r7, #14]
 1174 00a4 BB89     		ldrh	r3, [r7, #12]
 1175 00a6 2020     		movs	r0, #32
 1176 00a8 0121     		movs	r1, #1
 1177 00aa FFF7FEFF 		bl	USBFS_ep4_DmaInitialize
 1178 00ae 0346     		mov	r3, r0
 1179 00b0 1A46     		mov	r2, r3
 1180 00b2 114B     		ldr	r3, .L70+4
 1181 00b4 1A55     		strb	r2, [r3, r4]
 888:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 889:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /* End USBFS_DMA4_REMOVE */
 890:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 1182              		.loc 1 890 0
 1183 00b6 0CE0     		b	.L67
 1184              	.L64:
 891:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP5:
 892:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA5_REMOVE == 0u)
 893:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep5_DmaInitialize(
 894:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 895:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /* End USBFS_DMA5_REMOVE */
 896:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 897:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP6:
 898:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA6_REMOVE == 0u)
 899:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep6_DmaInitialize(
 1185              		.loc 1 899 0
 1186 00b8 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1187 00ba FA89     		ldrh	r2, [r7, #14]
 1188 00bc BB89     		ldrh	r3, [r7, #12]
 1189 00be 2020     		movs	r0, #32
 1190 00c0 0121     		movs	r1, #1
 1191 00c2 FFF7FEFF 		bl	USBFS_ep6_DmaInitialize
 1192 00c6 0346     		mov	r3, r0
 1193 00c8 1A46     		mov	r2, r3
 1194 00ca 0B4B     		ldr	r3, .L70+4
 1195 00cc 1A55     		strb	r2, [r3, r4]
 900:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 901:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /* End USBFS_DMA6_REMOVE */
 902:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 1196              		.loc 1 902 0
 1197 00ce 00E0     		b	.L67
 1198              	.L69:
 903:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP7:
 904:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA7_REMOVE == 0u)
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 38


 905:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep7_DmaInitialize(
 906:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 907:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /* End USBFS_DMA7_REMOVE */
 908:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 909:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP8:
 910:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA8_REMOVE == 0u)
 911:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep8_DmaInitialize(
 912:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 913:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /* End USBFS_DMA8_REMOVE */
 914:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 915:.\Generated_Source\PSoC5/USBFS.c ****             default:
 916:.\Generated_Source\PSoC5/USBFS.c ****                 /* Do not support EP0 DMA transfers */
 917:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 1199              		.loc 1 917 0
 1200 00d0 00BF     		nop
 1201              	.L67:
 918:.\Generated_Source\PSoC5/USBFS.c ****         }
 919:.\Generated_Source\PSoC5/USBFS.c ****         if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1202              		.loc 1 919 0
 1203 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1204 00d4 002B     		cmp	r3, #0
 1205 00d6 09D0     		beq	.L54
 1206              		.loc 1 919 0 is_stmt 0 discriminator 1
 1207 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1208 00da 082B     		cmp	r3, #8
 1209 00dc 06D8     		bhi	.L54
 920:.\Generated_Source\PSoC5/USBFS.c ****         {
 921:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaTd[epNumber] = CyDmaTdAllocate();
 1210              		.loc 1 921 0 is_stmt 1
 1211 00de FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1212 00e0 FFF7FEFF 		bl	CyDmaTdAllocate
 1213 00e4 0346     		mov	r3, r0
 1214 00e6 1A46     		mov	r2, r3
 1215 00e8 044B     		ldr	r3, .L70+8
 1216 00ea 1A55     		strb	r2, [r3, r4]
 1217              	.L54:
 922:.\Generated_Source\PSoC5/USBFS.c ****         }
 923:.\Generated_Source\PSoC5/USBFS.c ****     }
 1218              		.loc 1 923 0
 1219 00ec 1437     		adds	r7, r7, #20
 1220              		.cfi_def_cfa_offset 12
 1221 00ee BD46     		mov	sp, r7
 1222              		.cfi_def_cfa_register 13
 1223              		@ sp needed
 1224 00f0 90BD     		pop	{r4, r7, pc}
 1225              	.L71:
 1226 00f2 00BF     		.align	2
 1227              	.L70:
 1228 00f4 00000000 		.word	USBFS_EP
 1229 00f8 00000000 		.word	USBFS_DmaChan
 1230 00fc 00000000 		.word	USBFS_DmaTd
 1231              		.cfi_endproc
 1232              	.LFE11:
 1233              		.size	USBFS_InitEP_DMA, .-USBFS_InitEP_DMA
 1234              		.section	.text.USBFS_Stop_DMA,"ax",%progbits
 1235              		.align	2
 1236              		.global	USBFS_Stop_DMA
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 39


 1237              		.thumb
 1238              		.thumb_func
 1239              		.type	USBFS_Stop_DMA, %function
 1240              	USBFS_Stop_DMA:
 1241              	.LFB12:
 924:.\Generated_Source\PSoC5/USBFS.c **** 
 925:.\Generated_Source\PSoC5/USBFS.c **** 
 926:.\Generated_Source\PSoC5/USBFS.c ****     /*******************************************************************************
 927:.\Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_Stop_DMA
 928:.\Generated_Source\PSoC5/USBFS.c ****     ********************************************************************************
 929:.\Generated_Source\PSoC5/USBFS.c ****     *
 930:.\Generated_Source\PSoC5/USBFS.c ****     * Summary: Stops and free DMA
 931:.\Generated_Source\PSoC5/USBFS.c ****     *
 932:.\Generated_Source\PSoC5/USBFS.c ****     * Parameters:
 933:.\Generated_Source\PSoC5/USBFS.c ****     *  epNumber: Contains the data endpoint number or
 934:.\Generated_Source\PSoC5/USBFS.c ****     *           USBFS_MAX_EP to stop all DMAs
 935:.\Generated_Source\PSoC5/USBFS.c ****     *
 936:.\Generated_Source\PSoC5/USBFS.c ****     * Return:
 937:.\Generated_Source\PSoC5/USBFS.c ****     *  None.
 938:.\Generated_Source\PSoC5/USBFS.c ****     *
 939:.\Generated_Source\PSoC5/USBFS.c ****     * Reentrant:
 940:.\Generated_Source\PSoC5/USBFS.c ****     *  No.
 941:.\Generated_Source\PSoC5/USBFS.c ****     *
 942:.\Generated_Source\PSoC5/USBFS.c ****     *******************************************************************************/
 943:.\Generated_Source\PSoC5/USBFS.c ****     void USBFS_Stop_DMA(uint8 epNumber) 
 944:.\Generated_Source\PSoC5/USBFS.c ****     {
 1242              		.loc 1 944 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 16
 1245              		@ frame_needed = 1, uses_anonymous_args = 0
 1246 0000 80B5     		push	{r7, lr}
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 7, -8
 1249              		.cfi_offset 14, -4
 1250 0002 84B0     		sub	sp, sp, #16
 1251              		.cfi_def_cfa_offset 24
 1252 0004 00AF     		add	r7, sp, #0
 1253              		.cfi_def_cfa_register 7
 1254 0006 0346     		mov	r3, r0
 1255 0008 FB71     		strb	r3, [r7, #7]
 945:.\Generated_Source\PSoC5/USBFS.c ****         uint8 i;
 946:.\Generated_Source\PSoC5/USBFS.c ****         i = (epNumber < USBFS_MAX_EP) ? epNumber : USBFS_EP1;
 1256              		.loc 1 946 0
 1257 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1258 000c 082B     		cmp	r3, #8
 1259 000e 01D8     		bhi	.L73
 1260              		.loc 1 946 0 is_stmt 0 discriminator 1
 1261 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1262 0012 00E0     		b	.L74
 1263              	.L73:
 1264              		.loc 1 946 0 discriminator 2
 1265 0014 0123     		movs	r3, #1
 1266              	.L74:
 1267              		.loc 1 946 0 discriminator 4
 1268 0016 FB73     		strb	r3, [r7, #15]
 1269              	.L77:
 947:.\Generated_Source\PSoC5/USBFS.c ****         do
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 40


 948:.\Generated_Source\PSoC5/USBFS.c ****         {
 949:.\Generated_Source\PSoC5/USBFS.c ****             if(USBFS_DmaTd[i] != DMA_INVALID_TD)
 1270              		.loc 1 949 0 is_stmt 1
 1271 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1272 001a 104A     		ldr	r2, .L78
 1273 001c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1274 001e FF2B     		cmp	r3, #255
 1275 0020 0FD0     		beq	.L75
 950:.\Generated_Source\PSoC5/USBFS.c ****             {
 951:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaChDisable(USBFS_DmaChan[i]);
 1276              		.loc 1 951 0
 1277 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1278 0024 0E4A     		ldr	r2, .L78+4
 1279 0026 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1280 0028 1846     		mov	r0, r3
 1281 002a FFF7FEFF 		bl	CyDmaChDisable
 952:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaTdFree(USBFS_DmaTd[i]);
 1282              		.loc 1 952 0
 1283 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1284 0030 0A4A     		ldr	r2, .L78
 1285 0032 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1286 0034 1846     		mov	r0, r3
 1287 0036 FFF7FEFF 		bl	CyDmaTdFree
 953:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaTd[i] = DMA_INVALID_TD;
 1288              		.loc 1 953 0
 1289 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1290 003c 074A     		ldr	r2, .L78
 1291 003e FF21     		movs	r1, #255
 1292 0040 D154     		strb	r1, [r2, r3]
 1293              	.L75:
 954:.\Generated_Source\PSoC5/USBFS.c ****             }
 955:.\Generated_Source\PSoC5/USBFS.c ****             i++;
 1294              		.loc 1 955 0
 1295 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1296 0044 0133     		adds	r3, r3, #1
 1297 0046 FB73     		strb	r3, [r7, #15]
 956:.\Generated_Source\PSoC5/USBFS.c ****         }while((i < USBFS_MAX_EP) && (epNumber == USBFS_MAX_EP));
 1298              		.loc 1 956 0
 1299 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1300 004a 082B     		cmp	r3, #8
 1301 004c 02D8     		bhi	.L72
 1302              		.loc 1 956 0 is_stmt 0 discriminator 1
 1303 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1304 0050 092B     		cmp	r3, #9
 1305 0052 E1D0     		beq	.L77
 1306              	.L72:
 957:.\Generated_Source\PSoC5/USBFS.c ****     }
 1307              		.loc 1 957 0 is_stmt 1
 1308 0054 1037     		adds	r7, r7, #16
 1309              		.cfi_def_cfa_offset 8
 1310 0056 BD46     		mov	sp, r7
 1311              		.cfi_def_cfa_register 13
 1312              		@ sp needed
 1313 0058 80BD     		pop	{r7, pc}
 1314              	.L79:
 1315 005a 00BF     		.align	2
 1316              	.L78:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 41


 1317 005c 00000000 		.word	USBFS_DmaTd
 1318 0060 00000000 		.word	USBFS_DmaChan
 1319              		.cfi_endproc
 1320              	.LFE12:
 1321              		.size	USBFS_Stop_DMA, .-USBFS_Stop_DMA
 1322              		.section	.text.USBFS_LoadInEP,"ax",%progbits
 1323              		.align	2
 1324              		.global	USBFS_LoadInEP
 1325              		.thumb
 1326              		.thumb_func
 1327              		.type	USBFS_LoadInEP, %function
 1328              	USBFS_LoadInEP:
 1329              	.LFB13:
 958:.\Generated_Source\PSoC5/USBFS.c **** 
 959:.\Generated_Source\PSoC5/USBFS.c **** #endif /* End USBFS_EP_MM != USBFS__EP_MANUAL */
 960:.\Generated_Source\PSoC5/USBFS.c **** 
 961:.\Generated_Source\PSoC5/USBFS.c **** 
 962:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 963:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_LoadInEP
 964:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 965:.\Generated_Source\PSoC5/USBFS.c **** *
 966:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 967:.\Generated_Source\PSoC5/USBFS.c **** *  Loads and enables the specified USB data endpoint for an IN interrupt or bulk
 968:.\Generated_Source\PSoC5/USBFS.c **** *  transfer.
 969:.\Generated_Source\PSoC5/USBFS.c **** *
 970:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 971:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Contains the data endpoint number.
 972:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
 973:.\Generated_Source\PSoC5/USBFS.c **** *  *pData: A pointer to a data array from which the data for the endpoint space
 974:.\Generated_Source\PSoC5/USBFS.c **** *          is loaded.
 975:.\Generated_Source\PSoC5/USBFS.c **** *  length: The number of bytes to transfer from the array and then send as a
 976:.\Generated_Source\PSoC5/USBFS.c **** *          result of an IN request. Valid values are between 0 and 512.
 977:.\Generated_Source\PSoC5/USBFS.c **** *
 978:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 979:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 980:.\Generated_Source\PSoC5/USBFS.c **** *
 981:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
 982:.\Generated_Source\PSoC5/USBFS.c **** *  No.
 983:.\Generated_Source\PSoC5/USBFS.c **** *
 984:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 985:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_LoadInEP(uint8 epNumber, uint8 *pData, uint16 length)
 986:.\Generated_Source\PSoC5/USBFS.c ****                                                                         
 987:.\Generated_Source\PSoC5/USBFS.c **** {
 1330              		.loc 1 987 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 16
 1333              		@ frame_needed = 1, uses_anonymous_args = 0
 1334 0000 90B5     		push	{r4, r7, lr}
 1335              		.cfi_def_cfa_offset 12
 1336              		.cfi_offset 4, -12
 1337              		.cfi_offset 7, -8
 1338              		.cfi_offset 14, -4
 1339 0002 85B0     		sub	sp, sp, #20
 1340              		.cfi_def_cfa_offset 32
 1341 0004 00AF     		add	r7, sp, #0
 1342              		.cfi_def_cfa_register 7
 1343 0006 0346     		mov	r3, r0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 42


 1344 0008 3960     		str	r1, [r7]
 1345 000a FB71     		strb	r3, [r7, #7]
 1346 000c 1346     		mov	r3, r2	@ movhi
 1347 000e BB80     		strh	r3, [r7, #4]	@ movhi
 988:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri;
 989:.\Generated_Source\PSoC5/USBFS.c ****     uint8 *p;
 990:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM == USBFS__EP_MANUAL)
 991:.\Generated_Source\PSoC5/USBFS.c ****         uint16 i;
 992:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* End USBFS_EP_MM == USBFS__EP_MANUAL */
 993:.\Generated_Source\PSoC5/USBFS.c **** 
 994:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1348              		.loc 1 994 0
 1349 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1350 0012 002B     		cmp	r3, #0
 1351 0014 00F09480 		beq	.L80
 1352              		.loc 1 994 0 is_stmt 0 discriminator 1
 1353 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1354 001a 082B     		cmp	r3, #8
 1355 001c 00F29080 		bhi	.L80
 995:.\Generated_Source\PSoC5/USBFS.c ****     {
 996:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1356              		.loc 1 996 0 is_stmt 1
 1357 0020 FB79     		ldrb	r3, [r7, #7]
 1358 0022 013B     		subs	r3, r3, #1
 1359 0024 DBB2     		uxtb	r3, r3
 1360 0026 1B01     		lsls	r3, r3, #4
 1361 0028 FB73     		strb	r3, [r7, #15]
 997:.\Generated_Source\PSoC5/USBFS.c ****         p = (uint8 *)&USBFS_ARB_RW1_DR_PTR[ri];
 1362              		.loc 1 997 0
 1363 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1364 002c 464B     		ldr	r3, .L85
 1365 002e 1344     		add	r3, r3, r2
 1366 0030 BB60     		str	r3, [r7, #8]
 998:.\Generated_Source\PSoC5/USBFS.c **** 
 999:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
1000:.\Generated_Source\PSoC5/USBFS.c ****             /* Limits length to available buffer space, auto MM could send packets up to 1024 bytes
1001:.\Generated_Source\PSoC5/USBFS.c ****             if(length > USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset)
1002:.\Generated_Source\PSoC5/USBFS.c ****             {
1003:.\Generated_Source\PSoC5/USBFS.c ****                 length = USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset;
1004:.\Generated_Source\PSoC5/USBFS.c ****             }
1005:.\Generated_Source\PSoC5/USBFS.c ****         #endif /* End USBFS_EP_MM != USBFS__EP_DMAAUTO */
1006:.\Generated_Source\PSoC5/USBFS.c **** 
1007:.\Generated_Source\PSoC5/USBFS.c ****         /* Set the count and data toggle */
1008:.\Generated_Source\PSoC5/USBFS.c ****         CY_SET_REG8(&USBFS_SIE_EP1_CNT0_PTR[ri], (length >> 8u) | (USBFS_EP[epNumber].epToggle));
 1367              		.loc 1 1008 0
 1368 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1369 0034 454A     		ldr	r2, .L85+4
 1370 0036 1A44     		add	r2, r2, r3
 1371 0038 BB88     		ldrh	r3, [r7, #4]
 1372 003a 1B0A     		lsrs	r3, r3, #8
 1373 003c 9BB2     		uxth	r3, r3
 1374 003e D8B2     		uxtb	r0, r3
 1375 0040 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1376 0042 434C     		ldr	r4, .L85+8
 1377 0044 0B46     		mov	r3, r1
 1378 0046 5B00     		lsls	r3, r3, #1
 1379 0048 0B44     		add	r3, r3, r1
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 43


 1380 004a 9B00     		lsls	r3, r3, #2
 1381 004c 2344     		add	r3, r3, r4
 1382 004e DB78     		ldrb	r3, [r3, #3]
 1383 0050 DBB2     		uxtb	r3, r3
 1384 0052 0343     		orrs	r3, r3, r0
 1385 0054 DBB2     		uxtb	r3, r3
 1386 0056 1370     		strb	r3, [r2]
1009:.\Generated_Source\PSoC5/USBFS.c ****         CY_SET_REG8(&USBFS_SIE_EP1_CNT1_PTR[ri],  length & 0xFFu);
 1387              		.loc 1 1009 0
 1388 0058 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1389 005a 3E4B     		ldr	r3, .L85+12
 1390 005c 1344     		add	r3, r3, r2
 1391 005e BA88     		ldrh	r2, [r7, #4]	@ movhi
 1392 0060 D2B2     		uxtb	r2, r2
 1393 0062 1A70     		strb	r2, [r3]
1010:.\Generated_Source\PSoC5/USBFS.c **** 
1011:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_MANUAL)
1012:.\Generated_Source\PSoC5/USBFS.c ****             if(pData != NULL)
1013:.\Generated_Source\PSoC5/USBFS.c ****             {
1014:.\Generated_Source\PSoC5/USBFS.c ****                 /* Copy the data using the arbiter data register */
1015:.\Generated_Source\PSoC5/USBFS.c ****                 for (i = 0u; i < length; i++)
1016:.\Generated_Source\PSoC5/USBFS.c ****                 {
1017:.\Generated_Source\PSoC5/USBFS.c ****                     CY_SET_REG8(p, pData[i]);
1018:.\Generated_Source\PSoC5/USBFS.c ****                 }
1019:.\Generated_Source\PSoC5/USBFS.c ****             }
1020:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1021:.\Generated_Source\PSoC5/USBFS.c ****             /* Write the Mode register */
1022:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_SIE_EP1_CR0_PTR[ri] = USBFS_EP[epNumber].epMode;
1023:.\Generated_Source\PSoC5/USBFS.c ****         #else
1024:.\Generated_Source\PSoC5/USBFS.c ****             /*Init DMA if it was not initialized */
1025:.\Generated_Source\PSoC5/USBFS.c ****             if(USBFS_DmaTd[epNumber] == DMA_INVALID_TD)
 1394              		.loc 1 1025 0
 1395 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1396 0066 3C4A     		ldr	r2, .L85+16
 1397 0068 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1398 006a FF2B     		cmp	r3, #255
 1399 006c 04D1     		bne	.L82
1026:.\Generated_Source\PSoC5/USBFS.c ****             {
1027:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
 1400              		.loc 1 1027 0
 1401 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1402 0070 1846     		mov	r0, r3
 1403 0072 3968     		ldr	r1, [r7]
 1404 0074 FFF7FEFF 		bl	USBFS_InitEP_DMA
 1405              	.L82:
1028:.\Generated_Source\PSoC5/USBFS.c ****             }
1029:.\Generated_Source\PSoC5/USBFS.c ****         #endif /* End USBFS_EP_MM == USBFS__EP_MANUAL */
1030:.\Generated_Source\PSoC5/USBFS.c **** 
1031:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAMANUAL)
1032:.\Generated_Source\PSoC5/USBFS.c ****             if((pData != NULL) && (length > 0))
1033:.\Generated_Source\PSoC5/USBFS.c ****             {
1034:.\Generated_Source\PSoC5/USBFS.c **** 
1035:.\Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA in mode2 for transfering data */
1036:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaChDisable(USBFS_DmaChan[epNumber]);
1037:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, DMA_INVALID_TD,\
1038:.\Generated_Source\PSoC5/USBFS.c ****                                                                                     TD_TERMIN_EN | 
1039:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaTdSetAddress(USBFS_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint32)p));
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 44


1040:.\Generated_Source\PSoC5/USBFS.c ****                 /* Enable the DMA */
1041:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1042:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaChEnable(USBFS_DmaChan[epNumber], 1);
1043:.\Generated_Source\PSoC5/USBFS.c ****                 /* Generate DMA request */
1044:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP1_CFG_PTR[ri] |= USBFS_ARB_EPX_CFG_DMA_REQ;
1045:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP1_CFG_PTR[ri] &= ~USBFS_ARB_EPX_CFG_DMA_REQ;
1046:.\Generated_Source\PSoC5/USBFS.c ****                 /* Mode register will be writen in arb ISR after DMA transfer copmlete */
1047:.\Generated_Source\PSoC5/USBFS.c ****             }
1048:.\Generated_Source\PSoC5/USBFS.c ****             else
1049:.\Generated_Source\PSoC5/USBFS.c ****             {
1050:.\Generated_Source\PSoC5/USBFS.c ****                 /* When zero-length packet - write the Mode register directly */
1051:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_SIE_EP1_CR0_PTR[ri] = USBFS_EP[epNumber].epMode;
1052:.\Generated_Source\PSoC5/USBFS.c ****             }
1053:.\Generated_Source\PSoC5/USBFS.c ****         #endif /* End USBFS_EP_MM == USBFS__EP_DMAMANUAL */
1054:.\Generated_Source\PSoC5/USBFS.c **** 
1055:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
1056:.\Generated_Source\PSoC5/USBFS.c ****             if(pData != NULL)
 1406              		.loc 1 1056 0
 1407 0078 3B68     		ldr	r3, [r7]
 1408 007a 002B     		cmp	r3, #0
 1409 007c 36D0     		beq	.L83
1057:.\Generated_Source\PSoC5/USBFS.c ****             {
1058:.\Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA in mode3 for transfering data */
1059:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaChDisable(USBFS_DmaChan[epNumber]);
 1410              		.loc 1 1059 0
 1411 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1412 0080 364A     		ldr	r2, .L85+20
 1413 0082 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1414 0084 1846     		mov	r0, r3
 1415 0086 FFF7FEFF 		bl	CyDmaChDisable
1060:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, USBFS_DmaTd[epNumber],\
 1416              		.loc 1 1060 0
 1417 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1418 008c 324A     		ldr	r2, .L85+16
 1419 008e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1420 0090 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1421 0092 314A     		ldr	r2, .L85+16
 1422 0094 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1423 0096 BA88     		ldrh	r2, [r7, #4]
 1424 0098 0846     		mov	r0, r1
 1425 009a 1146     		mov	r1, r2
 1426 009c 1A46     		mov	r2, r3
 1427 009e 1123     		movs	r3, #17
 1428 00a0 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1061:.\Generated_Source\PSoC5/USBFS.c ****                                                                                     TD_TERMIN_EN | 
1062:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaTdSetAddress(USBFS_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint32)p));
 1429              		.loc 1 1062 0
 1430 00a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1431 00a6 2C4A     		ldr	r2, .L85+16
 1432 00a8 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1433 00aa 3B68     		ldr	r3, [r7]
 1434 00ac 9AB2     		uxth	r2, r3
 1435 00ae BB68     		ldr	r3, [r7, #8]
 1436 00b0 9BB2     		uxth	r3, r3
 1437 00b2 0846     		mov	r0, r1
 1438 00b4 1146     		mov	r1, r2
 1439 00b6 1A46     		mov	r2, r3
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 45


 1440 00b8 FFF7FEFF 		bl	CyDmaTdSetAddress
1063:.\Generated_Source\PSoC5/USBFS.c ****                 /* Clear Any potential pending DMA requests before starting the DMA channel to tran
1064:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
 1441              		.loc 1 1064 0
 1442 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1443 00be 274A     		ldr	r2, .L85+20
 1444 00c0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1445 00c2 1846     		mov	r0, r3
 1446 00c4 FFF7FEFF 		bl	CyDmaClearPendingDrq
1065:.\Generated_Source\PSoC5/USBFS.c ****                 /* Enable the DMA */
1066:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
 1447              		.loc 1 1066 0
 1448 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1449 00ca 244A     		ldr	r2, .L85+20
 1450 00cc D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1451 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1452 00d0 214A     		ldr	r2, .L85+16
 1453 00d2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1454 00d4 0846     		mov	r0, r1
 1455 00d6 1946     		mov	r1, r3
 1456 00d8 FFF7FEFF 		bl	CyDmaChSetInitialTd
1067:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaChEnable(USBFS_DmaChan[epNumber], 1);
 1457              		.loc 1 1067 0
 1458 00dc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1459 00de 1F4A     		ldr	r2, .L85+20
 1460 00e0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1461 00e2 1846     		mov	r0, r3
 1462 00e4 0121     		movs	r1, #1
 1463 00e6 FFF7FEFF 		bl	CyDmaChEnable
 1464 00ea 29E0     		b	.L80
 1465              	.L83:
1068:.\Generated_Source\PSoC5/USBFS.c ****             }
1069:.\Generated_Source\PSoC5/USBFS.c ****             else
1070:.\Generated_Source\PSoC5/USBFS.c ****             {
1071:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 1466              		.loc 1 1071 0
 1467 00ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1468 00ee 1849     		ldr	r1, .L85+8
 1469 00f0 1346     		mov	r3, r2
 1470 00f2 5B00     		lsls	r3, r3, #1
 1471 00f4 1344     		add	r3, r3, r2
 1472 00f6 9B00     		lsls	r3, r3, #2
 1473 00f8 0B44     		add	r3, r3, r1
 1474 00fa 0022     		movs	r2, #0
 1475 00fc 5A70     		strb	r2, [r3, #1]
1072:.\Generated_Source\PSoC5/USBFS.c ****                 if(length > 0)
 1476              		.loc 1 1072 0
 1477 00fe BB88     		ldrh	r3, [r7, #4]
 1478 0100 002B     		cmp	r3, #0
 1479 0102 10D0     		beq	.L84
1073:.\Generated_Source\PSoC5/USBFS.c ****                 {
1074:.\Generated_Source\PSoC5/USBFS.c ****                     /* Set Data ready status, This will generate DMA request */
1075:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_ARB_EP1_CFG_PTR[ri] |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
 1480              		.loc 1 1075 0
 1481 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1482 0106 03F18043 		add	r3, r3, #1073741824
 1483 010a 03F5C143 		add	r3, r3, #24704
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 46


 1484 010e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1485 0110 02F18042 		add	r2, r2, #1073741824
 1486 0114 02F5C142 		add	r2, r2, #24704
 1487 0118 1278     		ldrb	r2, [r2]
 1488 011a D2B2     		uxtb	r2, r2
 1489 011c 42F00102 		orr	r2, r2, #1
 1490 0120 D2B2     		uxtb	r2, r2
 1491 0122 1A70     		strb	r2, [r3]
 1492 0124 0CE0     		b	.L80
 1493              	.L84:
1076:.\Generated_Source\PSoC5/USBFS.c ****                     /* Mode register will be writen in arb ISR(In Buffer Full) after first DMA tran
1077:.\Generated_Source\PSoC5/USBFS.c ****                 }
1078:.\Generated_Source\PSoC5/USBFS.c ****                 else
1079:.\Generated_Source\PSoC5/USBFS.c ****                 {
1080:.\Generated_Source\PSoC5/USBFS.c ****                     /* When zero-length packet - write the Mode register directly */
1081:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_SIE_EP1_CR0_PTR[ri] = USBFS_EP[epNumber].epMode;
 1494              		.loc 1 1081 0
 1495 0126 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1496 0128 0D4A     		ldr	r2, .L85+24
 1497 012a 1A44     		add	r2, r2, r3
 1498 012c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1499 012e 0848     		ldr	r0, .L85+8
 1500 0130 0B46     		mov	r3, r1
 1501 0132 5B00     		lsls	r3, r3, #1
 1502 0134 0B44     		add	r3, r3, r1
 1503 0136 9B00     		lsls	r3, r3, #2
 1504 0138 0344     		add	r3, r3, r0
 1505 013a 5B79     		ldrb	r3, [r3, #5]
 1506 013c DBB2     		uxtb	r3, r3
 1507 013e 1370     		strb	r3, [r2]
 1508              	.L80:
1082:.\Generated_Source\PSoC5/USBFS.c ****                 }
1083:.\Generated_Source\PSoC5/USBFS.c ****             }
1084:.\Generated_Source\PSoC5/USBFS.c ****         #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
1085:.\Generated_Source\PSoC5/USBFS.c **** 
1086:.\Generated_Source\PSoC5/USBFS.c ****     }
1087:.\Generated_Source\PSoC5/USBFS.c **** }
 1509              		.loc 1 1087 0
 1510 0140 1437     		adds	r7, r7, #20
 1511              		.cfi_def_cfa_offset 12
 1512 0142 BD46     		mov	sp, r7
 1513              		.cfi_def_cfa_register 13
 1514              		@ sp needed
 1515 0144 90BD     		pop	{r4, r7, pc}
 1516              	.L86:
 1517 0146 00BF     		.align	2
 1518              	.L85:
 1519 0148 88600040 		.word	1073766536
 1520 014c 0C600040 		.word	1073766412
 1521 0150 00000000 		.word	USBFS_EP
 1522 0154 0D600040 		.word	1073766413
 1523 0158 00000000 		.word	USBFS_DmaTd
 1524 015c 00000000 		.word	USBFS_DmaChan
 1525 0160 0E600040 		.word	1073766414
 1526              		.cfi_endproc
 1527              	.LFE13:
 1528              		.size	USBFS_LoadInEP, .-USBFS_LoadInEP
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 47


 1529              		.section	.text.USBFS_ReadOutEP,"ax",%progbits
 1530              		.align	2
 1531              		.global	USBFS_ReadOutEP
 1532              		.thumb
 1533              		.thumb_func
 1534              		.type	USBFS_ReadOutEP, %function
 1535              	USBFS_ReadOutEP:
 1536              	.LFB14:
1088:.\Generated_Source\PSoC5/USBFS.c **** 
1089:.\Generated_Source\PSoC5/USBFS.c **** 
1090:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1091:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReadOutEP
1092:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1093:.\Generated_Source\PSoC5/USBFS.c **** *
1094:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1095:.\Generated_Source\PSoC5/USBFS.c **** *  Read data from an endpoint.  The application must call
1096:.\Generated_Source\PSoC5/USBFS.c **** *  USBFS_GetEPState to see if an event is pending.
1097:.\Generated_Source\PSoC5/USBFS.c **** *
1098:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1099:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Contains the data endpoint number.
1100:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1101:.\Generated_Source\PSoC5/USBFS.c **** *  pData: A pointer to a data array from which the data for the endpoint space
1102:.\Generated_Source\PSoC5/USBFS.c **** *         is loaded.
1103:.\Generated_Source\PSoC5/USBFS.c **** *  length: The number of bytes to transfer from the USB Out enpoint and loads
1104:.\Generated_Source\PSoC5/USBFS.c **** *          it into data array. Valid values are between 0 and 1023. The function
1105:.\Generated_Source\PSoC5/USBFS.c **** *          moves fewer than the requested number of bytes if the host sends
1106:.\Generated_Source\PSoC5/USBFS.c **** *          fewer bytes than requested.
1107:.\Generated_Source\PSoC5/USBFS.c **** *
1108:.\Generated_Source\PSoC5/USBFS.c **** * Returns:
1109:.\Generated_Source\PSoC5/USBFS.c **** *  Number of bytes received, 0 for an invalid endpoint.
1110:.\Generated_Source\PSoC5/USBFS.c **** *
1111:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
1112:.\Generated_Source\PSoC5/USBFS.c **** *  No.
1113:.\Generated_Source\PSoC5/USBFS.c **** *
1114:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1115:.\Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_ReadOutEP(uint8 epNumber, uint8 *pData, uint16 length)
1116:.\Generated_Source\PSoC5/USBFS.c ****                                                                         
1117:.\Generated_Source\PSoC5/USBFS.c **** {
 1537              		.loc 1 1117 0
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 16
 1540              		@ frame_needed = 1, uses_anonymous_args = 0
 1541 0000 80B5     		push	{r7, lr}
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 7, -8
 1544              		.cfi_offset 14, -4
 1545 0002 84B0     		sub	sp, sp, #16
 1546              		.cfi_def_cfa_offset 24
 1547 0004 00AF     		add	r7, sp, #0
 1548              		.cfi_def_cfa_register 7
 1549 0006 0346     		mov	r3, r0
 1550 0008 3960     		str	r1, [r7]
 1551 000a FB71     		strb	r3, [r7, #7]
 1552 000c 1346     		mov	r3, r2	@ movhi
 1553 000e BB80     		strh	r3, [r7, #4]	@ movhi
1118:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri;
1119:.\Generated_Source\PSoC5/USBFS.c ****     uint8 *p;
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 48


1120:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM == USBFS__EP_MANUAL)
1121:.\Generated_Source\PSoC5/USBFS.c ****         uint16 i;
1122:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* End USBFS_EP_MM == USBFS__EP_MANUAL */
1123:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
1124:.\Generated_Source\PSoC5/USBFS.c ****         uint16 xferCount;
1125:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* End USBFS_EP_MM != $INSTANCE_NAME`__EP_DMAAUTO */
1126:.\Generated_Source\PSoC5/USBFS.c **** 
1127:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP) && (pData != NULL))
 1554              		.loc 1 1127 0
 1555 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1556 0012 002B     		cmp	r3, #0
 1557 0014 4FD0     		beq	.L88
 1558              		.loc 1 1127 0 is_stmt 0 discriminator 1
 1559 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1560 0018 082B     		cmp	r3, #8
 1561 001a 4CD8     		bhi	.L88
 1562              		.loc 1 1127 0 discriminator 2
 1563 001c 3B68     		ldr	r3, [r7]
 1564 001e 002B     		cmp	r3, #0
 1565 0020 49D0     		beq	.L88
1128:.\Generated_Source\PSoC5/USBFS.c ****     {
1129:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1566              		.loc 1 1129 0 is_stmt 1
 1567 0022 FB79     		ldrb	r3, [r7, #7]
 1568 0024 013B     		subs	r3, r3, #1
 1569 0026 DBB2     		uxtb	r3, r3
 1570 0028 1B01     		lsls	r3, r3, #4
 1571 002a FB73     		strb	r3, [r7, #15]
1130:.\Generated_Source\PSoC5/USBFS.c ****         p = (uint8 *)&USBFS_ARB_RW1_DR_PTR[ri];
 1572              		.loc 1 1130 0
 1573 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1574 002e 254B     		ldr	r3, .L92
 1575 0030 1344     		add	r3, r3, r2
 1576 0032 BB60     		str	r3, [r7, #8]
1131:.\Generated_Source\PSoC5/USBFS.c **** 
1132:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
1133:.\Generated_Source\PSoC5/USBFS.c ****             /* Determine which is smaller the requested data or the available data */
1134:.\Generated_Source\PSoC5/USBFS.c ****             xferCount = USBFS_GetEPCount(epNumber);
1135:.\Generated_Source\PSoC5/USBFS.c ****             if (length > xferCount)
1136:.\Generated_Source\PSoC5/USBFS.c ****             {
1137:.\Generated_Source\PSoC5/USBFS.c ****                 length = xferCount;
1138:.\Generated_Source\PSoC5/USBFS.c ****             }
1139:.\Generated_Source\PSoC5/USBFS.c ****         #endif /* End USBFS_EP_MM != USBFS__EP_DMAAUTO */
1140:.\Generated_Source\PSoC5/USBFS.c **** 
1141:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_MANUAL)
1142:.\Generated_Source\PSoC5/USBFS.c ****             /* Copy the data using the arbiter data register */
1143:.\Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < length; i++)
1144:.\Generated_Source\PSoC5/USBFS.c ****             {
1145:.\Generated_Source\PSoC5/USBFS.c ****                 pData[i] = CY_GET_REG8(p);
1146:.\Generated_Source\PSoC5/USBFS.c ****             }
1147:.\Generated_Source\PSoC5/USBFS.c **** 
1148:.\Generated_Source\PSoC5/USBFS.c ****             /* (re)arming of OUT endpoint */
1149:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_EnableOutEP(epNumber);
1150:.\Generated_Source\PSoC5/USBFS.c ****         #else
1151:.\Generated_Source\PSoC5/USBFS.c ****             /*Init DMA if it was not initialized */
1152:.\Generated_Source\PSoC5/USBFS.c ****             if(USBFS_DmaTd[epNumber] == DMA_INVALID_TD)
 1577              		.loc 1 1152 0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 49


 1578 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1579 0036 244A     		ldr	r2, .L92+4
 1580 0038 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1581 003a FF2B     		cmp	r3, #255
 1582 003c 04D1     		bne	.L89
1153:.\Generated_Source\PSoC5/USBFS.c ****             {
1154:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
 1583              		.loc 1 1154 0
 1584 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1585 0040 1846     		mov	r0, r3
 1586 0042 3968     		ldr	r1, [r7]
 1587 0044 FFF7FEFF 		bl	USBFS_InitEP_DMA
 1588              	.L89:
1155:.\Generated_Source\PSoC5/USBFS.c ****             }
1156:.\Generated_Source\PSoC5/USBFS.c ****         #endif /* End USBFS_EP_MM == USBFS__EP_MANUAL */
1157:.\Generated_Source\PSoC5/USBFS.c **** 
1158:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAMANUAL)
1159:.\Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA in mode2 for transfering data */
1160:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaChDisable(USBFS_DmaChan[epNumber]);
1161:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, DMA_INVALID_TD,
1162:.\Generated_Source\PSoC5/USBFS.c ****                                                                                 TD_TERMIN_EN | TD_I
1163:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaTdSetAddress(USBFS_DmaTd[epNumber],  LO16((uint32)p), LO16((uint32)pData));
1164:.\Generated_Source\PSoC5/USBFS.c ****             /* Enable the DMA */
1165:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1166:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaChEnable(USBFS_DmaChan[epNumber], 1);
1167:.\Generated_Source\PSoC5/USBFS.c **** 
1168:.\Generated_Source\PSoC5/USBFS.c ****             /* Generate DMA request */
1169:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP1_CFG_PTR[ri] |= USBFS_ARB_EPX_CFG_DMA_REQ;
1170:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP1_CFG_PTR[ri] &= ~USBFS_ARB_EPX_CFG_DMA_REQ;
1171:.\Generated_Source\PSoC5/USBFS.c ****             /* Out EP will be (re)armed in arb ISR after transfer complete */
1172:.\Generated_Source\PSoC5/USBFS.c ****         #endif /* End USBFS_EP_MM == USBFS__EP_DMAMANUAL */
1173:.\Generated_Source\PSoC5/USBFS.c **** 
1174:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
1175:.\Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA in mode3 for transfering data */
1176:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaChDisable(USBFS_DmaChan[epNumber]);
 1589              		.loc 1 1176 0
 1590 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1591 004a 204A     		ldr	r2, .L92+8
 1592 004c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1593 004e 1846     		mov	r0, r3
 1594 0050 FFF7FEFF 		bl	CyDmaChDisable
1177:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, USBFS_DmaTd[epNumber],
 1595              		.loc 1 1177 0
 1596 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1597 0056 1C4A     		ldr	r2, .L92+4
 1598 0058 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1599 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1600 005c 1A4A     		ldr	r2, .L92+4
 1601 005e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1602 0060 BA88     		ldrh	r2, [r7, #4]
 1603 0062 0846     		mov	r0, r1
 1604 0064 1146     		mov	r1, r2
 1605 0066 1A46     		mov	r2, r3
 1606 0068 1223     		movs	r3, #18
 1607 006a FFF7FEFF 		bl	CyDmaTdSetConfiguration
1178:.\Generated_Source\PSoC5/USBFS.c ****                                                                                 TD_TERMIN_EN | TD_I
1179:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaTdSetAddress(USBFS_DmaTd[epNumber],  LO16((uint32)p), LO16((uint32)pData));
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 50


 1608              		.loc 1 1179 0
 1609 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1610 0070 154A     		ldr	r2, .L92+4
 1611 0072 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1612 0074 BB68     		ldr	r3, [r7, #8]
 1613 0076 9AB2     		uxth	r2, r3
 1614 0078 3B68     		ldr	r3, [r7]
 1615 007a 9BB2     		uxth	r3, r3
 1616 007c 0846     		mov	r0, r1
 1617 007e 1146     		mov	r1, r2
 1618 0080 1A46     		mov	r2, r3
 1619 0082 FFF7FEFF 		bl	CyDmaTdSetAddress
1180:.\Generated_Source\PSoC5/USBFS.c **** 
1181:.\Generated_Source\PSoC5/USBFS.c ****             /* Clear Any potential pending DMA requests before starting the DMA channel to transfer
1182:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
 1620              		.loc 1 1182 0
 1621 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1622 0088 104A     		ldr	r2, .L92+8
 1623 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1624 008c 1846     		mov	r0, r3
 1625 008e FFF7FEFF 		bl	CyDmaClearPendingDrq
1183:.\Generated_Source\PSoC5/USBFS.c ****             /* Enable the DMA */
1184:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
 1626              		.loc 1 1184 0
 1627 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1628 0094 0D4A     		ldr	r2, .L92+8
 1629 0096 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1630 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1631 009a 0B4A     		ldr	r2, .L92+4
 1632 009c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1633 009e 0846     		mov	r0, r1
 1634 00a0 1946     		mov	r1, r3
 1635 00a2 FFF7FEFF 		bl	CyDmaChSetInitialTd
1185:.\Generated_Source\PSoC5/USBFS.c ****             CyDmaChEnable(USBFS_DmaChan[epNumber], 1);
 1636              		.loc 1 1185 0
 1637 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1638 00a8 084A     		ldr	r2, .L92+8
 1639 00aa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1640 00ac 1846     		mov	r0, r3
 1641 00ae 0121     		movs	r1, #1
 1642 00b0 FFF7FEFF 		bl	CyDmaChEnable
 1643 00b4 01E0     		b	.L90
 1644              	.L88:
1186:.\Generated_Source\PSoC5/USBFS.c ****             /* Out EP will be (re)armed in arb ISR after transfer complete */
1187:.\Generated_Source\PSoC5/USBFS.c ****         #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
1188:.\Generated_Source\PSoC5/USBFS.c **** 
1189:.\Generated_Source\PSoC5/USBFS.c ****     }
1190:.\Generated_Source\PSoC5/USBFS.c ****     else
1191:.\Generated_Source\PSoC5/USBFS.c ****     {
1192:.\Generated_Source\PSoC5/USBFS.c ****         length = 0;
 1645              		.loc 1 1192 0
 1646 00b6 0023     		movs	r3, #0
 1647 00b8 BB80     		strh	r3, [r7, #4]	@ movhi
 1648              	.L90:
1193:.\Generated_Source\PSoC5/USBFS.c ****     }
1194:.\Generated_Source\PSoC5/USBFS.c **** 
1195:.\Generated_Source\PSoC5/USBFS.c ****     return(length);
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 51


 1649              		.loc 1 1195 0
 1650 00ba BB88     		ldrh	r3, [r7, #4]
1196:.\Generated_Source\PSoC5/USBFS.c **** }
 1651              		.loc 1 1196 0
 1652 00bc 1846     		mov	r0, r3
 1653 00be 1037     		adds	r7, r7, #16
 1654              		.cfi_def_cfa_offset 8
 1655 00c0 BD46     		mov	sp, r7
 1656              		.cfi_def_cfa_register 13
 1657              		@ sp needed
 1658 00c2 80BD     		pop	{r7, pc}
 1659              	.L93:
 1660              		.align	2
 1661              	.L92:
 1662 00c4 88600040 		.word	1073766536
 1663 00c8 00000000 		.word	USBFS_DmaTd
 1664 00cc 00000000 		.word	USBFS_DmaChan
 1665              		.cfi_endproc
 1666              	.LFE14:
 1667              		.size	USBFS_ReadOutEP, .-USBFS_ReadOutEP
 1668              		.section	.text.USBFS_EnableOutEP,"ax",%progbits
 1669              		.align	2
 1670              		.global	USBFS_EnableOutEP
 1671              		.thumb
 1672              		.thumb_func
 1673              		.type	USBFS_EnableOutEP, %function
 1674              	USBFS_EnableOutEP:
 1675              	.LFB15:
1197:.\Generated_Source\PSoC5/USBFS.c **** 
1198:.\Generated_Source\PSoC5/USBFS.c **** 
1199:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1200:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_EnableOutEP
1201:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1202:.\Generated_Source\PSoC5/USBFS.c **** *
1203:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1204:.\Generated_Source\PSoC5/USBFS.c **** *  This function enables an OUT endpoint.  It should not be
1205:.\Generated_Source\PSoC5/USBFS.c **** *  called for an IN endpoint.
1206:.\Generated_Source\PSoC5/USBFS.c **** *
1207:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1208:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Endpoint Number
1209:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1210:.\Generated_Source\PSoC5/USBFS.c **** *
1211:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1212:.\Generated_Source\PSoC5/USBFS.c **** *   None.
1213:.\Generated_Source\PSoC5/USBFS.c **** *
1214:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
1215:.\Generated_Source\PSoC5/USBFS.c **** *  USBFS_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
1216:.\Generated_Source\PSoC5/USBFS.c **** *
1217:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
1218:.\Generated_Source\PSoC5/USBFS.c **** *  No.
1219:.\Generated_Source\PSoC5/USBFS.c **** *
1220:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1221:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_EnableOutEP(uint8 epNumber) 
1222:.\Generated_Source\PSoC5/USBFS.c **** {
 1676              		.loc 1 1222 0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 52


 1679              		@ frame_needed = 1, uses_anonymous_args = 0
 1680              		@ link register save eliminated.
 1681 0000 80B4     		push	{r7}
 1682              		.cfi_def_cfa_offset 4
 1683              		.cfi_offset 7, -4
 1684 0002 85B0     		sub	sp, sp, #20
 1685              		.cfi_def_cfa_offset 24
 1686 0004 00AF     		add	r7, sp, #0
 1687              		.cfi_def_cfa_register 7
 1688 0006 0346     		mov	r3, r0
 1689 0008 FB71     		strb	r3, [r7, #7]
1223:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri;
1224:.\Generated_Source\PSoC5/USBFS.c **** 
1225:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1690              		.loc 1 1225 0
 1691 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1692 000c 002B     		cmp	r3, #0
 1693 000e 1DD0     		beq	.L94
 1694              		.loc 1 1225 0 is_stmt 0 discriminator 1
 1695 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1696 0012 082B     		cmp	r3, #8
 1697 0014 1AD8     		bhi	.L94
1226:.\Generated_Source\PSoC5/USBFS.c ****     {
1227:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1698              		.loc 1 1227 0 is_stmt 1
 1699 0016 FB79     		ldrb	r3, [r7, #7]
 1700 0018 013B     		subs	r3, r3, #1
 1701 001a DBB2     		uxtb	r3, r3
 1702 001c 1B01     		lsls	r3, r3, #4
 1703 001e FB73     		strb	r3, [r7, #15]
1228:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 1704              		.loc 1 1228 0
 1705 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1706 0022 0D49     		ldr	r1, .L96
 1707 0024 1346     		mov	r3, r2
 1708 0026 5B00     		lsls	r3, r3, #1
 1709 0028 1344     		add	r3, r3, r2
 1710 002a 9B00     		lsls	r3, r3, #2
 1711 002c 0B44     		add	r3, r3, r1
 1712 002e 0022     		movs	r2, #0
 1713 0030 5A70     		strb	r2, [r3, #1]
1229:.\Generated_Source\PSoC5/USBFS.c ****         /* Write the Mode register */
1230:.\Generated_Source\PSoC5/USBFS.c ****         CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_EP[epNumber].epMode);
 1714              		.loc 1 1230 0
 1715 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1716 0034 094A     		ldr	r2, .L96+4
 1717 0036 1A44     		add	r2, r2, r3
 1718 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1719 003a 0748     		ldr	r0, .L96
 1720 003c 0B46     		mov	r3, r1
 1721 003e 5B00     		lsls	r3, r3, #1
 1722 0040 0B44     		add	r3, r3, r1
 1723 0042 9B00     		lsls	r3, r3, #2
 1724 0044 0344     		add	r3, r3, r0
 1725 0046 5B79     		ldrb	r3, [r3, #5]
 1726 0048 DBB2     		uxtb	r3, r3
 1727 004a 1370     		strb	r3, [r2]
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 53


 1728              	.L94:
1231:.\Generated_Source\PSoC5/USBFS.c ****     }
1232:.\Generated_Source\PSoC5/USBFS.c **** }
 1729              		.loc 1 1232 0
 1730 004c 1437     		adds	r7, r7, #20
 1731              		.cfi_def_cfa_offset 4
 1732 004e BD46     		mov	sp, r7
 1733              		.cfi_def_cfa_register 13
 1734              		@ sp needed
 1735 0050 5DF8047B 		ldr	r7, [sp], #4
 1736              		.cfi_restore 7
 1737              		.cfi_def_cfa_offset 0
 1738 0054 7047     		bx	lr
 1739              	.L97:
 1740 0056 00BF     		.align	2
 1741              	.L96:
 1742 0058 00000000 		.word	USBFS_EP
 1743 005c 0E600040 		.word	1073766414
 1744              		.cfi_endproc
 1745              	.LFE15:
 1746              		.size	USBFS_EnableOutEP, .-USBFS_EnableOutEP
 1747              		.section	.text.USBFS_DisableOutEP,"ax",%progbits
 1748              		.align	2
 1749              		.global	USBFS_DisableOutEP
 1750              		.thumb
 1751              		.thumb_func
 1752              		.type	USBFS_DisableOutEP, %function
 1753              	USBFS_DisableOutEP:
 1754              	.LFB16:
1233:.\Generated_Source\PSoC5/USBFS.c **** 
1234:.\Generated_Source\PSoC5/USBFS.c **** 
1235:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1236:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_DisableOutEP
1237:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1238:.\Generated_Source\PSoC5/USBFS.c **** *
1239:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1240:.\Generated_Source\PSoC5/USBFS.c **** *  This function disables an OUT endpoint.  It should not be
1241:.\Generated_Source\PSoC5/USBFS.c **** *  called for an IN endpoint.
1242:.\Generated_Source\PSoC5/USBFS.c **** *
1243:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1244:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Endpoint Number
1245:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1246:.\Generated_Source\PSoC5/USBFS.c **** *
1247:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1248:.\Generated_Source\PSoC5/USBFS.c **** *  None.
1249:.\Generated_Source\PSoC5/USBFS.c **** *
1250:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1251:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_DisableOutEP(uint8 epNumber) 
1252:.\Generated_Source\PSoC5/USBFS.c **** {
 1755              		.loc 1 1252 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 16
 1758              		@ frame_needed = 1, uses_anonymous_args = 0
 1759              		@ link register save eliminated.
 1760 0000 80B4     		push	{r7}
 1761              		.cfi_def_cfa_offset 4
 1762              		.cfi_offset 7, -4
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 54


 1763 0002 85B0     		sub	sp, sp, #20
 1764              		.cfi_def_cfa_offset 24
 1765 0004 00AF     		add	r7, sp, #0
 1766              		.cfi_def_cfa_register 7
 1767 0006 0346     		mov	r3, r0
 1768 0008 FB71     		strb	r3, [r7, #7]
1253:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri ;
1254:.\Generated_Source\PSoC5/USBFS.c **** 
1255:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1769              		.loc 1 1255 0
 1770 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1771 000c 002B     		cmp	r3, #0
 1772 000e 0CD0     		beq	.L98
 1773              		.loc 1 1255 0 is_stmt 0 discriminator 1
 1774 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1775 0012 082B     		cmp	r3, #8
 1776 0014 09D8     		bhi	.L98
1256:.\Generated_Source\PSoC5/USBFS.c ****     {
1257:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1777              		.loc 1 1257 0 is_stmt 1
 1778 0016 FB79     		ldrb	r3, [r7, #7]
 1779 0018 013B     		subs	r3, r3, #1
 1780 001a DBB2     		uxtb	r3, r3
 1781 001c 1B01     		lsls	r3, r3, #4
 1782 001e FB73     		strb	r3, [r7, #15]
1258:.\Generated_Source\PSoC5/USBFS.c ****         /* Write the Mode register */
1259:.\Generated_Source\PSoC5/USBFS.c ****         CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_MODE_NAK_OUT);
 1783              		.loc 1 1259 0
 1784 0020 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1785 0022 044B     		ldr	r3, .L100
 1786 0024 1344     		add	r3, r3, r2
 1787 0026 0822     		movs	r2, #8
 1788 0028 1A70     		strb	r2, [r3]
 1789              	.L98:
1260:.\Generated_Source\PSoC5/USBFS.c ****     }
1261:.\Generated_Source\PSoC5/USBFS.c **** }
 1790              		.loc 1 1261 0
 1791 002a 1437     		adds	r7, r7, #20
 1792              		.cfi_def_cfa_offset 4
 1793 002c BD46     		mov	sp, r7
 1794              		.cfi_def_cfa_register 13
 1795              		@ sp needed
 1796 002e 5DF8047B 		ldr	r7, [sp], #4
 1797              		.cfi_restore 7
 1798              		.cfi_def_cfa_offset 0
 1799 0032 7047     		bx	lr
 1800              	.L101:
 1801              		.align	2
 1802              	.L100:
 1803 0034 0E600040 		.word	1073766414
 1804              		.cfi_endproc
 1805              	.LFE16:
 1806              		.size	USBFS_DisableOutEP, .-USBFS_DisableOutEP
 1807              		.section	.text.USBFS_Force,"ax",%progbits
 1808              		.align	2
 1809              		.global	USBFS_Force
 1810              		.thumb
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 55


 1811              		.thumb_func
 1812              		.type	USBFS_Force, %function
 1813              	USBFS_Force:
 1814              	.LFB17:
1262:.\Generated_Source\PSoC5/USBFS.c **** 
1263:.\Generated_Source\PSoC5/USBFS.c **** 
1264:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1265:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Force
1266:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1267:.\Generated_Source\PSoC5/USBFS.c **** *
1268:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1269:.\Generated_Source\PSoC5/USBFS.c **** *  Forces the bus state
1270:.\Generated_Source\PSoC5/USBFS.c **** *
1271:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1272:.\Generated_Source\PSoC5/USBFS.c **** *  bState
1273:.\Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_J
1274:.\Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_K
1275:.\Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_SE0
1276:.\Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_NONE
1277:.\Generated_Source\PSoC5/USBFS.c **** *
1278:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1279:.\Generated_Source\PSoC5/USBFS.c **** *  None.
1280:.\Generated_Source\PSoC5/USBFS.c **** *
1281:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1282:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_Force(uint8 bState) 
1283:.\Generated_Source\PSoC5/USBFS.c **** {
 1815              		.loc 1 1283 0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 8
 1818              		@ frame_needed = 1, uses_anonymous_args = 0
 1819              		@ link register save eliminated.
 1820 0000 80B4     		push	{r7}
 1821              		.cfi_def_cfa_offset 4
 1822              		.cfi_offset 7, -4
 1823 0002 83B0     		sub	sp, sp, #12
 1824              		.cfi_def_cfa_offset 16
 1825 0004 00AF     		add	r7, sp, #0
 1826              		.cfi_def_cfa_register 7
 1827 0006 0346     		mov	r3, r0
 1828 0008 FB71     		strb	r3, [r7, #7]
1284:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_USBIO_CR0_PTR, bState);
 1829              		.loc 1 1284 0
 1830 000a 044A     		ldr	r2, .L103
 1831 000c FB79     		ldrb	r3, [r7, #7]
 1832 000e 1370     		strb	r3, [r2]
1285:.\Generated_Source\PSoC5/USBFS.c **** }
 1833              		.loc 1 1285 0
 1834 0010 0C37     		adds	r7, r7, #12
 1835              		.cfi_def_cfa_offset 4
 1836 0012 BD46     		mov	sp, r7
 1837              		.cfi_def_cfa_register 13
 1838              		@ sp needed
 1839 0014 5DF8047B 		ldr	r7, [sp], #4
 1840              		.cfi_restore 7
 1841              		.cfi_def_cfa_offset 0
 1842 0018 7047     		bx	lr
 1843              	.L104:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 56


 1844 001a 00BF     		.align	2
 1845              	.L103:
 1846 001c 10600040 		.word	1073766416
 1847              		.cfi_endproc
 1848              	.LFE17:
 1849              		.size	USBFS_Force, .-USBFS_Force
 1850              		.section	.text.USBFS_GetEPAckState,"ax",%progbits
 1851              		.align	2
 1852              		.global	USBFS_GetEPAckState
 1853              		.thumb
 1854              		.thumb_func
 1855              		.type	USBFS_GetEPAckState, %function
 1856              	USBFS_GetEPAckState:
 1857              	.LFB18:
1286:.\Generated_Source\PSoC5/USBFS.c **** 
1287:.\Generated_Source\PSoC5/USBFS.c **** 
1288:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1289:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPAckState
1290:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1291:.\Generated_Source\PSoC5/USBFS.c **** *
1292:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1293:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the ACK of the CR0 Register (ACKD)
1294:.\Generated_Source\PSoC5/USBFS.c **** *
1295:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1296:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Endpoint Number
1297:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1298:.\Generated_Source\PSoC5/USBFS.c **** *
1299:.\Generated_Source\PSoC5/USBFS.c **** * Returns
1300:.\Generated_Source\PSoC5/USBFS.c **** *  0 if nothing has been ACKD, non-=zero something has been ACKD
1301:.\Generated_Source\PSoC5/USBFS.c **** *
1302:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetEPAckState(uint8 epNumber) 
1304:.\Generated_Source\PSoC5/USBFS.c **** {
 1858              		.loc 1 1304 0
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 16
 1861              		@ frame_needed = 1, uses_anonymous_args = 0
 1862              		@ link register save eliminated.
 1863 0000 80B4     		push	{r7}
 1864              		.cfi_def_cfa_offset 4
 1865              		.cfi_offset 7, -4
 1866 0002 85B0     		sub	sp, sp, #20
 1867              		.cfi_def_cfa_offset 24
 1868 0004 00AF     		add	r7, sp, #0
 1869              		.cfi_def_cfa_register 7
 1870 0006 0346     		mov	r3, r0
 1871 0008 FB71     		strb	r3, [r7, #7]
1305:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri;
1306:.\Generated_Source\PSoC5/USBFS.c ****     uint8 cr = 0;
 1872              		.loc 1 1306 0
 1873 000a 0023     		movs	r3, #0
 1874 000c FB73     		strb	r3, [r7, #15]
1307:.\Generated_Source\PSoC5/USBFS.c **** 
1308:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1875              		.loc 1 1308 0
 1876 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1877 0010 002B     		cmp	r3, #0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 57


 1878 0012 0FD0     		beq	.L106
 1879              		.loc 1 1308 0 is_stmt 0 discriminator 1
 1880 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1881 0016 082B     		cmp	r3, #8
 1882 0018 0CD8     		bhi	.L106
1309:.\Generated_Source\PSoC5/USBFS.c ****     {
1310:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1883              		.loc 1 1310 0 is_stmt 1
 1884 001a FB79     		ldrb	r3, [r7, #7]
 1885 001c 013B     		subs	r3, r3, #1
 1886 001e DBB2     		uxtb	r3, r3
 1887 0020 1B01     		lsls	r3, r3, #4
 1888 0022 BB73     		strb	r3, [r7, #14]
1311:.\Generated_Source\PSoC5/USBFS.c ****         cr = CY_GET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri]) & USBFS_MODE_ACKD;
 1889              		.loc 1 1311 0
 1890 0024 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1891 0026 074B     		ldr	r3, .L108
 1892 0028 1344     		add	r3, r3, r2
 1893 002a 1B78     		ldrb	r3, [r3]
 1894 002c DBB2     		uxtb	r3, r3
 1895 002e 03F01003 		and	r3, r3, #16
 1896 0032 FB73     		strb	r3, [r7, #15]
 1897              	.L106:
1312:.\Generated_Source\PSoC5/USBFS.c ****     }
1313:.\Generated_Source\PSoC5/USBFS.c **** 
1314:.\Generated_Source\PSoC5/USBFS.c ****     return(cr);
 1898              		.loc 1 1314 0
 1899 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1315:.\Generated_Source\PSoC5/USBFS.c **** }
 1900              		.loc 1 1315 0
 1901 0036 1846     		mov	r0, r3
 1902 0038 1437     		adds	r7, r7, #20
 1903              		.cfi_def_cfa_offset 4
 1904 003a BD46     		mov	sp, r7
 1905              		.cfi_def_cfa_register 13
 1906              		@ sp needed
 1907 003c 5DF8047B 		ldr	r7, [sp], #4
 1908              		.cfi_restore 7
 1909              		.cfi_def_cfa_offset 0
 1910 0040 7047     		bx	lr
 1911              	.L109:
 1912 0042 00BF     		.align	2
 1913              	.L108:
 1914 0044 0E600040 		.word	1073766414
 1915              		.cfi_endproc
 1916              	.LFE18:
 1917              		.size	USBFS_GetEPAckState, .-USBFS_GetEPAckState
 1918              		.section	.text.USBFS_SetPowerStatus,"ax",%progbits
 1919              		.align	2
 1920              		.global	USBFS_SetPowerStatus
 1921              		.thumb
 1922              		.thumb_func
 1923              		.type	USBFS_SetPowerStatus, %function
 1924              	USBFS_SetPowerStatus:
 1925              	.LFB19:
1316:.\Generated_Source\PSoC5/USBFS.c **** 
1317:.\Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 58


1318:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1319:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_SetPowerStatus
1320:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1321:.\Generated_Source\PSoC5/USBFS.c **** *
1322:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1323:.\Generated_Source\PSoC5/USBFS.c **** *  Sets the device power status for reporting in the Get Device Status
1324:.\Generated_Source\PSoC5/USBFS.c **** *  request
1325:.\Generated_Source\PSoC5/USBFS.c **** *
1326:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1327:.\Generated_Source\PSoC5/USBFS.c **** *  powerStatus: USBFS_DEVICE_STATUS_BUS_POWERED(0) - Bus Powered,
1328:.\Generated_Source\PSoC5/USBFS.c **** *               USBFS_DEVICE_STATUS_SELF_POWERED(1) - Self Powered
1329:.\Generated_Source\PSoC5/USBFS.c **** *
1330:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1331:.\Generated_Source\PSoC5/USBFS.c **** *   None.
1332:.\Generated_Source\PSoC5/USBFS.c **** *
1333:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
1334:.\Generated_Source\PSoC5/USBFS.c **** *  USBFS_deviceStatus - set power status
1335:.\Generated_Source\PSoC5/USBFS.c **** *
1336:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
1337:.\Generated_Source\PSoC5/USBFS.c **** *  No.
1338:.\Generated_Source\PSoC5/USBFS.c **** *
1339:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1340:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_SetPowerStatus(uint8 powerStatus) 
1341:.\Generated_Source\PSoC5/USBFS.c **** {
 1926              		.loc 1 1341 0
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 8
 1929              		@ frame_needed = 1, uses_anonymous_args = 0
 1930              		@ link register save eliminated.
 1931 0000 80B4     		push	{r7}
 1932              		.cfi_def_cfa_offset 4
 1933              		.cfi_offset 7, -4
 1934 0002 83B0     		sub	sp, sp, #12
 1935              		.cfi_def_cfa_offset 16
 1936 0004 00AF     		add	r7, sp, #0
 1937              		.cfi_def_cfa_register 7
 1938 0006 0346     		mov	r3, r0
 1939 0008 FB71     		strb	r3, [r7, #7]
1342:.\Generated_Source\PSoC5/USBFS.c ****     if (powerStatus != USBFS_DEVICE_STATUS_BUS_POWERED)
 1940              		.loc 1 1342 0
 1941 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1942 000c 002B     		cmp	r3, #0
 1943 000e 08D0     		beq	.L111
1343:.\Generated_Source\PSoC5/USBFS.c ****     {
1344:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_deviceStatus |=  USBFS_DEVICE_STATUS_SELF_POWERED;
 1944              		.loc 1 1344 0
 1945 0010 0A4B     		ldr	r3, .L113
 1946 0012 1B78     		ldrb	r3, [r3]
 1947 0014 DBB2     		uxtb	r3, r3
 1948 0016 43F00103 		orr	r3, r3, #1
 1949 001a DAB2     		uxtb	r2, r3
 1950 001c 074B     		ldr	r3, .L113
 1951 001e 1A70     		strb	r2, [r3]
 1952 0020 07E0     		b	.L110
 1953              	.L111:
1345:.\Generated_Source\PSoC5/USBFS.c ****     }
1346:.\Generated_Source\PSoC5/USBFS.c ****     else
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 59


1347:.\Generated_Source\PSoC5/USBFS.c ****     {
1348:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_deviceStatus &=  ~USBFS_DEVICE_STATUS_SELF_POWERED;
 1954              		.loc 1 1348 0
 1955 0022 064B     		ldr	r3, .L113
 1956 0024 1B78     		ldrb	r3, [r3]
 1957 0026 DBB2     		uxtb	r3, r3
 1958 0028 23F00103 		bic	r3, r3, #1
 1959 002c DAB2     		uxtb	r2, r3
 1960 002e 034B     		ldr	r3, .L113
 1961 0030 1A70     		strb	r2, [r3]
 1962              	.L110:
1349:.\Generated_Source\PSoC5/USBFS.c ****     }
1350:.\Generated_Source\PSoC5/USBFS.c **** }
 1963              		.loc 1 1350 0
 1964 0032 0C37     		adds	r7, r7, #12
 1965              		.cfi_def_cfa_offset 4
 1966 0034 BD46     		mov	sp, r7
 1967              		.cfi_def_cfa_register 13
 1968              		@ sp needed
 1969 0036 5DF8047B 		ldr	r7, [sp], #4
 1970              		.cfi_restore 7
 1971              		.cfi_def_cfa_offset 0
 1972 003a 7047     		bx	lr
 1973              	.L114:
 1974              		.align	2
 1975              	.L113:
 1976 003c 00000000 		.word	USBFS_deviceStatus
 1977              		.cfi_endproc
 1978              	.LFE19:
 1979              		.size	USBFS_SetPowerStatus, .-USBFS_SetPowerStatus
 1980              		.section	.text.USBFS_RWUEnabled,"ax",%progbits
 1981              		.align	2
 1982              		.global	USBFS_RWUEnabled
 1983              		.thumb
 1984              		.thumb_func
 1985              		.type	USBFS_RWUEnabled, %function
 1986              	USBFS_RWUEnabled:
 1987              	.LFB20:
1351:.\Generated_Source\PSoC5/USBFS.c **** 
1352:.\Generated_Source\PSoC5/USBFS.c **** 
1353:.\Generated_Source\PSoC5/USBFS.c **** #if (USBFS_MON_VBUS == 1u)
1354:.\Generated_Source\PSoC5/USBFS.c **** 
1355:.\Generated_Source\PSoC5/USBFS.c ****     /*******************************************************************************
1356:.\Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_VBusPresent
1357:.\Generated_Source\PSoC5/USBFS.c ****     ********************************************************************************
1358:.\Generated_Source\PSoC5/USBFS.c ****     *
1359:.\Generated_Source\PSoC5/USBFS.c ****     * Summary:
1360:.\Generated_Source\PSoC5/USBFS.c ****     *  Determines VBUS presence for Self Powered Devices.
1361:.\Generated_Source\PSoC5/USBFS.c ****     *
1362:.\Generated_Source\PSoC5/USBFS.c ****     * Parameters:
1363:.\Generated_Source\PSoC5/USBFS.c ****     *  None.
1364:.\Generated_Source\PSoC5/USBFS.c ****     *
1365:.\Generated_Source\PSoC5/USBFS.c ****     * Return:
1366:.\Generated_Source\PSoC5/USBFS.c ****     *  1 if VBUS is present, otherwise 0.
1367:.\Generated_Source\PSoC5/USBFS.c ****     *
1368:.\Generated_Source\PSoC5/USBFS.c ****     *******************************************************************************/
1369:.\Generated_Source\PSoC5/USBFS.c ****     uint8 USBFS_VBusPresent(void) 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 60


1370:.\Generated_Source\PSoC5/USBFS.c ****     {
1371:.\Generated_Source\PSoC5/USBFS.c ****         return((CY_GET_REG8(USBFS_VBUS_PS_PTR) & USBFS_VBUS_MASK) ? 1u : 0u);
1372:.\Generated_Source\PSoC5/USBFS.c ****     }
1373:.\Generated_Source\PSoC5/USBFS.c **** 
1374:.\Generated_Source\PSoC5/USBFS.c **** #endif /* USBFS_MON_VBUS */
1375:.\Generated_Source\PSoC5/USBFS.c **** 
1376:.\Generated_Source\PSoC5/USBFS.c **** 
1377:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1378:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_RWUEnabled
1379:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1380:.\Generated_Source\PSoC5/USBFS.c **** *
1381:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1382:.\Generated_Source\PSoC5/USBFS.c **** *  Returns TRUE if Remote Wake Up is enabled, otherwise FALSE
1383:.\Generated_Source\PSoC5/USBFS.c **** *
1384:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1385:.\Generated_Source\PSoC5/USBFS.c **** *   None.
1386:.\Generated_Source\PSoC5/USBFS.c **** *
1387:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1388:.\Generated_Source\PSoC5/USBFS.c **** *  TRUE -  Remote Wake Up Enabled
1389:.\Generated_Source\PSoC5/USBFS.c **** *  FALSE - Remote Wake Up Disabled
1390:.\Generated_Source\PSoC5/USBFS.c **** *
1391:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
1392:.\Generated_Source\PSoC5/USBFS.c **** *  USBFS_deviceStatus - checked to determine remote status
1393:.\Generated_Source\PSoC5/USBFS.c **** *
1394:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_RWUEnabled(void) 
1396:.\Generated_Source\PSoC5/USBFS.c **** {
 1988              		.loc 1 1396 0
 1989              		.cfi_startproc
 1990              		@ args = 0, pretend = 0, frame = 8
 1991              		@ frame_needed = 1, uses_anonymous_args = 0
 1992              		@ link register save eliminated.
 1993 0000 80B4     		push	{r7}
 1994              		.cfi_def_cfa_offset 4
 1995              		.cfi_offset 7, -4
 1996 0002 83B0     		sub	sp, sp, #12
 1997              		.cfi_def_cfa_offset 16
 1998 0004 00AF     		add	r7, sp, #0
 1999              		.cfi_def_cfa_register 7
1397:.\Generated_Source\PSoC5/USBFS.c ****     uint8 result = USBFS_FALSE;
 2000              		.loc 1 1397 0
 2001 0006 0023     		movs	r3, #0
 2002 0008 FB71     		strb	r3, [r7, #7]
1398:.\Generated_Source\PSoC5/USBFS.c ****     if((USBFS_deviceStatus & USBFS_DEVICE_STATUS_REMOTE_WAKEUP) != 0u)
 2003              		.loc 1 1398 0
 2004 000a 084B     		ldr	r3, .L118
 2005 000c 1B78     		ldrb	r3, [r3]
 2006 000e DBB2     		uxtb	r3, r3
 2007 0010 03F00203 		and	r3, r3, #2
 2008 0014 002B     		cmp	r3, #0
 2009 0016 01D0     		beq	.L116
1399:.\Generated_Source\PSoC5/USBFS.c ****     {
1400:.\Generated_Source\PSoC5/USBFS.c ****         result = USBFS_TRUE;
 2010              		.loc 1 1400 0
 2011 0018 0123     		movs	r3, #1
 2012 001a FB71     		strb	r3, [r7, #7]
 2013              	.L116:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 61


1401:.\Generated_Source\PSoC5/USBFS.c ****     }
1402:.\Generated_Source\PSoC5/USBFS.c **** 
1403:.\Generated_Source\PSoC5/USBFS.c ****     return(result);
 2014              		.loc 1 1403 0
 2015 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1404:.\Generated_Source\PSoC5/USBFS.c **** }
 2016              		.loc 1 1404 0
 2017 001e 1846     		mov	r0, r3
 2018 0020 0C37     		adds	r7, r7, #12
 2019              		.cfi_def_cfa_offset 4
 2020 0022 BD46     		mov	sp, r7
 2021              		.cfi_def_cfa_register 13
 2022              		@ sp needed
 2023 0024 5DF8047B 		ldr	r7, [sp], #4
 2024              		.cfi_restore 7
 2025              		.cfi_def_cfa_offset 0
 2026 0028 7047     		bx	lr
 2027              	.L119:
 2028 002a 00BF     		.align	2
 2029              	.L118:
 2030 002c 00000000 		.word	USBFS_deviceStatus
 2031              		.cfi_endproc
 2032              	.LFE20:
 2033              		.size	USBFS_RWUEnabled, .-USBFS_RWUEnabled
 2034              		.text
 2035              	.Letext0:
 2036              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 2037              		.file 3 ".\\Generated_Source\\PSoC5\\USBFS.h"
 2038              		.section	.debug_info,"",%progbits
 2039              	.Ldebug_info0:
 2040 0000 7D060000 		.4byte	0x67d
 2041 0004 0400     		.2byte	0x4
 2042 0006 00000000 		.4byte	.Ldebug_abbrev0
 2043 000a 04       		.byte	0x4
 2044 000b 01       		.uleb128 0x1
 2045 000c D3020000 		.4byte	.LASF71
 2046 0010 01       		.byte	0x1
 2047 0011 AF000000 		.4byte	.LASF72
 2048 0015 7E010000 		.4byte	.LASF73
 2049 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2050 001d 00000000 		.4byte	0
 2051 0021 00000000 		.4byte	.Ldebug_line0
 2052 0025 02       		.uleb128 0x2
 2053 0026 01       		.byte	0x1
 2054 0027 06       		.byte	0x6
 2055 0028 97000000 		.4byte	.LASF0
 2056 002c 02       		.uleb128 0x2
 2057 002d 01       		.byte	0x1
 2058 002e 08       		.byte	0x8
 2059 002f 9F030000 		.4byte	.LASF1
 2060 0033 02       		.uleb128 0x2
 2061 0034 02       		.byte	0x2
 2062 0035 05       		.byte	0x5
 2063 0036 AD030000 		.4byte	.LASF2
 2064 003a 02       		.uleb128 0x2
 2065 003b 02       		.byte	0x2
 2066 003c 07       		.byte	0x7
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 62


 2067 003d 7B020000 		.4byte	.LASF3
 2068 0041 02       		.uleb128 0x2
 2069 0042 04       		.byte	0x4
 2070 0043 05       		.byte	0x5
 2071 0044 48010000 		.4byte	.LASF4
 2072 0048 02       		.uleb128 0x2
 2073 0049 04       		.byte	0x4
 2074 004a 07       		.byte	0x7
 2075 004b 5B020000 		.4byte	.LASF5
 2076 004f 02       		.uleb128 0x2
 2077 0050 08       		.byte	0x8
 2078 0051 05       		.byte	0x5
 2079 0052 89000000 		.4byte	.LASF6
 2080 0056 02       		.uleb128 0x2
 2081 0057 08       		.byte	0x8
 2082 0058 07       		.byte	0x7
 2083 0059 39000000 		.4byte	.LASF7
 2084 005d 03       		.uleb128 0x3
 2085 005e 04       		.byte	0x4
 2086 005f 05       		.byte	0x5
 2087 0060 696E7400 		.ascii	"int\000"
 2088 0064 02       		.uleb128 0x2
 2089 0065 04       		.byte	0x4
 2090 0066 07       		.byte	0x7
 2091 0067 42020000 		.4byte	.LASF8
 2092 006b 04       		.uleb128 0x4
 2093 006c 68010000 		.4byte	.LASF9
 2094 0070 02       		.byte	0x2
 2095 0071 5B       		.byte	0x5b
 2096 0072 2C000000 		.4byte	0x2c
 2097 0076 04       		.uleb128 0x4
 2098 0077 06000000 		.4byte	.LASF10
 2099 007b 02       		.byte	0x2
 2100 007c 5C       		.byte	0x5c
 2101 007d 3A000000 		.4byte	0x3a
 2102 0081 04       		.uleb128 0x4
 2103 0082 E7010000 		.4byte	.LASF11
 2104 0086 02       		.byte	0x2
 2105 0087 5D       		.byte	0x5d
 2106 0088 48000000 		.4byte	0x48
 2107 008c 02       		.uleb128 0x2
 2108 008d 04       		.byte	0x4
 2109 008e 04       		.byte	0x4
 2110 008f 6C030000 		.4byte	.LASF12
 2111 0093 02       		.uleb128 0x2
 2112 0094 08       		.byte	0x8
 2113 0095 04       		.byte	0x4
 2114 0096 77010000 		.4byte	.LASF13
 2115 009a 02       		.uleb128 0x2
 2116 009b 01       		.byte	0x1
 2117 009c 08       		.byte	0x8
 2118 009d 25040000 		.4byte	.LASF14
 2119 00a1 04       		.uleb128 0x4
 2120 00a2 86030000 		.4byte	.LASF15
 2121 00a6 02       		.byte	0x2
 2122 00a7 F0       		.byte	0xf0
 2123 00a8 AC000000 		.4byte	0xac
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 63


 2124 00ac 05       		.uleb128 0x5
 2125 00ad 6B000000 		.4byte	0x6b
 2126 00b1 04       		.uleb128 0x4
 2127 00b2 B3020000 		.4byte	.LASF16
 2128 00b6 02       		.byte	0x2
 2129 00b7 F2       		.byte	0xf2
 2130 00b8 BC000000 		.4byte	0xbc
 2131 00bc 05       		.uleb128 0x5
 2132 00bd 81000000 		.4byte	0x81
 2133 00c1 02       		.uleb128 0x2
 2134 00c2 04       		.byte	0x4
 2135 00c3 07       		.byte	0x7
 2136 00c4 C3020000 		.4byte	.LASF17
 2137 00c8 06       		.uleb128 0x6
 2138 00c9 51040000 		.4byte	.LASF74
 2139 00cd 0C       		.byte	0xc
 2140 00ce 03       		.byte	0x3
 2141 00cf 79       		.byte	0x79
 2142 00d0 41010000 		.4byte	0x141
 2143 00d4 07       		.uleb128 0x7
 2144 00d5 CC020000 		.4byte	.LASF18
 2145 00d9 03       		.byte	0x3
 2146 00da 7B       		.byte	0x7b
 2147 00db 6B000000 		.4byte	0x6b
 2148 00df 00       		.byte	0
 2149 00e0 07       		.uleb128 0x7
 2150 00e1 72030000 		.4byte	.LASF19
 2151 00e5 03       		.byte	0x3
 2152 00e6 7C       		.byte	0x7c
 2153 00e7 6B000000 		.4byte	0x6b
 2154 00eb 01       		.byte	0x1
 2155 00ec 07       		.uleb128 0x7
 2156 00ed B9020000 		.4byte	.LASF20
 2157 00f1 03       		.byte	0x3
 2158 00f2 7D       		.byte	0x7d
 2159 00f3 6B000000 		.4byte	0x6b
 2160 00f7 02       		.byte	0x2
 2161 00f8 07       		.uleb128 0x7
 2162 00f9 6E010000 		.4byte	.LASF21
 2163 00fd 03       		.byte	0x3
 2164 00fe 7E       		.byte	0x7e
 2165 00ff 6B000000 		.4byte	0x6b
 2166 0103 03       		.byte	0x3
 2167 0104 07       		.uleb128 0x7
 2168 0105 64000000 		.4byte	.LASF22
 2169 0109 03       		.byte	0x3
 2170 010a 7F       		.byte	0x7f
 2171 010b 6B000000 		.4byte	0x6b
 2172 010f 04       		.byte	0x4
 2173 0110 07       		.uleb128 0x7
 2174 0111 1C020000 		.4byte	.LASF23
 2175 0115 03       		.byte	0x3
 2176 0116 80       		.byte	0x80
 2177 0117 6B000000 		.4byte	0x6b
 2178 011b 05       		.byte	0x5
 2179 011c 07       		.uleb128 0x7
 2180 011d 46040000 		.4byte	.LASF24
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 64


 2181 0121 03       		.byte	0x3
 2182 0122 81       		.byte	0x81
 2183 0123 76000000 		.4byte	0x76
 2184 0127 06       		.byte	0x6
 2185 0128 07       		.uleb128 0x7
 2186 0129 2F040000 		.4byte	.LASF25
 2187 012d 03       		.byte	0x3
 2188 012e 82       		.byte	0x82
 2189 012f 76000000 		.4byte	0x76
 2190 0133 08       		.byte	0x8
 2191 0134 07       		.uleb128 0x7
 2192 0135 8E020000 		.4byte	.LASF26
 2193 0139 03       		.byte	0x3
 2194 013a 83       		.byte	0x83
 2195 013b 6B000000 		.4byte	0x6b
 2196 013f 0A       		.byte	0xa
 2197 0140 00       		.byte	0
 2198 0141 04       		.uleb128 0x4
 2199 0142 F5030000 		.4byte	.LASF27
 2200 0146 03       		.byte	0x3
 2201 0147 84       		.byte	0x84
 2202 0148 C8000000 		.4byte	0xc8
 2203 014c 08       		.uleb128 0x8
 2204 014d 3A040000 		.4byte	.LASF30
 2205 0151 01       		.byte	0x1
 2206 0152 A5       		.byte	0xa5
 2207 0153 00000000 		.4byte	.LFB0
 2208 0157 38000000 		.4byte	.LFE0-.LFB0
 2209 015b 01       		.uleb128 0x1
 2210 015c 9C       		.byte	0x9c
 2211 015d 7E010000 		.4byte	0x17e
 2212 0161 09       		.uleb128 0x9
 2213 0162 82000000 		.4byte	.LASF28
 2214 0166 01       		.byte	0x1
 2215 0167 A5       		.byte	0xa5
 2216 0168 6B000000 		.4byte	0x6b
 2217 016c 02       		.uleb128 0x2
 2218 016d 91       		.byte	0x91
 2219 016e 77       		.sleb128 -9
 2220 016f 09       		.uleb128 0x9
 2221 0170 2A040000 		.4byte	.LASF29
 2222 0174 01       		.byte	0x1
 2223 0175 A5       		.byte	0xa5
 2224 0176 6B000000 		.4byte	0x6b
 2225 017a 02       		.uleb128 0x2
 2226 017b 91       		.byte	0x91
 2227 017c 76       		.sleb128 -10
 2228 017d 00       		.byte	0
 2229 017e 08       		.uleb128 0x8
 2230 017f 61030000 		.4byte	.LASF31
 2231 0183 01       		.byte	0x1
 2232 0184 C2       		.byte	0xc2
 2233 0185 00000000 		.4byte	.LFB1
 2234 0189 D4010000 		.4byte	.LFE1-.LFB1
 2235 018d 01       		.uleb128 0x1
 2236 018e 9C       		.byte	0x9c
 2237 018f AE010000 		.4byte	0x1ae
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 65


 2238 0193 0A       		.uleb128 0xa
 2239 0194 9D040000 		.4byte	.LASF32
 2240 0198 01       		.byte	0x1
 2241 0199 C4       		.byte	0xc4
 2242 019a 6B000000 		.4byte	0x6b
 2243 019e 02       		.uleb128 0x2
 2244 019f 91       		.byte	0x91
 2245 01a0 75       		.sleb128 -11
 2246 01a1 0B       		.uleb128 0xb
 2247 01a2 6900     		.ascii	"i\000"
 2248 01a4 01       		.byte	0x1
 2249 01a5 C6       		.byte	0xc6
 2250 01a6 76000000 		.4byte	0x76
 2251 01aa 02       		.uleb128 0x2
 2252 01ab 91       		.byte	0x91
 2253 01ac 76       		.sleb128 -10
 2254 01ad 00       		.byte	0
 2255 01ae 0C       		.uleb128 0xc
 2256 01af EE010000 		.4byte	.LASF33
 2257 01b3 01       		.byte	0x1
 2258 01b4 8B01     		.2byte	0x18b
 2259 01b6 00000000 		.4byte	.LFB2
 2260 01ba 18010000 		.4byte	.LFE2-.LFB2
 2261 01be 01       		.uleb128 0x1
 2262 01bf 9C       		.byte	0x9c
 2263 01c0 F2010000 		.4byte	0x1f2
 2264 01c4 0D       		.uleb128 0xd
 2265 01c5 82000000 		.4byte	.LASF28
 2266 01c9 01       		.byte	0x1
 2267 01ca 8B01     		.2byte	0x18b
 2268 01cc 6B000000 		.4byte	0x6b
 2269 01d0 02       		.uleb128 0x2
 2270 01d1 91       		.byte	0x91
 2271 01d2 6F       		.sleb128 -17
 2272 01d3 0D       		.uleb128 0xd
 2273 01d4 2A040000 		.4byte	.LASF29
 2274 01d8 01       		.byte	0x1
 2275 01d9 8B01     		.2byte	0x18b
 2276 01db 6B000000 		.4byte	0x6b
 2277 01df 02       		.uleb128 0x2
 2278 01e0 91       		.byte	0x91
 2279 01e1 6E       		.sleb128 -18
 2280 01e2 0E       		.uleb128 0xe
 2281 01e3 8E020000 		.4byte	.LASF26
 2282 01e7 01       		.byte	0x1
 2283 01e8 9201     		.2byte	0x192
 2284 01ea 6B000000 		.4byte	0x6b
 2285 01ee 02       		.uleb128 0x2
 2286 01ef 91       		.byte	0x91
 2287 01f0 77       		.sleb128 -9
 2288 01f1 00       		.byte	0
 2289 01f2 0F       		.uleb128 0xf
 2290 01f3 87040000 		.4byte	.LASF75
 2291 01f7 01       		.byte	0x1
 2292 01f8 1C02     		.2byte	0x21c
 2293 01fa 00000000 		.4byte	.LFB3
 2294 01fe 88000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 66


 2295 0202 01       		.uleb128 0x1
 2296 0203 9C       		.byte	0x9c
 2297 0204 18020000 		.4byte	0x218
 2298 0208 0E       		.uleb128 0xe
 2299 0209 8E020000 		.4byte	.LASF26
 2300 020d 01       		.byte	0x1
 2301 020e 2202     		.2byte	0x222
 2302 0210 6B000000 		.4byte	0x6b
 2303 0214 02       		.uleb128 0x2
 2304 0215 91       		.byte	0x91
 2305 0216 77       		.sleb128 -9
 2306 0217 00       		.byte	0
 2307 0218 10       		.uleb128 0x10
 2308 0219 3D010000 		.4byte	.LASF76
 2309 021d 01       		.byte	0x1
 2310 021e 5E02     		.2byte	0x25e
 2311 0220 00000000 		.4byte	.LFB4
 2312 0224 C4000000 		.4byte	.LFE4-.LFB4
 2313 0228 01       		.uleb128 0x1
 2314 0229 9C       		.byte	0x9c
 2315 022a 11       		.uleb128 0x11
 2316 022b AE040000 		.4byte	.LASF34
 2317 022f 01       		.byte	0x1
 2318 0230 A902     		.2byte	0x2a9
 2319 0232 6B000000 		.4byte	0x6b
 2320 0236 00000000 		.4byte	.LFB5
 2321 023a 34000000 		.4byte	.LFE5-.LFB5
 2322 023e 01       		.uleb128 0x1
 2323 023f 9C       		.byte	0x9c
 2324 0240 52020000 		.4byte	0x252
 2325 0244 12       		.uleb128 0x12
 2326 0245 7200     		.ascii	"r\000"
 2327 0247 01       		.byte	0x1
 2328 0248 AB02     		.2byte	0x2ab
 2329 024a 6B000000 		.4byte	0x6b
 2330 024e 02       		.uleb128 0x2
 2331 024f 91       		.byte	0x91
 2332 0250 77       		.sleb128 -9
 2333 0251 00       		.byte	0
 2334 0252 13       		.uleb128 0x13
 2335 0253 51010000 		.4byte	.LASF77
 2336 0257 01       		.byte	0x1
 2337 0258 C202     		.2byte	0x2c2
 2338 025a 6B000000 		.4byte	0x6b
 2339 025e 00000000 		.4byte	.LFB6
 2340 0262 18000000 		.4byte	.LFE6-.LFB6
 2341 0266 01       		.uleb128 0x1
 2342 0267 9C       		.byte	0x9c
 2343 0268 11       		.uleb128 0x11
 2344 0269 D0000000 		.4byte	.LASF35
 2345 026d 01       		.byte	0x1
 2346 026e DC02     		.2byte	0x2dc
 2347 0270 6B000000 		.4byte	0x6b
 2348 0274 00000000 		.4byte	.LFB7
 2349 0278 34000000 		.4byte	.LFE7-.LFB7
 2350 027c 01       		.uleb128 0x1
 2351 027d 9C       		.byte	0x9c
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 67


 2352 027e 92020000 		.4byte	0x292
 2353 0282 12       		.uleb128 0x12
 2354 0283 72657300 		.ascii	"res\000"
 2355 0287 01       		.byte	0x1
 2356 0288 DE02     		.2byte	0x2de
 2357 028a 6B000000 		.4byte	0x6b
 2358 028e 02       		.uleb128 0x2
 2359 028f 91       		.byte	0x91
 2360 0290 77       		.sleb128 -9
 2361 0291 00       		.byte	0
 2362 0292 11       		.uleb128 0x11
 2363 0293 E4040000 		.4byte	.LASF36
 2364 0297 01       		.byte	0x1
 2365 0298 F802     		.2byte	0x2f8
 2366 029a 6B000000 		.4byte	0x6b
 2367 029e 00000000 		.4byte	.LFB8
 2368 02a2 24000000 		.4byte	.LFE8-.LFB8
 2369 02a6 01       		.uleb128 0x1
 2370 02a7 9C       		.byte	0x9c
 2371 02a8 BC020000 		.4byte	0x2bc
 2372 02ac 0D       		.uleb128 0xd
 2373 02ad 69000000 		.4byte	.LASF37
 2374 02b1 01       		.byte	0x1
 2375 02b2 F802     		.2byte	0x2f8
 2376 02b4 6B000000 		.4byte	0x6b
 2377 02b8 02       		.uleb128 0x2
 2378 02b9 91       		.byte	0x91
 2379 02ba 77       		.sleb128 -9
 2380 02bb 00       		.byte	0
 2381 02bc 11       		.uleb128 0x11
 2382 02bd 76040000 		.4byte	.LASF38
 2383 02c1 01       		.byte	0x1
 2384 02c2 0D03     		.2byte	0x30d
 2385 02c4 6B000000 		.4byte	0x6b
 2386 02c8 00000000 		.4byte	.LFB9
 2387 02cc 2C000000 		.4byte	.LFE9-.LFB9
 2388 02d0 01       		.uleb128 0x1
 2389 02d1 9C       		.byte	0x9c
 2390 02d2 E6020000 		.4byte	0x2e6
 2391 02d6 0D       		.uleb128 0xd
 2392 02d7 79000000 		.4byte	.LASF39
 2393 02db 01       		.byte	0x1
 2394 02dc 0D03     		.2byte	0x30d
 2395 02de 6B000000 		.4byte	0x6b
 2396 02e2 02       		.uleb128 0x2
 2397 02e3 91       		.byte	0x91
 2398 02e4 77       		.sleb128 -9
 2399 02e5 00       		.byte	0
 2400 02e6 11       		.uleb128 0x11
 2401 02e7 FE040000 		.4byte	.LASF40
 2402 02eb 01       		.byte	0x1
 2403 02ec 2603     		.2byte	0x326
 2404 02ee 76000000 		.4byte	0x76
 2405 02f2 00000000 		.4byte	.LFB10
 2406 02f6 64000000 		.4byte	.LFE10-.LFB10
 2407 02fa 01       		.uleb128 0x1
 2408 02fb 9C       		.byte	0x9c
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 68


 2409 02fc 2D030000 		.4byte	0x32d
 2410 0300 0D       		.uleb128 0xd
 2411 0301 79000000 		.4byte	.LASF39
 2412 0305 01       		.byte	0x1
 2413 0306 2603     		.2byte	0x326
 2414 0308 6B000000 		.4byte	0x6b
 2415 030c 02       		.uleb128 0x2
 2416 030d 91       		.byte	0x91
 2417 030e 6F       		.sleb128 -17
 2418 030f 12       		.uleb128 0x12
 2419 0310 726900   		.ascii	"ri\000"
 2420 0313 01       		.byte	0x1
 2421 0314 2803     		.2byte	0x328
 2422 0316 6B000000 		.4byte	0x6b
 2423 031a 02       		.uleb128 0x2
 2424 031b 91       		.byte	0x91
 2425 031c 75       		.sleb128 -11
 2426 031d 0E       		.uleb128 0xe
 2427 031e 00000000 		.4byte	.LASF41
 2428 0322 01       		.byte	0x1
 2429 0323 2903     		.2byte	0x329
 2430 0325 76000000 		.4byte	0x76
 2431 0329 02       		.uleb128 0x2
 2432 032a 91       		.byte	0x91
 2433 032b 76       		.sleb128 -10
 2434 032c 00       		.byte	0
 2435 032d 0C       		.uleb128 0xc
 2436 032e D6010000 		.4byte	.LASF42
 2437 0332 01       		.byte	0x1
 2438 0333 4D03     		.2byte	0x34d
 2439 0335 00000000 		.4byte	.LFB11
 2440 0339 00010000 		.4byte	.LFE11-.LFB11
 2441 033d 01       		.uleb128 0x1
 2442 033e 9C       		.byte	0x9c
 2443 033f 80030000 		.4byte	0x380
 2444 0343 0D       		.uleb128 0xd
 2445 0344 79000000 		.4byte	.LASF39
 2446 0348 01       		.byte	0x1
 2447 0349 4D03     		.2byte	0x34d
 2448 034b 6B000000 		.4byte	0x6b
 2449 034f 02       		.uleb128 0x2
 2450 0350 91       		.byte	0x91
 2451 0351 67       		.sleb128 -25
 2452 0352 0D       		.uleb128 0xd
 2453 0353 02020000 		.4byte	.LASF43
 2454 0357 01       		.byte	0x1
 2455 0358 4D03     		.2byte	0x34d
 2456 035a 80030000 		.4byte	0x380
 2457 035e 02       		.uleb128 0x2
 2458 035f 91       		.byte	0x91
 2459 0360 60       		.sleb128 -32
 2460 0361 12       		.uleb128 0x12
 2461 0362 73726300 		.ascii	"src\000"
 2462 0366 01       		.byte	0x1
 2463 0367 4F03     		.2byte	0x34f
 2464 0369 76000000 		.4byte	0x76
 2465 036d 02       		.uleb128 0x2
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 69


 2466 036e 91       		.byte	0x91
 2467 036f 6E       		.sleb128 -18
 2468 0370 12       		.uleb128 0x12
 2469 0371 64737400 		.ascii	"dst\000"
 2470 0375 01       		.byte	0x1
 2471 0376 5003     		.2byte	0x350
 2472 0378 76000000 		.4byte	0x76
 2473 037c 02       		.uleb128 0x2
 2474 037d 91       		.byte	0x91
 2475 037e 6C       		.sleb128 -20
 2476 037f 00       		.byte	0
 2477 0380 14       		.uleb128 0x14
 2478 0381 04       		.byte	0x4
 2479 0382 6B000000 		.4byte	0x6b
 2480 0386 0C       		.uleb128 0xc
 2481 0387 33020000 		.4byte	.LASF44
 2482 038b 01       		.byte	0x1
 2483 038c AF03     		.2byte	0x3af
 2484 038e 00000000 		.4byte	.LFB12
 2485 0392 64000000 		.4byte	.LFE12-.LFB12
 2486 0396 01       		.uleb128 0x1
 2487 0397 9C       		.byte	0x9c
 2488 0398 B9030000 		.4byte	0x3b9
 2489 039c 0D       		.uleb128 0xd
 2490 039d 79000000 		.4byte	.LASF39
 2491 03a1 01       		.byte	0x1
 2492 03a2 AF03     		.2byte	0x3af
 2493 03a4 6B000000 		.4byte	0x6b
 2494 03a8 02       		.uleb128 0x2
 2495 03a9 91       		.byte	0x91
 2496 03aa 6F       		.sleb128 -17
 2497 03ab 12       		.uleb128 0x12
 2498 03ac 6900     		.ascii	"i\000"
 2499 03ae 01       		.byte	0x1
 2500 03af B103     		.2byte	0x3b1
 2501 03b1 6B000000 		.4byte	0x6b
 2502 03b5 02       		.uleb128 0x2
 2503 03b6 91       		.byte	0x91
 2504 03b7 77       		.sleb128 -9
 2505 03b8 00       		.byte	0
 2506 03b9 0C       		.uleb128 0xc
 2507 03ba D5040000 		.4byte	.LASF45
 2508 03be 01       		.byte	0x1
 2509 03bf D903     		.2byte	0x3d9
 2510 03c1 00000000 		.4byte	.LFB13
 2511 03c5 64010000 		.4byte	.LFE13-.LFB13
 2512 03c9 01       		.uleb128 0x1
 2513 03ca 9C       		.byte	0x9c
 2514 03cb 18040000 		.4byte	0x418
 2515 03cf 0D       		.uleb128 0xd
 2516 03d0 79000000 		.4byte	.LASF39
 2517 03d4 01       		.byte	0x1
 2518 03d5 D903     		.2byte	0x3d9
 2519 03d7 6B000000 		.4byte	0x6b
 2520 03db 02       		.uleb128 0x2
 2521 03dc 91       		.byte	0x91
 2522 03dd 67       		.sleb128 -25
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 70


 2523 03de 0D       		.uleb128 0xd
 2524 03df 02020000 		.4byte	.LASF43
 2525 03e3 01       		.byte	0x1
 2526 03e4 D903     		.2byte	0x3d9
 2527 03e6 80030000 		.4byte	0x380
 2528 03ea 02       		.uleb128 0x2
 2529 03eb 91       		.byte	0x91
 2530 03ec 60       		.sleb128 -32
 2531 03ed 0D       		.uleb128 0xd
 2532 03ee 1E040000 		.4byte	.LASF46
 2533 03f2 01       		.byte	0x1
 2534 03f3 D903     		.2byte	0x3d9
 2535 03f5 76000000 		.4byte	0x76
 2536 03f9 02       		.uleb128 0x2
 2537 03fa 91       		.byte	0x91
 2538 03fb 64       		.sleb128 -28
 2539 03fc 12       		.uleb128 0x12
 2540 03fd 726900   		.ascii	"ri\000"
 2541 0400 01       		.byte	0x1
 2542 0401 DC03     		.2byte	0x3dc
 2543 0403 6B000000 		.4byte	0x6b
 2544 0407 02       		.uleb128 0x2
 2545 0408 91       		.byte	0x91
 2546 0409 6F       		.sleb128 -17
 2547 040a 12       		.uleb128 0x12
 2548 040b 7000     		.ascii	"p\000"
 2549 040d 01       		.byte	0x1
 2550 040e DD03     		.2byte	0x3dd
 2551 0410 80030000 		.4byte	0x380
 2552 0414 02       		.uleb128 0x2
 2553 0415 91       		.byte	0x91
 2554 0416 68       		.sleb128 -24
 2555 0417 00       		.byte	0
 2556 0418 15       		.uleb128 0x15
 2557 0419 23020000 		.4byte	.LASF47
 2558 041d 01       		.byte	0x1
 2559 041e 5B04     		.2byte	0x45b
 2560 0420 76000000 		.4byte	0x76
 2561 0424 00000000 		.4byte	.LFB14
 2562 0428 D0000000 		.4byte	.LFE14-.LFB14
 2563 042c 01       		.uleb128 0x1
 2564 042d 9C       		.byte	0x9c
 2565 042e 7B040000 		.4byte	0x47b
 2566 0432 0D       		.uleb128 0xd
 2567 0433 79000000 		.4byte	.LASF39
 2568 0437 01       		.byte	0x1
 2569 0438 5B04     		.2byte	0x45b
 2570 043a 6B000000 		.4byte	0x6b
 2571 043e 02       		.uleb128 0x2
 2572 043f 91       		.byte	0x91
 2573 0440 6F       		.sleb128 -17
 2574 0441 0D       		.uleb128 0xd
 2575 0442 02020000 		.4byte	.LASF43
 2576 0446 01       		.byte	0x1
 2577 0447 5B04     		.2byte	0x45b
 2578 0449 80030000 		.4byte	0x380
 2579 044d 02       		.uleb128 0x2
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 71


 2580 044e 91       		.byte	0x91
 2581 044f 68       		.sleb128 -24
 2582 0450 0D       		.uleb128 0xd
 2583 0451 1E040000 		.4byte	.LASF46
 2584 0455 01       		.byte	0x1
 2585 0456 5B04     		.2byte	0x45b
 2586 0458 76000000 		.4byte	0x76
 2587 045c 02       		.uleb128 0x2
 2588 045d 91       		.byte	0x91
 2589 045e 6C       		.sleb128 -20
 2590 045f 12       		.uleb128 0x12
 2591 0460 726900   		.ascii	"ri\000"
 2592 0463 01       		.byte	0x1
 2593 0464 5E04     		.2byte	0x45e
 2594 0466 6B000000 		.4byte	0x6b
 2595 046a 02       		.uleb128 0x2
 2596 046b 91       		.byte	0x91
 2597 046c 77       		.sleb128 -9
 2598 046d 12       		.uleb128 0x12
 2599 046e 7000     		.ascii	"p\000"
 2600 0470 01       		.byte	0x1
 2601 0471 5F04     		.2byte	0x45f
 2602 0473 80030000 		.4byte	0x380
 2603 0477 02       		.uleb128 0x2
 2604 0478 91       		.byte	0x91
 2605 0479 70       		.sleb128 -16
 2606 047a 00       		.byte	0
 2607 047b 16       		.uleb128 0x16
 2608 047c B7030000 		.4byte	.LASF48
 2609 0480 01       		.byte	0x1
 2610 0481 C504     		.2byte	0x4c5
 2611 0483 00000000 		.4byte	.LFB15
 2612 0487 60000000 		.4byte	.LFE15-.LFB15
 2613 048b 01       		.uleb128 0x1
 2614 048c 9C       		.byte	0x9c
 2615 048d AF040000 		.4byte	0x4af
 2616 0491 0D       		.uleb128 0xd
 2617 0492 79000000 		.4byte	.LASF39
 2618 0496 01       		.byte	0x1
 2619 0497 C504     		.2byte	0x4c5
 2620 0499 6B000000 		.4byte	0x6b
 2621 049d 02       		.uleb128 0x2
 2622 049e 91       		.byte	0x91
 2623 049f 6F       		.sleb128 -17
 2624 04a0 12       		.uleb128 0x12
 2625 04a1 726900   		.ascii	"ri\000"
 2626 04a4 01       		.byte	0x1
 2627 04a5 C704     		.2byte	0x4c7
 2628 04a7 6B000000 		.4byte	0x6b
 2629 04ab 02       		.uleb128 0x2
 2630 04ac 91       		.byte	0x91
 2631 04ad 77       		.sleb128 -9
 2632 04ae 00       		.byte	0
 2633 04af 16       		.uleb128 0x16
 2634 04b0 C2040000 		.4byte	.LASF49
 2635 04b4 01       		.byte	0x1
 2636 04b5 E304     		.2byte	0x4e3
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 72


 2637 04b7 00000000 		.4byte	.LFB16
 2638 04bb 38000000 		.4byte	.LFE16-.LFB16
 2639 04bf 01       		.uleb128 0x1
 2640 04c0 9C       		.byte	0x9c
 2641 04c1 E3040000 		.4byte	0x4e3
 2642 04c5 0D       		.uleb128 0xd
 2643 04c6 79000000 		.4byte	.LASF39
 2644 04ca 01       		.byte	0x1
 2645 04cb E304     		.2byte	0x4e3
 2646 04cd 6B000000 		.4byte	0x6b
 2647 04d1 02       		.uleb128 0x2
 2648 04d2 91       		.byte	0x91
 2649 04d3 6F       		.sleb128 -17
 2650 04d4 12       		.uleb128 0x12
 2651 04d5 726900   		.ascii	"ri\000"
 2652 04d8 01       		.byte	0x1
 2653 04d9 E504     		.2byte	0x4e5
 2654 04db 6B000000 		.4byte	0x6b
 2655 04df 02       		.uleb128 0x2
 2656 04e0 91       		.byte	0x91
 2657 04e1 77       		.sleb128 -9
 2658 04e2 00       		.byte	0
 2659 04e3 16       		.uleb128 0x16
 2660 04e4 2D000000 		.4byte	.LASF50
 2661 04e8 01       		.byte	0x1
 2662 04e9 0205     		.2byte	0x502
 2663 04eb 00000000 		.4byte	.LFB17
 2664 04ef 20000000 		.4byte	.LFE17-.LFB17
 2665 04f3 01       		.uleb128 0x1
 2666 04f4 9C       		.byte	0x9c
 2667 04f5 09050000 		.4byte	0x509
 2668 04f9 0D       		.uleb128 0xd
 2669 04fa 17040000 		.4byte	.LASF51
 2670 04fe 01       		.byte	0x1
 2671 04ff 0205     		.2byte	0x502
 2672 0501 6B000000 		.4byte	0x6b
 2673 0505 02       		.uleb128 0x2
 2674 0506 91       		.byte	0x91
 2675 0507 77       		.sleb128 -9
 2676 0508 00       		.byte	0
 2677 0509 11       		.uleb128 0x11
 2678 050a 50000000 		.4byte	.LASF52
 2679 050e 01       		.byte	0x1
 2680 050f 1705     		.2byte	0x517
 2681 0511 6B000000 		.4byte	0x6b
 2682 0515 00000000 		.4byte	.LFB18
 2683 0519 48000000 		.4byte	.LFE18-.LFB18
 2684 051d 01       		.uleb128 0x1
 2685 051e 9C       		.byte	0x9c
 2686 051f 4F050000 		.4byte	0x54f
 2687 0523 0D       		.uleb128 0xd
 2688 0524 79000000 		.4byte	.LASF39
 2689 0528 01       		.byte	0x1
 2690 0529 1705     		.2byte	0x517
 2691 052b 6B000000 		.4byte	0x6b
 2692 052f 02       		.uleb128 0x2
 2693 0530 91       		.byte	0x91
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 73


 2694 0531 6F       		.sleb128 -17
 2695 0532 12       		.uleb128 0x12
 2696 0533 726900   		.ascii	"ri\000"
 2697 0536 01       		.byte	0x1
 2698 0537 1905     		.2byte	0x519
 2699 0539 6B000000 		.4byte	0x6b
 2700 053d 02       		.uleb128 0x2
 2701 053e 91       		.byte	0x91
 2702 053f 76       		.sleb128 -10
 2703 0540 12       		.uleb128 0x12
 2704 0541 637200   		.ascii	"cr\000"
 2705 0544 01       		.byte	0x1
 2706 0545 1A05     		.2byte	0x51a
 2707 0547 6B000000 		.4byte	0x6b
 2708 054b 02       		.uleb128 0x2
 2709 054c 91       		.byte	0x91
 2710 054d 77       		.sleb128 -9
 2711 054e 00       		.byte	0
 2712 054f 16       		.uleb128 0x16
 2713 0550 28010000 		.4byte	.LASF53
 2714 0554 01       		.byte	0x1
 2715 0555 3C05     		.2byte	0x53c
 2716 0557 00000000 		.4byte	.LFB19
 2717 055b 40000000 		.4byte	.LFE19-.LFB19
 2718 055f 01       		.uleb128 0x1
 2719 0560 9C       		.byte	0x9c
 2720 0561 75050000 		.4byte	0x575
 2721 0565 0D       		.uleb128 0xd
 2722 0566 4F020000 		.4byte	.LASF54
 2723 056a 01       		.byte	0x1
 2724 056b 3C05     		.2byte	0x53c
 2725 056d 6B000000 		.4byte	0x6b
 2726 0571 02       		.uleb128 0x2
 2727 0572 91       		.byte	0x91
 2728 0573 77       		.sleb128 -9
 2729 0574 00       		.byte	0
 2730 0575 11       		.uleb128 0x11
 2731 0576 17010000 		.4byte	.LASF55
 2732 057a 01       		.byte	0x1
 2733 057b 7305     		.2byte	0x573
 2734 057d 6B000000 		.4byte	0x6b
 2735 0581 00000000 		.4byte	.LFB20
 2736 0585 30000000 		.4byte	.LFE20-.LFB20
 2737 0589 01       		.uleb128 0x1
 2738 058a 9C       		.byte	0x9c
 2739 058b 9F050000 		.4byte	0x59f
 2740 058f 0E       		.uleb128 0xe
 2741 0590 0F050000 		.4byte	.LASF56
 2742 0594 01       		.byte	0x1
 2743 0595 7505     		.2byte	0x575
 2744 0597 6B000000 		.4byte	0x6b
 2745 059b 02       		.uleb128 0x2
 2746 059c 91       		.byte	0x91
 2747 059d 77       		.sleb128 -9
 2748 059e 00       		.byte	0
 2749 059f 17       		.uleb128 0x17
 2750 05a0 08020000 		.4byte	.LASF57
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 74


 2751 05a4 01       		.byte	0x1
 2752 05a5 35       		.byte	0x35
 2753 05a6 AC000000 		.4byte	0xac
 2754 05aa 17       		.uleb128 0x17
 2755 05ab 01010000 		.4byte	.LASF58
 2756 05af 01       		.byte	0x1
 2757 05b0 36       		.byte	0x36
 2758 05b1 AC000000 		.4byte	0xac
 2759 05b5 17       		.uleb128 0x17
 2760 05b6 98020000 		.4byte	.LASF59
 2761 05ba 01       		.byte	0x1
 2762 05bb 37       		.byte	0x37
 2763 05bc AC000000 		.4byte	0xac
 2764 05c0 18       		.uleb128 0x18
 2765 05c1 6B000000 		.4byte	0x6b
 2766 05c5 CB050000 		.4byte	0x5cb
 2767 05c9 19       		.uleb128 0x19
 2768 05ca 00       		.byte	0
 2769 05cb 17       		.uleb128 0x17
 2770 05cc DE030000 		.4byte	.LASF60
 2771 05d0 01       		.byte	0x1
 2772 05d1 38       		.byte	0x38
 2773 05d2 D6050000 		.4byte	0x5d6
 2774 05d6 05       		.uleb128 0x5
 2775 05d7 C0050000 		.4byte	0x5c0
 2776 05db 17       		.uleb128 0x17
 2777 05dc ED000000 		.4byte	.LASF61
 2778 05e0 01       		.byte	0x1
 2779 05e1 3A       		.byte	0x3a
 2780 05e2 AC000000 		.4byte	0xac
 2781 05e6 17       		.uleb128 0x17
 2782 05e7 63040000 		.4byte	.LASF62
 2783 05eb 01       		.byte	0x1
 2784 05ec 3B       		.byte	0x3b
 2785 05ed AC000000 		.4byte	0xac
 2786 05f1 17       		.uleb128 0x17
 2787 05f2 0A040000 		.4byte	.LASF63
 2788 05f6 01       		.byte	0x1
 2789 05f7 3C       		.byte	0x3c
 2790 05f8 AC000000 		.4byte	0xac
 2791 05fc 17       		.uleb128 0x17
 2792 05fd 8B030000 		.4byte	.LASF64
 2793 0601 01       		.byte	0x1
 2794 0602 3D       		.byte	0x3d
 2795 0603 AC000000 		.4byte	0xac
 2796 0607 17       		.uleb128 0x17
 2797 0608 C9030000 		.4byte	.LASF65
 2798 060c 01       		.byte	0x1
 2799 060d 3E       		.byte	0x3e
 2800 060e AC000000 		.4byte	0xac
 2801 0612 18       		.uleb128 0x18
 2802 0613 41010000 		.4byte	0x141
 2803 0617 1D060000 		.4byte	0x61d
 2804 061b 19       		.uleb128 0x19
 2805 061c 00       		.byte	0
 2806 061d 17       		.uleb128 0x17
 2807 061e 7D030000 		.4byte	.LASF66
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 75


 2808 0622 01       		.byte	0x1
 2809 0623 40       		.byte	0x40
 2810 0624 28060000 		.4byte	0x628
 2811 0628 05       		.uleb128 0x5
 2812 0629 12060000 		.4byte	0x612
 2813 062d 17       		.uleb128 0x17
 2814 062e 1B000000 		.4byte	.LASF67
 2815 0632 01       		.byte	0x1
 2816 0633 43       		.byte	0x43
 2817 0634 38060000 		.4byte	0x638
 2818 0638 05       		.uleb128 0x5
 2819 0639 C0050000 		.4byte	0x5c0
 2820 063d 1A       		.uleb128 0x1a
 2821 063e 0D000000 		.4byte	.LASF68
 2822 0642 01       		.byte	0x1
 2823 0643 71       		.byte	0x71
 2824 0644 6B000000 		.4byte	0x6b
 2825 0648 05       		.uleb128 0x5
 2826 0649 03       		.byte	0x3
 2827 064a 00000000 		.4byte	USBFS_initVar
 2828 064e 18       		.uleb128 0x18
 2829 064f 6B000000 		.4byte	0x6b
 2830 0653 5E060000 		.4byte	0x65e
 2831 0657 1B       		.uleb128 0x1b
 2832 0658 C1000000 		.4byte	0xc1
 2833 065c 08       		.byte	0x8
 2834 065d 00       		.byte	0
 2835 065e 1A       		.uleb128 0x1a
 2836 065f 6D020000 		.4byte	.LASF69
 2837 0663 01       		.byte	0x1
 2838 0664 73       		.byte	0x73
 2839 0665 4E060000 		.4byte	0x64e
 2840 0669 05       		.uleb128 0x5
 2841 066a 03       		.byte	0x3
 2842 066b 00000000 		.4byte	USBFS_DmaChan
 2843 066f 1A       		.uleb128 0x1a
 2844 0670 A3000000 		.4byte	.LASF70
 2845 0674 01       		.byte	0x1
 2846 0675 74       		.byte	0x74
 2847 0676 4E060000 		.4byte	0x64e
 2848 067a 05       		.uleb128 0x5
 2849 067b 03       		.byte	0x3
 2850 067c 00000000 		.4byte	USBFS_DmaTd
 2851 0680 00       		.byte	0
 2852              		.section	.debug_abbrev,"",%progbits
 2853              	.Ldebug_abbrev0:
 2854 0000 01       		.uleb128 0x1
 2855 0001 11       		.uleb128 0x11
 2856 0002 01       		.byte	0x1
 2857 0003 25       		.uleb128 0x25
 2858 0004 0E       		.uleb128 0xe
 2859 0005 13       		.uleb128 0x13
 2860 0006 0B       		.uleb128 0xb
 2861 0007 03       		.uleb128 0x3
 2862 0008 0E       		.uleb128 0xe
 2863 0009 1B       		.uleb128 0x1b
 2864 000a 0E       		.uleb128 0xe
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 76


 2865 000b 55       		.uleb128 0x55
 2866 000c 17       		.uleb128 0x17
 2867 000d 11       		.uleb128 0x11
 2868 000e 01       		.uleb128 0x1
 2869 000f 10       		.uleb128 0x10
 2870 0010 17       		.uleb128 0x17
 2871 0011 00       		.byte	0
 2872 0012 00       		.byte	0
 2873 0013 02       		.uleb128 0x2
 2874 0014 24       		.uleb128 0x24
 2875 0015 00       		.byte	0
 2876 0016 0B       		.uleb128 0xb
 2877 0017 0B       		.uleb128 0xb
 2878 0018 3E       		.uleb128 0x3e
 2879 0019 0B       		.uleb128 0xb
 2880 001a 03       		.uleb128 0x3
 2881 001b 0E       		.uleb128 0xe
 2882 001c 00       		.byte	0
 2883 001d 00       		.byte	0
 2884 001e 03       		.uleb128 0x3
 2885 001f 24       		.uleb128 0x24
 2886 0020 00       		.byte	0
 2887 0021 0B       		.uleb128 0xb
 2888 0022 0B       		.uleb128 0xb
 2889 0023 3E       		.uleb128 0x3e
 2890 0024 0B       		.uleb128 0xb
 2891 0025 03       		.uleb128 0x3
 2892 0026 08       		.uleb128 0x8
 2893 0027 00       		.byte	0
 2894 0028 00       		.byte	0
 2895 0029 04       		.uleb128 0x4
 2896 002a 16       		.uleb128 0x16
 2897 002b 00       		.byte	0
 2898 002c 03       		.uleb128 0x3
 2899 002d 0E       		.uleb128 0xe
 2900 002e 3A       		.uleb128 0x3a
 2901 002f 0B       		.uleb128 0xb
 2902 0030 3B       		.uleb128 0x3b
 2903 0031 0B       		.uleb128 0xb
 2904 0032 49       		.uleb128 0x49
 2905 0033 13       		.uleb128 0x13
 2906 0034 00       		.byte	0
 2907 0035 00       		.byte	0
 2908 0036 05       		.uleb128 0x5
 2909 0037 35       		.uleb128 0x35
 2910 0038 00       		.byte	0
 2911 0039 49       		.uleb128 0x49
 2912 003a 13       		.uleb128 0x13
 2913 003b 00       		.byte	0
 2914 003c 00       		.byte	0
 2915 003d 06       		.uleb128 0x6
 2916 003e 13       		.uleb128 0x13
 2917 003f 01       		.byte	0x1
 2918 0040 03       		.uleb128 0x3
 2919 0041 0E       		.uleb128 0xe
 2920 0042 0B       		.uleb128 0xb
 2921 0043 0B       		.uleb128 0xb
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 77


 2922 0044 3A       		.uleb128 0x3a
 2923 0045 0B       		.uleb128 0xb
 2924 0046 3B       		.uleb128 0x3b
 2925 0047 0B       		.uleb128 0xb
 2926 0048 01       		.uleb128 0x1
 2927 0049 13       		.uleb128 0x13
 2928 004a 00       		.byte	0
 2929 004b 00       		.byte	0
 2930 004c 07       		.uleb128 0x7
 2931 004d 0D       		.uleb128 0xd
 2932 004e 00       		.byte	0
 2933 004f 03       		.uleb128 0x3
 2934 0050 0E       		.uleb128 0xe
 2935 0051 3A       		.uleb128 0x3a
 2936 0052 0B       		.uleb128 0xb
 2937 0053 3B       		.uleb128 0x3b
 2938 0054 0B       		.uleb128 0xb
 2939 0055 49       		.uleb128 0x49
 2940 0056 13       		.uleb128 0x13
 2941 0057 38       		.uleb128 0x38
 2942 0058 0B       		.uleb128 0xb
 2943 0059 00       		.byte	0
 2944 005a 00       		.byte	0
 2945 005b 08       		.uleb128 0x8
 2946 005c 2E       		.uleb128 0x2e
 2947 005d 01       		.byte	0x1
 2948 005e 3F       		.uleb128 0x3f
 2949 005f 19       		.uleb128 0x19
 2950 0060 03       		.uleb128 0x3
 2951 0061 0E       		.uleb128 0xe
 2952 0062 3A       		.uleb128 0x3a
 2953 0063 0B       		.uleb128 0xb
 2954 0064 3B       		.uleb128 0x3b
 2955 0065 0B       		.uleb128 0xb
 2956 0066 27       		.uleb128 0x27
 2957 0067 19       		.uleb128 0x19
 2958 0068 11       		.uleb128 0x11
 2959 0069 01       		.uleb128 0x1
 2960 006a 12       		.uleb128 0x12
 2961 006b 06       		.uleb128 0x6
 2962 006c 40       		.uleb128 0x40
 2963 006d 18       		.uleb128 0x18
 2964 006e 9642     		.uleb128 0x2116
 2965 0070 19       		.uleb128 0x19
 2966 0071 01       		.uleb128 0x1
 2967 0072 13       		.uleb128 0x13
 2968 0073 00       		.byte	0
 2969 0074 00       		.byte	0
 2970 0075 09       		.uleb128 0x9
 2971 0076 05       		.uleb128 0x5
 2972 0077 00       		.byte	0
 2973 0078 03       		.uleb128 0x3
 2974 0079 0E       		.uleb128 0xe
 2975 007a 3A       		.uleb128 0x3a
 2976 007b 0B       		.uleb128 0xb
 2977 007c 3B       		.uleb128 0x3b
 2978 007d 0B       		.uleb128 0xb
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 78


 2979 007e 49       		.uleb128 0x49
 2980 007f 13       		.uleb128 0x13
 2981 0080 02       		.uleb128 0x2
 2982 0081 18       		.uleb128 0x18
 2983 0082 00       		.byte	0
 2984 0083 00       		.byte	0
 2985 0084 0A       		.uleb128 0xa
 2986 0085 34       		.uleb128 0x34
 2987 0086 00       		.byte	0
 2988 0087 03       		.uleb128 0x3
 2989 0088 0E       		.uleb128 0xe
 2990 0089 3A       		.uleb128 0x3a
 2991 008a 0B       		.uleb128 0xb
 2992 008b 3B       		.uleb128 0x3b
 2993 008c 0B       		.uleb128 0xb
 2994 008d 49       		.uleb128 0x49
 2995 008e 13       		.uleb128 0x13
 2996 008f 02       		.uleb128 0x2
 2997 0090 18       		.uleb128 0x18
 2998 0091 00       		.byte	0
 2999 0092 00       		.byte	0
 3000 0093 0B       		.uleb128 0xb
 3001 0094 34       		.uleb128 0x34
 3002 0095 00       		.byte	0
 3003 0096 03       		.uleb128 0x3
 3004 0097 08       		.uleb128 0x8
 3005 0098 3A       		.uleb128 0x3a
 3006 0099 0B       		.uleb128 0xb
 3007 009a 3B       		.uleb128 0x3b
 3008 009b 0B       		.uleb128 0xb
 3009 009c 49       		.uleb128 0x49
 3010 009d 13       		.uleb128 0x13
 3011 009e 02       		.uleb128 0x2
 3012 009f 18       		.uleb128 0x18
 3013 00a0 00       		.byte	0
 3014 00a1 00       		.byte	0
 3015 00a2 0C       		.uleb128 0xc
 3016 00a3 2E       		.uleb128 0x2e
 3017 00a4 01       		.byte	0x1
 3018 00a5 3F       		.uleb128 0x3f
 3019 00a6 19       		.uleb128 0x19
 3020 00a7 03       		.uleb128 0x3
 3021 00a8 0E       		.uleb128 0xe
 3022 00a9 3A       		.uleb128 0x3a
 3023 00aa 0B       		.uleb128 0xb
 3024 00ab 3B       		.uleb128 0x3b
 3025 00ac 05       		.uleb128 0x5
 3026 00ad 27       		.uleb128 0x27
 3027 00ae 19       		.uleb128 0x19
 3028 00af 11       		.uleb128 0x11
 3029 00b0 01       		.uleb128 0x1
 3030 00b1 12       		.uleb128 0x12
 3031 00b2 06       		.uleb128 0x6
 3032 00b3 40       		.uleb128 0x40
 3033 00b4 18       		.uleb128 0x18
 3034 00b5 9642     		.uleb128 0x2116
 3035 00b7 19       		.uleb128 0x19
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 79


 3036 00b8 01       		.uleb128 0x1
 3037 00b9 13       		.uleb128 0x13
 3038 00ba 00       		.byte	0
 3039 00bb 00       		.byte	0
 3040 00bc 0D       		.uleb128 0xd
 3041 00bd 05       		.uleb128 0x5
 3042 00be 00       		.byte	0
 3043 00bf 03       		.uleb128 0x3
 3044 00c0 0E       		.uleb128 0xe
 3045 00c1 3A       		.uleb128 0x3a
 3046 00c2 0B       		.uleb128 0xb
 3047 00c3 3B       		.uleb128 0x3b
 3048 00c4 05       		.uleb128 0x5
 3049 00c5 49       		.uleb128 0x49
 3050 00c6 13       		.uleb128 0x13
 3051 00c7 02       		.uleb128 0x2
 3052 00c8 18       		.uleb128 0x18
 3053 00c9 00       		.byte	0
 3054 00ca 00       		.byte	0
 3055 00cb 0E       		.uleb128 0xe
 3056 00cc 34       		.uleb128 0x34
 3057 00cd 00       		.byte	0
 3058 00ce 03       		.uleb128 0x3
 3059 00cf 0E       		.uleb128 0xe
 3060 00d0 3A       		.uleb128 0x3a
 3061 00d1 0B       		.uleb128 0xb
 3062 00d2 3B       		.uleb128 0x3b
 3063 00d3 05       		.uleb128 0x5
 3064 00d4 49       		.uleb128 0x49
 3065 00d5 13       		.uleb128 0x13
 3066 00d6 02       		.uleb128 0x2
 3067 00d7 18       		.uleb128 0x18
 3068 00d8 00       		.byte	0
 3069 00d9 00       		.byte	0
 3070 00da 0F       		.uleb128 0xf
 3071 00db 2E       		.uleb128 0x2e
 3072 00dc 01       		.byte	0x1
 3073 00dd 3F       		.uleb128 0x3f
 3074 00de 19       		.uleb128 0x19
 3075 00df 03       		.uleb128 0x3
 3076 00e0 0E       		.uleb128 0xe
 3077 00e1 3A       		.uleb128 0x3a
 3078 00e2 0B       		.uleb128 0xb
 3079 00e3 3B       		.uleb128 0x3b
 3080 00e4 05       		.uleb128 0x5
 3081 00e5 11       		.uleb128 0x11
 3082 00e6 01       		.uleb128 0x1
 3083 00e7 12       		.uleb128 0x12
 3084 00e8 06       		.uleb128 0x6
 3085 00e9 40       		.uleb128 0x40
 3086 00ea 18       		.uleb128 0x18
 3087 00eb 9742     		.uleb128 0x2117
 3088 00ed 19       		.uleb128 0x19
 3089 00ee 01       		.uleb128 0x1
 3090 00ef 13       		.uleb128 0x13
 3091 00f0 00       		.byte	0
 3092 00f1 00       		.byte	0
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 80


 3093 00f2 10       		.uleb128 0x10
 3094 00f3 2E       		.uleb128 0x2e
 3095 00f4 00       		.byte	0
 3096 00f5 3F       		.uleb128 0x3f
 3097 00f6 19       		.uleb128 0x19
 3098 00f7 03       		.uleb128 0x3
 3099 00f8 0E       		.uleb128 0xe
 3100 00f9 3A       		.uleb128 0x3a
 3101 00fa 0B       		.uleb128 0xb
 3102 00fb 3B       		.uleb128 0x3b
 3103 00fc 05       		.uleb128 0x5
 3104 00fd 27       		.uleb128 0x27
 3105 00fe 19       		.uleb128 0x19
 3106 00ff 11       		.uleb128 0x11
 3107 0100 01       		.uleb128 0x1
 3108 0101 12       		.uleb128 0x12
 3109 0102 06       		.uleb128 0x6
 3110 0103 40       		.uleb128 0x40
 3111 0104 18       		.uleb128 0x18
 3112 0105 9642     		.uleb128 0x2116
 3113 0107 19       		.uleb128 0x19
 3114 0108 00       		.byte	0
 3115 0109 00       		.byte	0
 3116 010a 11       		.uleb128 0x11
 3117 010b 2E       		.uleb128 0x2e
 3118 010c 01       		.byte	0x1
 3119 010d 3F       		.uleb128 0x3f
 3120 010e 19       		.uleb128 0x19
 3121 010f 03       		.uleb128 0x3
 3122 0110 0E       		.uleb128 0xe
 3123 0111 3A       		.uleb128 0x3a
 3124 0112 0B       		.uleb128 0xb
 3125 0113 3B       		.uleb128 0x3b
 3126 0114 05       		.uleb128 0x5
 3127 0115 27       		.uleb128 0x27
 3128 0116 19       		.uleb128 0x19
 3129 0117 49       		.uleb128 0x49
 3130 0118 13       		.uleb128 0x13
 3131 0119 11       		.uleb128 0x11
 3132 011a 01       		.uleb128 0x1
 3133 011b 12       		.uleb128 0x12
 3134 011c 06       		.uleb128 0x6
 3135 011d 40       		.uleb128 0x40
 3136 011e 18       		.uleb128 0x18
 3137 011f 9742     		.uleb128 0x2117
 3138 0121 19       		.uleb128 0x19
 3139 0122 01       		.uleb128 0x1
 3140 0123 13       		.uleb128 0x13
 3141 0124 00       		.byte	0
 3142 0125 00       		.byte	0
 3143 0126 12       		.uleb128 0x12
 3144 0127 34       		.uleb128 0x34
 3145 0128 00       		.byte	0
 3146 0129 03       		.uleb128 0x3
 3147 012a 08       		.uleb128 0x8
 3148 012b 3A       		.uleb128 0x3a
 3149 012c 0B       		.uleb128 0xb
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 81


 3150 012d 3B       		.uleb128 0x3b
 3151 012e 05       		.uleb128 0x5
 3152 012f 49       		.uleb128 0x49
 3153 0130 13       		.uleb128 0x13
 3154 0131 02       		.uleb128 0x2
 3155 0132 18       		.uleb128 0x18
 3156 0133 00       		.byte	0
 3157 0134 00       		.byte	0
 3158 0135 13       		.uleb128 0x13
 3159 0136 2E       		.uleb128 0x2e
 3160 0137 00       		.byte	0
 3161 0138 3F       		.uleb128 0x3f
 3162 0139 19       		.uleb128 0x19
 3163 013a 03       		.uleb128 0x3
 3164 013b 0E       		.uleb128 0xe
 3165 013c 3A       		.uleb128 0x3a
 3166 013d 0B       		.uleb128 0xb
 3167 013e 3B       		.uleb128 0x3b
 3168 013f 05       		.uleb128 0x5
 3169 0140 27       		.uleb128 0x27
 3170 0141 19       		.uleb128 0x19
 3171 0142 49       		.uleb128 0x49
 3172 0143 13       		.uleb128 0x13
 3173 0144 11       		.uleb128 0x11
 3174 0145 01       		.uleb128 0x1
 3175 0146 12       		.uleb128 0x12
 3176 0147 06       		.uleb128 0x6
 3177 0148 40       		.uleb128 0x40
 3178 0149 18       		.uleb128 0x18
 3179 014a 9742     		.uleb128 0x2117
 3180 014c 19       		.uleb128 0x19
 3181 014d 00       		.byte	0
 3182 014e 00       		.byte	0
 3183 014f 14       		.uleb128 0x14
 3184 0150 0F       		.uleb128 0xf
 3185 0151 00       		.byte	0
 3186 0152 0B       		.uleb128 0xb
 3187 0153 0B       		.uleb128 0xb
 3188 0154 49       		.uleb128 0x49
 3189 0155 13       		.uleb128 0x13
 3190 0156 00       		.byte	0
 3191 0157 00       		.byte	0
 3192 0158 15       		.uleb128 0x15
 3193 0159 2E       		.uleb128 0x2e
 3194 015a 01       		.byte	0x1
 3195 015b 3F       		.uleb128 0x3f
 3196 015c 19       		.uleb128 0x19
 3197 015d 03       		.uleb128 0x3
 3198 015e 0E       		.uleb128 0xe
 3199 015f 3A       		.uleb128 0x3a
 3200 0160 0B       		.uleb128 0xb
 3201 0161 3B       		.uleb128 0x3b
 3202 0162 05       		.uleb128 0x5
 3203 0163 27       		.uleb128 0x27
 3204 0164 19       		.uleb128 0x19
 3205 0165 49       		.uleb128 0x49
 3206 0166 13       		.uleb128 0x13
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 82


 3207 0167 11       		.uleb128 0x11
 3208 0168 01       		.uleb128 0x1
 3209 0169 12       		.uleb128 0x12
 3210 016a 06       		.uleb128 0x6
 3211 016b 40       		.uleb128 0x40
 3212 016c 18       		.uleb128 0x18
 3213 016d 9642     		.uleb128 0x2116
 3214 016f 19       		.uleb128 0x19
 3215 0170 01       		.uleb128 0x1
 3216 0171 13       		.uleb128 0x13
 3217 0172 00       		.byte	0
 3218 0173 00       		.byte	0
 3219 0174 16       		.uleb128 0x16
 3220 0175 2E       		.uleb128 0x2e
 3221 0176 01       		.byte	0x1
 3222 0177 3F       		.uleb128 0x3f
 3223 0178 19       		.uleb128 0x19
 3224 0179 03       		.uleb128 0x3
 3225 017a 0E       		.uleb128 0xe
 3226 017b 3A       		.uleb128 0x3a
 3227 017c 0B       		.uleb128 0xb
 3228 017d 3B       		.uleb128 0x3b
 3229 017e 05       		.uleb128 0x5
 3230 017f 27       		.uleb128 0x27
 3231 0180 19       		.uleb128 0x19
 3232 0181 11       		.uleb128 0x11
 3233 0182 01       		.uleb128 0x1
 3234 0183 12       		.uleb128 0x12
 3235 0184 06       		.uleb128 0x6
 3236 0185 40       		.uleb128 0x40
 3237 0186 18       		.uleb128 0x18
 3238 0187 9742     		.uleb128 0x2117
 3239 0189 19       		.uleb128 0x19
 3240 018a 01       		.uleb128 0x1
 3241 018b 13       		.uleb128 0x13
 3242 018c 00       		.byte	0
 3243 018d 00       		.byte	0
 3244 018e 17       		.uleb128 0x17
 3245 018f 34       		.uleb128 0x34
 3246 0190 00       		.byte	0
 3247 0191 03       		.uleb128 0x3
 3248 0192 0E       		.uleb128 0xe
 3249 0193 3A       		.uleb128 0x3a
 3250 0194 0B       		.uleb128 0xb
 3251 0195 3B       		.uleb128 0x3b
 3252 0196 0B       		.uleb128 0xb
 3253 0197 49       		.uleb128 0x49
 3254 0198 13       		.uleb128 0x13
 3255 0199 3F       		.uleb128 0x3f
 3256 019a 19       		.uleb128 0x19
 3257 019b 3C       		.uleb128 0x3c
 3258 019c 19       		.uleb128 0x19
 3259 019d 00       		.byte	0
 3260 019e 00       		.byte	0
 3261 019f 18       		.uleb128 0x18
 3262 01a0 01       		.uleb128 0x1
 3263 01a1 01       		.byte	0x1
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 83


 3264 01a2 49       		.uleb128 0x49
 3265 01a3 13       		.uleb128 0x13
 3266 01a4 01       		.uleb128 0x1
 3267 01a5 13       		.uleb128 0x13
 3268 01a6 00       		.byte	0
 3269 01a7 00       		.byte	0
 3270 01a8 19       		.uleb128 0x19
 3271 01a9 21       		.uleb128 0x21
 3272 01aa 00       		.byte	0
 3273 01ab 00       		.byte	0
 3274 01ac 00       		.byte	0
 3275 01ad 1A       		.uleb128 0x1a
 3276 01ae 34       		.uleb128 0x34
 3277 01af 00       		.byte	0
 3278 01b0 03       		.uleb128 0x3
 3279 01b1 0E       		.uleb128 0xe
 3280 01b2 3A       		.uleb128 0x3a
 3281 01b3 0B       		.uleb128 0xb
 3282 01b4 3B       		.uleb128 0x3b
 3283 01b5 0B       		.uleb128 0xb
 3284 01b6 49       		.uleb128 0x49
 3285 01b7 13       		.uleb128 0x13
 3286 01b8 3F       		.uleb128 0x3f
 3287 01b9 19       		.uleb128 0x19
 3288 01ba 02       		.uleb128 0x2
 3289 01bb 18       		.uleb128 0x18
 3290 01bc 00       		.byte	0
 3291 01bd 00       		.byte	0
 3292 01be 1B       		.uleb128 0x1b
 3293 01bf 21       		.uleb128 0x21
 3294 01c0 00       		.byte	0
 3295 01c1 49       		.uleb128 0x49
 3296 01c2 13       		.uleb128 0x13
 3297 01c3 2F       		.uleb128 0x2f
 3298 01c4 0B       		.uleb128 0xb
 3299 01c5 00       		.byte	0
 3300 01c6 00       		.byte	0
 3301 01c7 00       		.byte	0
 3302              		.section	.debug_aranges,"",%progbits
 3303 0000 BC000000 		.4byte	0xbc
 3304 0004 0200     		.2byte	0x2
 3305 0006 00000000 		.4byte	.Ldebug_info0
 3306 000a 04       		.byte	0x4
 3307 000b 00       		.byte	0
 3308 000c 0000     		.2byte	0
 3309 000e 0000     		.2byte	0
 3310 0010 00000000 		.4byte	.LFB0
 3311 0014 38000000 		.4byte	.LFE0-.LFB0
 3312 0018 00000000 		.4byte	.LFB1
 3313 001c D4010000 		.4byte	.LFE1-.LFB1
 3314 0020 00000000 		.4byte	.LFB2
 3315 0024 18010000 		.4byte	.LFE2-.LFB2
 3316 0028 00000000 		.4byte	.LFB3
 3317 002c 88000000 		.4byte	.LFE3-.LFB3
 3318 0030 00000000 		.4byte	.LFB4
 3319 0034 C4000000 		.4byte	.LFE4-.LFB4
 3320 0038 00000000 		.4byte	.LFB5
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 84


 3321 003c 34000000 		.4byte	.LFE5-.LFB5
 3322 0040 00000000 		.4byte	.LFB6
 3323 0044 18000000 		.4byte	.LFE6-.LFB6
 3324 0048 00000000 		.4byte	.LFB7
 3325 004c 34000000 		.4byte	.LFE7-.LFB7
 3326 0050 00000000 		.4byte	.LFB8
 3327 0054 24000000 		.4byte	.LFE8-.LFB8
 3328 0058 00000000 		.4byte	.LFB9
 3329 005c 2C000000 		.4byte	.LFE9-.LFB9
 3330 0060 00000000 		.4byte	.LFB10
 3331 0064 64000000 		.4byte	.LFE10-.LFB10
 3332 0068 00000000 		.4byte	.LFB11
 3333 006c 00010000 		.4byte	.LFE11-.LFB11
 3334 0070 00000000 		.4byte	.LFB12
 3335 0074 64000000 		.4byte	.LFE12-.LFB12
 3336 0078 00000000 		.4byte	.LFB13
 3337 007c 64010000 		.4byte	.LFE13-.LFB13
 3338 0080 00000000 		.4byte	.LFB14
 3339 0084 D0000000 		.4byte	.LFE14-.LFB14
 3340 0088 00000000 		.4byte	.LFB15
 3341 008c 60000000 		.4byte	.LFE15-.LFB15
 3342 0090 00000000 		.4byte	.LFB16
 3343 0094 38000000 		.4byte	.LFE16-.LFB16
 3344 0098 00000000 		.4byte	.LFB17
 3345 009c 20000000 		.4byte	.LFE17-.LFB17
 3346 00a0 00000000 		.4byte	.LFB18
 3347 00a4 48000000 		.4byte	.LFE18-.LFB18
 3348 00a8 00000000 		.4byte	.LFB19
 3349 00ac 40000000 		.4byte	.LFE19-.LFB19
 3350 00b0 00000000 		.4byte	.LFB20
 3351 00b4 30000000 		.4byte	.LFE20-.LFB20
 3352 00b8 00000000 		.4byte	0
 3353 00bc 00000000 		.4byte	0
 3354              		.section	.debug_ranges,"",%progbits
 3355              	.Ldebug_ranges0:
 3356 0000 00000000 		.4byte	.LFB0
 3357 0004 38000000 		.4byte	.LFE0
 3358 0008 00000000 		.4byte	.LFB1
 3359 000c D4010000 		.4byte	.LFE1
 3360 0010 00000000 		.4byte	.LFB2
 3361 0014 18010000 		.4byte	.LFE2
 3362 0018 00000000 		.4byte	.LFB3
 3363 001c 88000000 		.4byte	.LFE3
 3364 0020 00000000 		.4byte	.LFB4
 3365 0024 C4000000 		.4byte	.LFE4
 3366 0028 00000000 		.4byte	.LFB5
 3367 002c 34000000 		.4byte	.LFE5
 3368 0030 00000000 		.4byte	.LFB6
 3369 0034 18000000 		.4byte	.LFE6
 3370 0038 00000000 		.4byte	.LFB7
 3371 003c 34000000 		.4byte	.LFE7
 3372 0040 00000000 		.4byte	.LFB8
 3373 0044 24000000 		.4byte	.LFE8
 3374 0048 00000000 		.4byte	.LFB9
 3375 004c 2C000000 		.4byte	.LFE9
 3376 0050 00000000 		.4byte	.LFB10
 3377 0054 64000000 		.4byte	.LFE10
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 85


 3378 0058 00000000 		.4byte	.LFB11
 3379 005c 00010000 		.4byte	.LFE11
 3380 0060 00000000 		.4byte	.LFB12
 3381 0064 64000000 		.4byte	.LFE12
 3382 0068 00000000 		.4byte	.LFB13
 3383 006c 64010000 		.4byte	.LFE13
 3384 0070 00000000 		.4byte	.LFB14
 3385 0074 D0000000 		.4byte	.LFE14
 3386 0078 00000000 		.4byte	.LFB15
 3387 007c 60000000 		.4byte	.LFE15
 3388 0080 00000000 		.4byte	.LFB16
 3389 0084 38000000 		.4byte	.LFE16
 3390 0088 00000000 		.4byte	.LFB17
 3391 008c 20000000 		.4byte	.LFE17
 3392 0090 00000000 		.4byte	.LFB18
 3393 0094 48000000 		.4byte	.LFE18
 3394 0098 00000000 		.4byte	.LFB19
 3395 009c 40000000 		.4byte	.LFE19
 3396 00a0 00000000 		.4byte	.LFB20
 3397 00a4 30000000 		.4byte	.LFE20
 3398 00a8 00000000 		.4byte	0
 3399 00ac 00000000 		.4byte	0
 3400              		.section	.debug_line,"",%progbits
 3401              	.Ldebug_line0:
 3402 0000 33030000 		.section	.debug_str,"MS",%progbits,1
 3402      02006600 
 3402      00000201 
 3402      FB0E0D00 
 3402      01010101 
 3403              	.LASF41:
 3404 0000 636F756E 		.ascii	"count\000"
 3404      7400
 3405              	.LASF10:
 3406 0006 75696E74 		.ascii	"uint16\000"
 3406      313600
 3407              	.LASF68:
 3408 000d 55534246 		.ascii	"USBFS_initVar\000"
 3408      535F696E 
 3408      69745661 
 3408      7200
 3409              	.LASF67:
 3410 001b 55534246 		.ascii	"USBFS_hidProtocol\000"
 3410      535F6869 
 3410      6450726F 
 3410      746F636F 
 3410      6C00
 3411              	.LASF50:
 3412 002d 55534246 		.ascii	"USBFS_Force\000"
 3412      535F466F 
 3412      72636500 
 3413              	.LASF7:
 3414 0039 6C6F6E67 		.ascii	"long long unsigned int\000"
 3414      206C6F6E 
 3414      6720756E 
 3414      7369676E 
 3414      65642069 
 3415              	.LASF52:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 86


 3416 0050 55534246 		.ascii	"USBFS_GetEPAckState\000"
 3416      535F4765 
 3416      74455041 
 3416      636B5374 
 3416      61746500 
 3417              	.LASF22:
 3418 0064 61646472 		.ascii	"addr\000"
 3418      00
 3419              	.LASF37:
 3420 0069 696E7465 		.ascii	"interfaceNumber\000"
 3420      72666163 
 3420      654E756D 
 3420      62657200 
 3421              	.LASF39:
 3422 0079 65704E75 		.ascii	"epNumber\000"
 3422      6D626572 
 3422      00
 3423              	.LASF28:
 3424 0082 64657669 		.ascii	"device\000"
 3424      636500
 3425              	.LASF6:
 3426 0089 6C6F6E67 		.ascii	"long long int\000"
 3426      206C6F6E 
 3426      6720696E 
 3426      7400
 3427              	.LASF0:
 3428 0097 7369676E 		.ascii	"signed char\000"
 3428      65642063 
 3428      68617200 
 3429              	.LASF70:
 3430 00a3 55534246 		.ascii	"USBFS_DmaTd\000"
 3430      535F446D 
 3430      61546400 
 3431              	.LASF72:
 3432 00af 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS.c\000"
 3432      6E657261 
 3432      7465645F 
 3432      536F7572 
 3432      63655C50 
 3433              	.LASF35:
 3434 00d0 55534246 		.ascii	"USBFS_IsConfigurationChanged\000"
 3434      535F4973 
 3434      436F6E66 
 3434      69677572 
 3434      6174696F 
 3435              	.LASF61:
 3436 00ed 55534246 		.ascii	"USBFS_deviceAddress\000"
 3436      535F6465 
 3436      76696365 
 3436      41646472 
 3436      65737300 
 3437              	.LASF58:
 3438 0101 55534246 		.ascii	"USBFS_interfaceNumber\000"
 3438      535F696E 
 3438      74657266 
 3438      6163654E 
 3438      756D6265 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 87


 3439              	.LASF55:
 3440 0117 55534246 		.ascii	"USBFS_RWUEnabled\000"
 3440      535F5257 
 3440      55456E61 
 3440      626C6564 
 3440      00
 3441              	.LASF53:
 3442 0128 55534246 		.ascii	"USBFS_SetPowerStatus\000"
 3442      535F5365 
 3442      74506F77 
 3442      65725374 
 3442      61747573 
 3443              	.LASF76:
 3444 013d 55534246 		.ascii	"USBFS_Stop\000"
 3444      535F5374 
 3444      6F7000
 3445              	.LASF4:
 3446 0148 6C6F6E67 		.ascii	"long int\000"
 3446      20696E74 
 3446      00
 3447              	.LASF77:
 3448 0151 55534246 		.ascii	"USBFS_GetConfiguration\000"
 3448      535F4765 
 3448      74436F6E 
 3448      66696775 
 3448      72617469 
 3449              	.LASF9:
 3450 0168 75696E74 		.ascii	"uint8\000"
 3450      3800
 3451              	.LASF21:
 3452 016e 6570546F 		.ascii	"epToggle\000"
 3452      67676C65 
 3452      00
 3453              	.LASF13:
 3454 0177 646F7562 		.ascii	"double\000"
 3454      6C6500
 3455              	.LASF73:
 3456 017e 433A5C55 		.ascii	"C:\\Users\\lukas\\Desktop\\PioneerKit_P5LP_USB_Audi"
 3456      73657273 
 3456      5C6C756B 
 3456      61735C44 
 3456      65736B74 
 3457 01ad 6F2D6D61 		.ascii	"o-master\\PioneerKit_P5LP_USB_Audio.cydsn\000"
 3457      73746572 
 3457      5C50696F 
 3457      6E656572 
 3457      4B69745F 
 3458              	.LASF42:
 3459 01d6 55534246 		.ascii	"USBFS_InitEP_DMA\000"
 3459      535F496E 
 3459      69744550 
 3459      5F444D41 
 3459      00
 3460              	.LASF11:
 3461 01e7 75696E74 		.ascii	"uint32\000"
 3461      333200
 3462              	.LASF33:
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 88


 3463 01ee 55534246 		.ascii	"USBFS_InitComponent\000"
 3463      535F496E 
 3463      6974436F 
 3463      6D706F6E 
 3463      656E7400 
 3464              	.LASF43:
 3465 0202 70446174 		.ascii	"pData\000"
 3465      6100
 3466              	.LASF57:
 3467 0208 55534246 		.ascii	"USBFS_configuration\000"
 3467      535F636F 
 3467      6E666967 
 3467      75726174 
 3467      696F6E00 
 3468              	.LASF23:
 3469 021c 65704D6F 		.ascii	"epMode\000"
 3469      646500
 3470              	.LASF47:
 3471 0223 55534246 		.ascii	"USBFS_ReadOutEP\000"
 3471      535F5265 
 3471      61644F75 
 3471      74455000 
 3472              	.LASF44:
 3473 0233 55534246 		.ascii	"USBFS_Stop_DMA\000"
 3473      535F5374 
 3473      6F705F44 
 3473      4D4100
 3474              	.LASF8:
 3475 0242 756E7369 		.ascii	"unsigned int\000"
 3475      676E6564 
 3475      20696E74 
 3475      00
 3476              	.LASF54:
 3477 024f 706F7765 		.ascii	"powerStatus\000"
 3477      72537461 
 3477      74757300 
 3478              	.LASF5:
 3479 025b 6C6F6E67 		.ascii	"long unsigned int\000"
 3479      20756E73 
 3479      69676E65 
 3479      6420696E 
 3479      7400
 3480              	.LASF69:
 3481 026d 55534246 		.ascii	"USBFS_DmaChan\000"
 3481      535F446D 
 3481      61436861 
 3481      6E00
 3482              	.LASF3:
 3483 027b 73686F72 		.ascii	"short unsigned int\000"
 3483      7420756E 
 3483      7369676E 
 3483      65642069 
 3483      6E7400
 3484              	.LASF26:
 3485 028e 696E7465 		.ascii	"interface\000"
 3485      72666163 
 3485      6500
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 89


 3486              	.LASF59:
 3487 0298 55534246 		.ascii	"USBFS_configurationChanged\000"
 3487      535F636F 
 3487      6E666967 
 3487      75726174 
 3487      696F6E43 
 3488              	.LASF16:
 3489 02b3 72656733 		.ascii	"reg32\000"
 3489      3200
 3490              	.LASF20:
 3491 02b9 68774570 		.ascii	"hwEpState\000"
 3491      53746174 
 3491      6500
 3492              	.LASF17:
 3493 02c3 73697A65 		.ascii	"sizetype\000"
 3493      74797065 
 3493      00
 3494              	.LASF18:
 3495 02cc 61747472 		.ascii	"attrib\000"
 3495      696200
 3496              	.LASF71:
 3497 02d3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3497      4320342E 
 3497      392E3320 
 3497      32303135 
 3497      30333033 
 3498 0306 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3498      20726576 
 3498      6973696F 
 3498      6E203232 
 3498      31323230 
 3499 0339 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3499      66756E63 
 3499      74696F6E 
 3499      2D736563 
 3499      74696F6E 
 3500              	.LASF31:
 3501 0361 55534246 		.ascii	"USBFS_Init\000"
 3501      535F496E 
 3501      697400
 3502              	.LASF12:
 3503 036c 666C6F61 		.ascii	"float\000"
 3503      7400
 3504              	.LASF19:
 3505 0372 61706945 		.ascii	"apiEpState\000"
 3505      70537461 
 3505      746500
 3506              	.LASF66:
 3507 037d 55534246 		.ascii	"USBFS_EP\000"
 3507      535F4550 
 3507      00
 3508              	.LASF15:
 3509 0386 72656738 		.ascii	"reg8\000"
 3509      00
 3510              	.LASF64:
 3511 038b 55534246 		.ascii	"USBFS_transferState\000"
 3511      535F7472 
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 90


 3511      616E7366 
 3511      65725374 
 3511      61746500 
 3512              	.LASF1:
 3513 039f 756E7369 		.ascii	"unsigned char\000"
 3513      676E6564 
 3513      20636861 
 3513      7200
 3514              	.LASF2:
 3515 03ad 73686F72 		.ascii	"short int\000"
 3515      7420696E 
 3515      7400
 3516              	.LASF48:
 3517 03b7 55534246 		.ascii	"USBFS_EnableOutEP\000"
 3517      535F456E 
 3517      61626C65 
 3517      4F757445 
 3517      5000
 3518              	.LASF65:
 3519 03c9 55534246 		.ascii	"USBFS_lastPacketSize\000"
 3519      535F6C61 
 3519      73745061 
 3519      636B6574 
 3519      53697A65 
 3520              	.LASF60:
 3521 03de 55534246 		.ascii	"USBFS_interfaceSetting\000"
 3521      535F696E 
 3521      74657266 
 3521      61636553 
 3521      65747469 
 3522              	.LASF27:
 3523 03f5 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 3523      4246535F 
 3523      45505F43 
 3523      544C5F42 
 3523      4C4F434B 
 3524              	.LASF63:
 3525 040a 55534246 		.ascii	"USBFS_device\000"
 3525      535F6465 
 3525      76696365 
 3525      00
 3526              	.LASF51:
 3527 0417 62537461 		.ascii	"bState\000"
 3527      746500
 3528              	.LASF46:
 3529 041e 6C656E67 		.ascii	"length\000"
 3529      746800
 3530              	.LASF14:
 3531 0425 63686172 		.ascii	"char\000"
 3531      00
 3532              	.LASF29:
 3533 042a 6D6F6465 		.ascii	"mode\000"
 3533      00
 3534              	.LASF25:
 3535 042f 62756666 		.ascii	"bufferSize\000"
 3535      65725369 
 3535      7A6500
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 91


 3536              	.LASF30:
 3537 043a 55534246 		.ascii	"USBFS_Start\000"
 3537      535F5374 
 3537      61727400 
 3538              	.LASF24:
 3539 0446 62756666 		.ascii	"buffOffset\000"
 3539      4F666673 
 3539      657400
 3540              	.LASF74:
 3541 0451 5F555342 		.ascii	"_USBFS_EpCtlBlock\000"
 3541      46535F45 
 3541      7043746C 
 3541      426C6F63 
 3541      6B00
 3542              	.LASF62:
 3543 0463 55534246 		.ascii	"USBFS_deviceStatus\000"
 3543      535F6465 
 3543      76696365 
 3543      53746174 
 3543      757300
 3544              	.LASF38:
 3545 0476 55534246 		.ascii	"USBFS_GetEPState\000"
 3545      535F4765 
 3545      74455053 
 3545      74617465 
 3545      00
 3546              	.LASF75:
 3547 0487 55534246 		.ascii	"USBFS_ReInitComponent\000"
 3547      535F5265 
 3547      496E6974 
 3547      436F6D70 
 3547      6F6E656E 
 3548              	.LASF32:
 3549 049d 656E6162 		.ascii	"enableInterrupts\000"
 3549      6C65496E 
 3549      74657272 
 3549      75707473 
 3549      00
 3550              	.LASF34:
 3551 04ae 55534246 		.ascii	"USBFS_CheckActivity\000"
 3551      535F4368 
 3551      65636B41 
 3551      63746976 
 3551      69747900 
 3552              	.LASF49:
 3553 04c2 55534246 		.ascii	"USBFS_DisableOutEP\000"
 3553      535F4469 
 3553      7361626C 
 3553      654F7574 
 3553      455000
 3554              	.LASF45:
 3555 04d5 55534246 		.ascii	"USBFS_LoadInEP\000"
 3555      535F4C6F 
 3555      6164496E 
 3555      455000
 3556              	.LASF36:
 3557 04e4 55534246 		.ascii	"USBFS_GetInterfaceSetting\000"
ARM GAS  C:\USERS\LUKAS\APPDATA\LOCAL\TEMP\ccv8RnTj.s 			page 92


 3557      535F4765 
 3557      74496E74 
 3557      65726661 
 3557      63655365 
 3558              	.LASF40:
 3559 04fe 55534246 		.ascii	"USBFS_GetEPCount\000"
 3559      535F4765 
 3559      74455043 
 3559      6F756E74 
 3559      00
 3560              	.LASF56:
 3561 050f 72657375 		.ascii	"result\000"
 3561      6C7400
 3562              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
